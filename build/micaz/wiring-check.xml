<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413af850"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4135d3c8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c1d9f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c0f180"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bf85b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40be38b0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b2ab48"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a98430"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a0a440"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40675ae8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41200df0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408b4598"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40613158"/></to>
    </wire>
    <wire loc="38:OscilloscopeAppC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cca8a0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40cca8a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d42798"/></to>
    </wire>
    <wire loc="39:OscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40cca538"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403f1bb8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403f1bb8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x405731c8"/></to>
    </wire>
    <wire loc="41:OscilloscopeAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4044ace8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40578be8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40578be8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405a7270"/></to>
    </wire>
    <wire loc="42:OscilloscopeAppC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40450830"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4058aea8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4058aea8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ada100"/></to>
    </wire>
    <wire loc="43:OscilloscopeAppC.nc">
      <from><interface-ref name="GlobalTime" scoped="" ref="0x40448178"/></from>
      <to><interface-ref name="GlobalTime" scoped="" ref="0x40cc81a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="GlobalTime" scoped="" ref="0x40cc81a8"/></from>
      <to><interface-ref name="GlobalTime" scoped="" ref="0x40d41010"/></to>
    </wire>
    <wire loc="44:OscilloscopeAppC.nc">
      <from><interface-ref name="TimeSyncInfo" scoped="" ref="0x4044e748"/></from>
      <to><interface-ref name="TimeSyncInfo" scoped="" ref="0x40cc7318"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncInfo" scoped="" ref="0x40cc7318"/></from>
      <to><interface-ref name="TimeSyncInfo" scoped="" ref="0x40d400e8"/></to>
    </wire>
    <wire loc="49:OscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403f6010"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403f1bb8"/></to>
    </wire>
    <wire loc="50:OscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x403fa468"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4047df18"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4047df18"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405988f8"/></to>
    </wire>
    <wire loc="53:OscilloscopeAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4042e098"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40e23d20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40e23d20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413b8aa0"/></to>
    </wire>
    <wire loc="54:OscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40434230"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40fbf118"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40fbf118"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405781f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x403f5010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e08e10"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e08e10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bbe2a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer_one" scoped="" ref="0x404553e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e29960"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e29960"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bbe2a8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x404570a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e2dbc0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e2dbc0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bbe2a8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:OscilloscopeAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4043f670"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40e24680"/></to>
    </wire>
    <wire loc="23:DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40e24680"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41335610"/></to>
    </wire>
    <wire loc="60:OscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40442298"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40978040"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40978040"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409756d8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40573560"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40353ed8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40353ed8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403ce4f8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40573b28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4047c090"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4047c090"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40488be0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40572010"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40488140"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40eda388"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40488140"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4074edb8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x404849c8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40558c08"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x4048e418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40558858"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4048e010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409a0a38"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4048e010"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40487408"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40487408"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404893d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404877d8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40488140"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x404909e8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x40497ea8"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x40497ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404e86b0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404944a8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404877d8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404b5210"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40536ee0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x404a1750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404f54f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404f54f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41088de0"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404b2ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40504030"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40504030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410c3c08"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404adea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4050a890"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4050a890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41102538"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404952f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404e7988"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404e7988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fcc9e8"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x404aea98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4050b5d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4050b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41105010"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404a0750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404ee888"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404ee888"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41012938"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x404a6ea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404f04f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404f04f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4104a9e8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404ab670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404ff170"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404ff170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41083c08"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x404b0c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40503c88"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40503c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410bea88"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40498010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404de968"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404de968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd4718"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x4049e670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404ec5d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404ec5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4100d7f8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x404a4ce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404fa170"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404fa170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410459e8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404a94b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404fde48"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404fde48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4107da88"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404b7ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405085d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x405085d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410fc538"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404b32f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4053cdd8"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x404a78e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40506d30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40506d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410c67f8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404e86b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fcf570"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x4049c590"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404ea250"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404ea250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410086c0"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x404b5e08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x405323e8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x4049ba08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404f2228"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404f2228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4104d538"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404ac210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404f5e48"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404f5e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410867f8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404b1750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40504988"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40504988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410c16c0"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404b88e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40509250"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40509250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41100010"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x40495ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404e6330"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404e6330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fca538"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x4049f210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404ed250"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404ed250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410103b0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x404a58e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404f0e48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404f0e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41048538"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404aa0a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404ffac8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404ffac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410816c0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x404af670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405026b0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x405026b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410bc538"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40498a08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404dd330"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404dd330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd20f8"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x4049d0a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404ecf28"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404ecf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4100b228"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x404a3750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404faac8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404faac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41043538"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x404b6750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40508f28"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40508f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410fa010"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x404a2c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404f6b00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404f6b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41089418"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404b22f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405056b0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x405056b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410c4228"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404ad4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4050bf28"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4050bf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411049e8"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x404b3ce8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x405463b0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x404968e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404e7030"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404e7030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fcd010"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x4049b010"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404eaba8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404eaba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410060b0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404ae0a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4050cc28"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4050cc28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41107538"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x404a64b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404f2b80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404f2b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4104b010"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x404acc08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405007d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x405007d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41084228"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404b0210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40503330"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40503330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410bf0b0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404b72f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40509ba8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40509ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410fe9e8"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x4048b548"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404de010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404de010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd8cc0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x4049fc08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404edba8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404edba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4100fd70"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x404a42f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404ef7d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404ef7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41046010"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x404aaa98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404fd4f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404fd4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4107e0b0"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x404b4830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4053e8f0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404a9ea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405063d8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x405063d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410cbde8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x404a2210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404f94f0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404f94f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41041010"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x404974b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404ddc88"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404ddc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd1ac8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x4049db18"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404eb890"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404eb890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4100ac08"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403ced30"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403cc9b8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403dc438"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e1f10"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x406cd2c8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405988f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405a9440"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4057a808"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405971f8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405971f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c73100"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40578890"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40595268"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40595268"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40c72178"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405a7270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c70190"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40584490"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40adc6b8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40adc6b8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad3100"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40590e58"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405aada0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405aada0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405c74e0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405781f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40597bb8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40597bb8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c73ac0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40587be8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a63f0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a63f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405bcaf8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4058ba98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405955d8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405955d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c724e8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ada100"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ad2af8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405a9440"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c64568"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x405aa578"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40c6f238"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405a0260"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40c70b88"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x405a2af0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x405bc2a0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x405bc2a0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ae0ba0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405c74e0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40c67f18"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405bcaf8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40add520"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405b6760"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x405c7b00"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405c7b00"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40c66e40"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405af7e8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405c7118"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405c7118"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40adc060"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x40c964f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x405bddc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c6fa88"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x405bf760"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x405bf760"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40c21490"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c6e220"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x405bfee8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x405bfee8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40c21c18"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40c97460"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409d4968"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40c6e5b8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ae0ba0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40ae0ba0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad7668"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c6edd8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40addaa0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40addaa0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad44b0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40c6d390"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x406161b0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x406161b0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40613c20"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x40c97ba0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x405c0c58"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x405c0c58"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x405cc9b8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c96bb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40978040"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c64568"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40c61098"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40adc060"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ad4a40"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40c66e40"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40c812a0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x40c21490"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40c1a9b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40c67f18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40c61cb0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x405c6bd0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c210c0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c210c0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x40c1a5e8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40add520"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40ad7f10"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x405bddc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c22308"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c22308"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c1c718"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x405c6460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c229d0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c229d0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40c1ce58"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x405bf010"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x40c20010"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x40c20010"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x40c19540"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x40c21c18"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40c19160"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40c61098"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405c4ad8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405c4ad8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405cfbe0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c20b68"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bfe800"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bfe800"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bfbe98"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bfb010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c66740"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c66740"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c585e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c585e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c67470"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c67470"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c624c8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c624c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405c01a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x405c01a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405cc280"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c207b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c67b50"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c67b50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c62c30"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c62c30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bfc4d0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40bfc4d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c129a8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bfcd20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405c08a0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405c08a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a78298"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a78298"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a971c0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x405cb1c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4060e168"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4060e168"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406134e8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x405d6308"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x4060d2c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x4060d2c0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40612ce0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x405d5d18"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409e2c08"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x405d5d18"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a7b838"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a7b838"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a987d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409e2c08"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a0a7e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x405d0328"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x409fe0f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x409fe0f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a0acd8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x405d0ae8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x409fe808"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x409fe808"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40a09490"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x405df0f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ae0ba0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x405da850"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40addaa0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x405d3010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40be1c40"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40be1c40"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bde6e0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x405dd0e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40be6898"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40be6898"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4089c578"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405d3458"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40978040"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x405e5258"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x405e6a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x405e61d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x4060dda8"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x40623840"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x4061b408"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x406850e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x406850e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x407d5e78"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40620e00"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40687e90"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40687e90"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404a0750"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x4062c840"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x407cfcd0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x407cfcd0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x404952f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x4062b300"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x407cd128"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x407cd128"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x404968e0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x406273e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x407df188"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x407df188"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x40834010"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x4062fbe8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409b0918"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409b0918"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408497b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40630a18"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x409ae010"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x409ae010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40630e30"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x409aea18"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409aea18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x4062f7c8"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x409af880"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409af880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x4062f2a8"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x409aed70"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409aed70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40632768"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x409a9db8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x409a9db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40632c70"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x409a7f18"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409a7f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40629188"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x409a6368"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409a6368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x406296a8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x409abe50"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409abe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40629bc8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x409aa2b0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409aa2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x4062a010"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x409a4a00"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x409a4a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40634a08"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x409a45c8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409a45c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40633158"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x409a9880"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409a9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40633650"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x409aa6e8"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x409aa6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40633b58"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x409a9010"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409a9010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x4062ebd8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409ba5c0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409ba5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408497b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x4062e428"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409c7010"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409c7010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408497b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40624390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409d4968"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40622c50"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x409e81e8"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x40639538"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x4063bcb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40675ae8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406827f8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x406827f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407d6bb0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x407d5e78"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41183de0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x41183de0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4117c5a0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x41178380"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41180bc8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x41180bc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x411739f0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x411790a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4078e648"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4078e648"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40792e60"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x41171548"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40693d60"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40693d60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406fd1a0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x4116f7e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406a86e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4069fcd0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406fa520"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x406afb10"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406f9258"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406a86e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x406f7128"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406a86e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x4070ad20"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406a86e0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40708950"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x40705528"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406b1208"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x406b1208"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406bde68"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x406c0820"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406cd728"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406b1b68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406bb7d8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406aca28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406b0b08"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4074d220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40693d60"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407b00e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4078b088"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4078b088"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40789890"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40788a58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40693d60"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x407d0890"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x4049b010"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x407cf2e8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x404b0c08"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x406874b8"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x404aaa98"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x407ce730"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x404ab670"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x407dda28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407e9d28"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x407df898"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x407e6a28"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x407db3e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406afb10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x407e5050"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x40806c98"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x40806c98"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40824e68"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x408346c8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x406874b8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x407f00b0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40816538"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x40807ad8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40829a08"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x408055d8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4083b050"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x407f0930"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4082d6c0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x40806418"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40827c70"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x407f3800"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x408023b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x40807258"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4082b7a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40802b68"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x407fe140"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40816cf0"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x407fe5b8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4082de78"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x407fea30"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4082a010"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x407feea8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40828270"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x40801360"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40826438"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x408017d8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40823630"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x40801c50"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4083b808"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x408001a0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x40833ed8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x409afbd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409a76a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x409a7ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x409a2cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x409a3b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409ae6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409a32b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x409a5468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409af010"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40849f00"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40849f00"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40859d68"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409ac4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x409ac840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409acc18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409a36e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x409aab20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x409a2880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x409a2010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x409a58a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409a4e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409a67a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409c0190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4085b7a8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x409af528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x409aba18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409a9448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409a7270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409ab010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x409ab6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409ac190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409a4190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x409a2448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409a5cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x409ae368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x409a5030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409a6bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x409ab368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409c0a68"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4085b7a8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x4085b7a8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4086e100"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x4085a208"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4086eb28"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086d2f0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408497b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40856648"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x408591f8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086daa8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x408646e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4089e1e8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x4089e1e8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4089c578"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x4086dee8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408c1268"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408c1268"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40968bf8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x4086ced0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408c1920"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x408c1920"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408bc1b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40864210"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408c1c58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x408c1c58"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408b8a68"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40864e88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40978040"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x40865bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x4089c578"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408b4bc8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x408b8a68"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408b5290"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x408bc1b8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408b68d8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408b2f10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408c0d60"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408c0d60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408b6578"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x40965438"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408bb1f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40965b68"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404a0750"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x408b8430"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x408b6c60"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408bb1f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408b59c0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x408cd8c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40928570"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40928570"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fd180"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x408daf00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4096b150"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4096b150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x411fdcc8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x408dcbc8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x408b7e40"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x408b7e40"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x408fd1c8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x408d9398"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e1148"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x408e21e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40914898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e1148"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x408fb010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404a0750"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x408fb9e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x4049f210"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x409174a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x4049fc08"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40917e88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x4049e670"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40928cb0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x411fd8c0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x411fb218"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4096b600"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x411fb640"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x411fe170"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x411fbc38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409a0a38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40975390"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40974400"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40977ba0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40977ba0"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x40498a08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40974de8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40982680"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40982680"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x40498010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40973820"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x409a00b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x409a00b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x4048b548"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409b35c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x409b9920"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409b5af8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409b2448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x409b2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x409ccb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x409cda00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409b8368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409cd190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x409b4448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409b4cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x409cf2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409b2cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409bac78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40849f00"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409b7190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x409b74e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409b78c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409cd5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409b8a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x409b4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409b4010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409b95c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x409cc6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x409cde38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x409cf6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409cecb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409b15c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409cb010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4085b7a8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x409b9270"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x409b56c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409b3190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409b1190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x409b3b00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x409b9c78"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409b2010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409b7c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x409b5368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x409ce880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409ce448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409b8d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409ce010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x409cc2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409cfb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x409b8010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x409b1e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409b86c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409b1a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x409b5010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409cb8e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4085b7a8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409c1e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x409c5368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409c24b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409dfcd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x409de190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x409d8448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x409d92b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409c5d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409dba00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x409c2d28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409c15c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x409ddb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409de5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409c76c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40849f00"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409c4b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x409c4ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409c3308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409dbe38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409c44e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x409c1190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409c28f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409c5010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x409d8010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x409d96e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x409dc010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409db5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409dee38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409d8880"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4085b7a8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x409c7be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x409c2080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409c1a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409dea00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x409df468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x409c56c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409df8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409c3660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x409c3d10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x409db190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409dccb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409c4840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409dc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x409d9b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409dc448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x409c5a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x409dd6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409c4190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409dd2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x409c39b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409d7190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4085b7a8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x409fd8e0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x40a09d88"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x409fdd48"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x40a072c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x40a07888"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x406850e0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x40a1deb8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x406874b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40a019a8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40687e90"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40a223d0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x407ce730"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x40a1d840"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x407dda28"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a22e10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a6e950"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a6e950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408497b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40a1f588"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40a6d030"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40a6d030"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40849f00"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40a1cd28"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40a6d548"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40a6d548"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40a1b168"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x40a6c368"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40a6c368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40a1b598"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x40a6c6c0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40a6c6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40a1b9c8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x40a6b4e8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40a6b4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40a1c840"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40a67010"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40a67010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40a1fb48"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x40a81a68"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40a81a68"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4085b7a8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a1c338"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a832b0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a832b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40a1be08"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40a682b0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40a682b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40a1a850"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x40a88270"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40a88270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40a1ad70"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x40a886a8"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40a886a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40a1a410"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x40a6a368"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40a6a368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40a19ca8"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x40a82880"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40a82880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40a19300"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x40a83b20"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40a83b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40a197c8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x40a82010"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40a82010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40a15a60"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40a7bcd8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40a7bcd8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40a98c70"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40a052c0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ae0ba0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a05b00"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40addaa0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a042b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40adc6b8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a1d170"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40ad8888"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40ad8888"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40af3308"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a17010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40978040"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40a67880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x40a6dbf8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40a6ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x40a88ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40a82cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40a686e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x40a86468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40a88f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40a6b840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40a6bc18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40a836e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40a6cd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40a68b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40a6d8a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x40a868a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40a84e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40a877a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40a81190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4085b7a8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x40a6aa18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40a67448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40a87368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40a67db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40a6c010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40a6a010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x40a6a6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40a84a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40a845c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40a6b190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40a84190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x40a82448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40a86cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x40a86030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40a6ca18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40a87bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40a78730"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x40a97658"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a8b838"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40978040"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40a97a30"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40687e90"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40a954c0"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x407d0890"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40a95ed0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x407cf2e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40a94978"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x407df898"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a930a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40adebb0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40adebb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408497b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40a93820"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x40bd1448"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40bd1448"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4085b7a8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40a92440"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x40bb5368"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40bb5368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40a92010"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x40bb5a18"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40bb5a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40a92878"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ae0ba0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a91108"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40addaa0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a90980"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40adc6b8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40a91680"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x406161b0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40a8e580"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x40bd8448"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40bd8448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40a8eaa0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x40bd8880"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40bd8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40a8e140"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x40bb4190"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40bb4190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40a8d9b8"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x40bd1010"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40bd1010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40a8d010"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x40bd4e38"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40bd4e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40a8d4d8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x40bd22b0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40bd22b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40a8deb8"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40bd4a00"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40bd4a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40a8b3d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40bb8848"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40bb8848"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x40aa9b88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b0ca38"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4078e648"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x40af2e80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b0c0a0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40af18e8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b24620"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40b24620"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40ba2538"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40b27318"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b7ea60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b2ab48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b23cc8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b23cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b53790"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40ba7e30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b21c60"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b83010"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40b202b8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40b202b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b53bc8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ba2ed0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40b1fec0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40b1fec0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b77650"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b77650"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41264b70"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b53790"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41267c88"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b53bc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x412660e8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41263d60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406aca28"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4125f010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406b1208"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4125f838"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406b1b68"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4125d278"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406c0820"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40b829a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40ba3050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40bc40a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bbe2a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40bbe2a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b27318"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40bdaa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x40bb8ef8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40bdb010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x40bd8cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40bb6910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40bd45c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40bdb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40bda190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x40bd66e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40bd7190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40bb8330"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40849f00"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40bb56c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40bb5df0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40bb5010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40bdbcb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40bdb448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40bb8ba0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40bd2b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x40bd6b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40bd4190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40bd7a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x40bb4b98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40bda5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40bd75c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40bd8010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40bb6260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x40bb4840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40bd5cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40bd5880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40bd5448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x40bd26e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4085a208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40bd5010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40bb65b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x40bd62b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40bb6c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40bd7e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40bb44e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x408591f8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40bd1d20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4085b7a8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40be1380"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40be3dd0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40be4060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40be38b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bf89a0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40bfb010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40bf7098"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40bfadc8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40bfadc8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4089c578"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40bf7850"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40be1c40"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bf7cf0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40addaa0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x40bfc8f8"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x40c12dd0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c0f5a8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bfcd20"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c0f968"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40addaa0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c19cb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c20b68"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c424c0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c207b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40c42858"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ae0ba0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c41108"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40addaa0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40c416c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40c1dd28"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x40c51250"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40c64bd8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40c5ad20"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40c5ad20"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4089c578"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c81a58"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405bcaf8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncMode" scoped="" ref="0x40cc6010"/></from>
      <to><interface-ref name="TimeSyncMode" scoped="" ref="0x40d40940"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncNotify" scoped="" ref="0x40cee1d0"/></from>
      <to><interface-ref name="TimeSyncNotify" scoped="" ref="0x40d40e18"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40ccac40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d42ab0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40d3f260"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40cca538"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40d3f598"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d5e1f8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40d5e1f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d4fb20"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d3fc90"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x40d53bb8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d3c3d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d5ead8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncPacket" scoped="" ref="0x40d38b70"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x40d50650"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x40d50650"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x40d71be8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40d37890"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40e1b5d0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40e1b5d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b24620"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d3c778"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e0e758"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e0e758"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bbe2a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40d399f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40be1c40"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d39de8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40e0ac20"/></to>
    </wire>
    <wire loc="349:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <from><interface-ref name="sendMsg" scoped="" ref="0x40d36148"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="292:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <from><interface-ref name="processMsg" scoped="" ref="0x40d36580"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40d4fb20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405988f8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x40d71be8"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x40d65e80"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d5d4e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d4ce68"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d4ce68"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d68900"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x40d53bb8"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x40d72100"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x40d72100"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x40d69178"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40d5d190"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40d4cb10"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40d4cb10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40d634d0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40d5ceb8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40d777c0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40d777c0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405aada0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d5b7e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40adc6b8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d5ead8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d4c478"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d4c478"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d64de0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d5c930"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d77238"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d77238"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a63f0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x40d57f00"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x40d763d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x40d763d0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x40d6c448"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d5dbd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d78568"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d78568"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d66010"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x40d55970"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x40d75e88"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x40d75e88"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x40d66f10"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d59288"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ada100"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d638e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40dabbb8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40dabbb8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41328cc0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x40d8f810"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40daa9a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40daa9a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41324a88"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40d8f090"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40daa310"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40daa310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x413243f0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d8d010"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40adc6b8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d8c9d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ada100"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40d89218"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40ad8888"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e1eab8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4078e648"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x40d899b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40e1e120"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40d88400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40e1b5d0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d88c88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40978040"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d8e4c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405781f8"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x40d8e8a0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40578890"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41328cc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4131e3d0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x413243f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40578be8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41324a88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4058ba98"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40df05d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x413236b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x413236b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40587be8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4131ea98"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dc6c08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4131d150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4058ba98"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40dc6c08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dc1be0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40df93d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4057a808"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40df9a80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4058ba98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40df8690"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40578be8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x40df8d68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x40df7270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:PhotoC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x41335610"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40e51e48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40e51e48"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40e4c468"/></to>
    </wire>
    <wire loc="47:ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40f93188"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40e4bc58"/></to>
    </wire>
    <wire loc="51:PhotoImplP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40e4bc58"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f8d7c0"/></to>
    </wire>
    <wire loc="48:ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40f93da8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e4b200"/></to>
    </wire>
    <wire loc="50:PhotoImplP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40e4b200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f8d010"/></to>
    </wire>
    <wire loc="54:SharedAnalogDeviceC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40f8d7c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4132b6f0"/></to>
    </wire>
    <wire loc="53:SharedAnalogDeviceC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40f8d010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41331838"/></to>
    </wire>
    <wire loc="52:PhotoImplP.nc">
      <from><interface-ref name="AdcConfig" scoped="" ref="0x40f8c3c0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f958d0"/></to>
    </wire>
    <wire loc="43:PhotoTempConfigC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f958d0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f92418"/></to>
    </wire>
    <wire loc="53:PhotoImplP.nc">
      <from><interface-ref name="EnablePin" scoped="" ref="0x40f8c8b8"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x40f829f8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x40f829f8"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x404b0210"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41331838"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4135c860"/></to>
    </wire>
    <wire loc="56:SharedAnalogDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4132c010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4132fab0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4132fab0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4135bab0"/></to>
    </wire>
    <wire loc="57:SharedAnalogDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4132d030"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4132b030"/></to>
    </wire>
    <wire loc="58:SharedAnalogDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4132d900"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4132f418"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4132f418"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4135b418"/></to>
    </wire>
    <wire loc="59:SharedAnalogDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x4136c660"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x413692c8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x413692c8"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40eeab48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:SharedAnalogDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4132aa70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x413662c0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x413662c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bbe2a8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:SharedAnalogDeviceC.nc">
      <from><interface-ref name="AnalogDeviceResource" scoped="" ref="0x4132a348"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4136ab88"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4136ab88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ee43c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:SharedAnalogDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41369e90"/></from>
      <to><interface-ref name="AdcConfig" scoped="" ref="0x40f8c3c0"/></to>
    </wire>
    <wire loc="64:SharedAnalogDeviceC.nc">
      <from><interface-ref name="EnablePin" scoped="" ref="0x4136dc50"/></from>
      <to><interface-ref name="EnablePin" scoped="" ref="0x40f8c8b8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x4132f010"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4135b010"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4135a010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4132e010"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x4135a438"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x4135d700"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x413596d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41384660"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4132d030"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x41384c18"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x4132d5e8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41382010"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4132d900"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x413826a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4132c010"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x41382ae0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x41382f18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:SharedAnalogDeviceP.nc">
      <from><interface-ref name="readDoneTask" scoped="" ref="0x4136b250"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:SharedAnalogDeviceP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x4136b688"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40ee9b30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41369e90"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40ee26c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41367380"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40eb9b68"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f63e78"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x40eeab48"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40f51c78"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40f627d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ee73c0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f4e1b8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40ee9b30"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40f70ba0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40ee5cc8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40f4f910"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40ee0d38"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40ee0d38"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40edabc8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40edcec0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40ed9200"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ee43c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f1c1d8"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40f1c1d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x413adcf0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40f188a0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40ee26c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40f03a78"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40f1b010"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40f1b010"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40f1ac68"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40ed8ea8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404849c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40f2c538"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40eda738"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f2cc48"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f1cd20"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f1cd20"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413ac890"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40f160e8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e1148"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40f1c918"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x413ac488"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40f183f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x413acf28"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x413ab3f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40f188a0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x413ab820"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x413afb88"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x413a9a50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x413d6528"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40f2c538"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x413d6920"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x40f2c930"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413d6c38"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f2cc48"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x413d5310"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40f2b310"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x40f457c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x40f7f0c0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40fa2aa0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x40f7cd00"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x40f794b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x40f86ca8"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x404a58e0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x40f84af0"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x404a3750"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x40f7b8b8"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x40f75060"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x40f7a090"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x40f75800"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x40f7da30"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x404acc08"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x40f87870"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x404a64b0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x40f85730"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x404a42f0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x40f7fea0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40f9ec30"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x40f7b118"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x40f79888"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x40f7d010"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x404ac210"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x40f83570"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x404a2210"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x40f80918"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40fa5960"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x40f7a560"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x40f75bd0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x40f814a0"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x404b0c08"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x40f862d0"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x404a6ea8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x40f84118"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x404a4ce8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x40f7b4e8"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x40f79c58"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x40f7bc88"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x40f75430"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x40f82010"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x404b1750"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x40f7f7b0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40fa0b50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x40f7e588"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x404aa0a0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x40f7a930"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x40f74010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x40f8ae80"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x4049ba08"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x40f81e88"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x404af670"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40fa4010"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x40807ad8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40fa10b0"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x40806418"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40f9f190"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x40806c98"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40f9d270"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x408055d8"/></to>
    </wire>
    <wire loc="45:PhotoTempConfigC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x40f92a18"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x40f7a560"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x413b8aa0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413f6538"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e523f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x413fc150"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x413fc150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40578be8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e52a88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413fc7e8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x413fc7e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4058ba98"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40fc26b0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x413fb410"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x413fb410"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40587be8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x413f6c00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dc6c08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x413f5310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4058ba98"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40fbf430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40578be8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fbfac8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4058ba98"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="OscilloscopeC" loc="6:OscilloscopeC.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="53:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="TOne" ref="0x403ca9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="TOne" ref="0x403ca9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="TOne" ref="0x403ca9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x403caea8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="TOne" ref="0x403ca9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.1.2/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.1.2/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b1c9c8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TimeSyncC" loc="39:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <configuration/>
    </component>
    <component qname="TimeSyncC.TimeSyncP" loc="37(TimeSyncC.TimeSyncP):/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <instance number="0">
        <component-ref qname="TimeSyncP"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimeSyncMessageC" loc="53:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <documentation loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaz platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaz platform. This is a naming wrapper&#10; around the CC2420 Active Message layer that implemets timesync interface (TEP 133).&#10;&#10; @author Philip Levis&#10; @author Brano Kusy&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio with timesync support.</short>
        <long>&#10; The Active Message layer for the CC2420 radio with timesync support. This&#10; configuration is just layer above CC2420ActiveMessageC that supports&#10; TimeSyncPacket and TimeSyncAMSend interfaces (TEP 133)&#10;&#10; @author: Miklos Maroti&#10; @author: Brano Kusy (CC2420 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageP" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:61">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.LocalTime32khzC" loc="46(CC2420TimeSyncMessageC.LocalTime32khzC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TimeSyncC.TimerC" loc="44(TimeSyncC.TimerC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Timer" loc="44(OscilloscopeAppC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Timer1" loc="44(OscilloscopeAppC.Timer1):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Timer_one" loc="44(OscilloscopeAppC.Timer_one):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor" loc="16(OscilloscopeAppC.Sensor):DemoSensorC.nc">
      <documentation loc="10:DemoSensorC.nc">
        <short>&#10; Demo sensor for basicsb sensorboard.</short>
        <long>&#10; Demo sensor for basicsb sensorboard.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor.Sensor" loc="19(OscilloscopeAppC.Sensor.Sensor):PhotoC.nc">
      <documentation loc="32:mda100.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP" loc="37:ArbitratedPhotoDeviceP.nc">
      <documentation loc="32:ArbitratedPhotoDeviceP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoImplP" loc="39:PhotoImplP.nc">
      <documentation loc="32:mda100.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC" loc="37(PhotoImplP.SharedAnalogDeviceC):SharedAnalogDeviceC.nc">
      <documentation loc="32:SharedAnalogDeviceC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SharedAnalogDeviceC"/>
        <arguments>
          <value cst="S:mda100.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.Arbiter" loc="89(PhotoImplP.SharedAnalogDeviceC.Arbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="U:">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Queue" loc="42(PhotoImplP.SharedAnalogDeviceC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter" loc="52(PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.PowerManager" loc="67(PhotoImplP.SharedAnalogDeviceC.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager" loc="58(PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice" loc="37(PhotoImplP.SharedAnalogDeviceC.AnalogDevice):SharedAnalogDeviceP.nc">
      <documentation loc="32:SharedAnalogDeviceP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SharedAnalogDeviceP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.Adc" loc="21(PhotoImplP.SharedAnalogDeviceC.Adc):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.TimerMilliC" loc="44(PhotoImplP.SharedAnalogDeviceC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempConfigC" loc="37:PhotoTempConfigC.nc">
      <documentation loc="32:PhotoTempConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoTempConfigP" loc="14:PhotoTempConfigP.nc">
      <documentation loc="10:PhotoTempConfigP.nc">
        <short>&#10; MDA100 photo and temp sensor ADC configuration.</short>
        <long>&#10; MDA100 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArbitratedPhotoDeviceP.ArbitrateRead" loc="23(ArbitratedPhotoDeviceP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC" loc="47(OscilloscopeAppC.AMSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC" loc="47(OscilloscopeAppC.AMSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMReceiverC" loc="43(OscilloscopeAppC.AMReceiverC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404bdb08" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404bdd20" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404ba010" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404c0f10" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404c9158" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404c9380" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404c9570" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40513f28" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40510160" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40510388" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40510578" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40762478" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40762478"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40762698" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40758428" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40758428"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40758870" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40758870"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40758a30" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x4078af08" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x4078af08"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40787368" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40787368"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x407a7488" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x407a7488"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407a78e8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407a78e8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x407a7b50" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x407a7b50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x407a6010" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x407a6010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x407a6278" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x407a6700" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x407a6700"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x407ac158" loc="52:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x407ac158"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407ac5b8" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407ac5b8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x407ac820" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x407ac820"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x407acc90" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x407acc90"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x407acef8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x40821218" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x40821440" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x40821668" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40821858" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.1.2/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x409274c0" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x4093d380" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b09038" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b09038"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b1c9c8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b1c9c8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b1cb88" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b3bc30" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b3bc30"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b3bdf0" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b22638" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b22638"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b80d00" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b80d00"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40b80ee0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeSyncP" loc="37:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40ceebf8" loc="37:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
          <component-ref qname="TimeSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40ceebf8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40dac3d8" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40da8ee0" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40dd2a00" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40dc0110" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="16:DemoSensorC.nc" abstract="">
      <documentation loc="10:DemoSensorC.nc">
        <short>&#10; Demo sensor for basicsb sensorboard.</short>
        <long>&#10; Demo sensor for basicsb sensorboard.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoC" loc="19:PhotoC.nc" abstract="">
      <documentation loc="32:mda100.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SharedAnalogDeviceC" loc="37:SharedAnalogDeviceC.nc" abstract="">
      <documentation loc="32:SharedAnalogDeviceC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40e46128" loc="37:SharedAnalogDeviceC.nc">
          <component-ref qname="SharedAnalogDeviceC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
        <constant name="startup_delay" ref="0x40e46380" loc="37:SharedAnalogDeviceC.nc">
          <component-ref qname="SharedAnalogDeviceC"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40e42e60" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40e68010" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x40e69980" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SharedAnalogDeviceP" loc="37:SharedAnalogDeviceP.nc" abstract="">
      <documentation loc="32:SharedAnalogDeviceP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <parameters>
        <constant name="startup_delay" ref="0x40eaa628" loc="37:SharedAnalogDeviceP.nc">
          <component-ref qname="SharedAnalogDeviceP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadNowClientC" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40f6f2b8" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40f6f2b8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40fc19f8" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="PacketTimeStamp" ref="0x40450830" loc="18:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40450830"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4044d3c0"/>
        <function-ref name="clear" scoped="" ref="0x4044d770"/>
        <function-ref name="isValid" scoped="" ref="0x4044d010"/>
        <function-ref name="set" scoped="" ref="0x4044db20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x403f6010" loc="8:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403f6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403f61e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GlobalTime" ref="0x40448178" loc="15:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GlobalTime" scoped="" ref="0x40448178"/></type-interface>
      <instance>
        <interfacedef-ref qname="GlobalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getLocalTime" scoped="" ref="0x404487c0"/>
        <function-ref name="global2Local" scoped="" ref="0x4043e010"/>
        <function-ref name="getGlobalTime" scoped="" ref="0x40448a38"/>
        <function-ref name="local2Global" scoped="" ref="0x40448cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x4042e098" loc="10:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4042e098"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4042e270"/>
        <function-ref name="getPayload" scoped="" ref="0x4042e350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4042e430"/>
        <function-ref name="cancel" scoped="" ref="0x4042e510"/>
        <function-ref name="sendDone" scoped="" ref="0x4042e5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x4044ace8" loc="17:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4044ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4044aec0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40447010"/>
        <function-ref name="getPayload" scoped="" ref="0x404470f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404471d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x404472b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x403fa468" loc="9:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x403fa468"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x403fa640"/>
        <function-ref name="stopDone" scoped="" ref="0x403fa720"/>
        <function-ref name="start" scoped="" ref="0x403fa800"/>
        <function-ref name="stop" scoped="" ref="0x403fa8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x4043f670" loc="13:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4043f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4043fc98"/>
        <function-ref name="readDone" scoped="" ref="0x4043fef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncInfo" ref="0x4044e748" loc="16:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncInfo" scoped="" ref="0x4044e748"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getSyncPoint" scoped="" ref="0x4044e920"/>
        <function-ref name="getRootID" scoped="" ref="0x4044ea00"/>
        <function-ref name="getSeqNum" scoped="" ref="0x4044eae0"/>
        <function-ref name="getOffset" scoped="" ref="0x4044ebc0"/>
        <function-ref name="getNumEntries" scoped="" ref="0x4044eca0"/>
        <function-ref name="getHeartBeats" scoped="" ref="0x4044ed80"/>
        <function-ref name="getSkew" scoped="" ref="0x4044ee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x404570a0" loc="19:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x404570a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40456b88"/>
        <function-ref name="fired" scoped="" ref="0x40457e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40456548"/>
        <function-ref name="isOneShot" scoped="" ref="0x404562f0"/>
        <function-ref name="getdt" scoped="" ref="0x40455048"/>
        <function-ref name="gett0" scoped="" ref="0x40456de0"/>
        <function-ref name="isRunning" scoped="" ref="0x40456098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404576c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40456868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40457948"/>
        <function-ref name="stop" scoped="" ref="0x40457bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer_one" ref="0x404553e0" loc="20:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer_one" scoped="" ref="0x404553e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4045c010"/>
        <function-ref name="fired" scoped="" ref="0x40454268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40454970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40454718"/>
        <function-ref name="getdt" scoped="" ref="0x4045c4c0"/>
        <function-ref name="gett0" scoped="" ref="0x4045c268"/>
        <function-ref name="isRunning" scoped="" ref="0x404544c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40455a88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40454c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40455d08"/>
        <function-ref name="stop" scoped="" ref="0x40454010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40434230" loc="11:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40434230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40434408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40442298" loc="14:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40442298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40442470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40442550"/>
        <function-ref name="led1On" scoped="" ref="0x40442630"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40442710"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404427f0"/>
        <function-ref name="get" scoped="" ref="0x404428d0"/>
        <function-ref name="led1Off" scoped="" ref="0x404429b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40442d30"/>
        <function-ref name="set" scoped="" ref="0x40442a90"/>
        <function-ref name="led0On" scoped="" ref="0x40442b70"/>
        <function-ref name="led2On" scoped="" ref="0x40442c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x403f5010" loc="12:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x403f5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40439b00"/>
        <function-ref name="fired" scoped="" ref="0x403f5d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404394c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40439268"/>
        <function-ref name="getdt" scoped="" ref="0x40438010"/>
        <function-ref name="gett0" scoped="" ref="0x40439d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40439010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x403f5638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404397e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x403f58b8"/>
        <function-ref name="stop" scoped="" ref="0x403f5b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4047f7f0" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4047f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4047f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403f1bb8" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403f1bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403f1d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40488140" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40488140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40488318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4047c090" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4047c090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4047c268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404849c8" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404849c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40484ba0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40484c80"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40484d60"/>
        <function-ref name="actualMicro" scoped="" ref="0x40484e40"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40484f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x4048e010" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x4048e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40488be0" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40488be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40488db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x4048e418" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x4048e418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048e5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404877d8" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404877d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404879b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40487408" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40487408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404875e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404944a8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404944a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40494680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x404909e8" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x404909e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40490ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40490d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40490e60"/>
        <function-ref name="get" scoped="" ref="0x40494010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404940f0"/>
        <function-ref name="set" scoped="" ref="0x404941d0"/>
        <function-ref name="clr" scoped="" ref="0x404942b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404893d0" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404893d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404895a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404b5210" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404b5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b55e8"/>
        <function-ref name="isInput" scoped="" ref="0x404b56c8"/>
        <function-ref name="toggle" scoped="" ref="0x404b57a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b5888"/>
        <function-ref name="get" scoped="" ref="0x404b5968"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b5a48"/>
        <function-ref name="set" scoped="" ref="0x404b5b28"/>
        <function-ref name="clr" scoped="" ref="0x404b5c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x404a1750" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x404a1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a1928"/>
        <function-ref name="isInput" scoped="" ref="0x404a1a08"/>
        <function-ref name="toggle" scoped="" ref="0x404a1ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404a1bc8"/>
        <function-ref name="get" scoped="" ref="0x404a1ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a1d88"/>
        <function-ref name="set" scoped="" ref="0x404a1e68"/>
        <function-ref name="clr" scoped="" ref="0x404ac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404b2ce8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404b2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b2ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404b1010"/>
        <function-ref name="toggle" scoped="" ref="0x404b10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b11d0"/>
        <function-ref name="get" scoped="" ref="0x404b12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b1390"/>
        <function-ref name="set" scoped="" ref="0x404b1470"/>
        <function-ref name="clr" scoped="" ref="0x404b1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404adea8" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404adea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b80c0"/>
        <function-ref name="isInput" scoped="" ref="0x404b81a0"/>
        <function-ref name="toggle" scoped="" ref="0x404b8280"/>
        <function-ref name="isOutput" scoped="" ref="0x404b8360"/>
        <function-ref name="get" scoped="" ref="0x404b8440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8520"/>
        <function-ref name="set" scoped="" ref="0x404b8600"/>
        <function-ref name="clr" scoped="" ref="0x404b86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404952f0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404954c8"/>
        <function-ref name="isInput" scoped="" ref="0x404955a8"/>
        <function-ref name="toggle" scoped="" ref="0x40495688"/>
        <function-ref name="isOutput" scoped="" ref="0x40495768"/>
        <function-ref name="get" scoped="" ref="0x40495848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40495928"/>
        <function-ref name="set" scoped="" ref="0x40495a08"/>
        <function-ref name="clr" scoped="" ref="0x40495ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x404aea98" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x404aea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aec70"/>
        <function-ref name="isInput" scoped="" ref="0x404aed50"/>
        <function-ref name="toggle" scoped="" ref="0x404aee30"/>
        <function-ref name="isOutput" scoped="" ref="0x404aef10"/>
        <function-ref name="get" scoped="" ref="0x404ad010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ad0f0"/>
        <function-ref name="set" scoped="" ref="0x404ad1d0"/>
        <function-ref name="clr" scoped="" ref="0x404ad2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404a0750" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404a0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a0928"/>
        <function-ref name="isInput" scoped="" ref="0x404a0a08"/>
        <function-ref name="toggle" scoped="" ref="0x404a0ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404a0bc8"/>
        <function-ref name="get" scoped="" ref="0x404a0ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a0d88"/>
        <function-ref name="set" scoped="" ref="0x404a0e68"/>
        <function-ref name="clr" scoped="" ref="0x4049f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x404a6ea8" loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x404a6ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a50c0"/>
        <function-ref name="isInput" scoped="" ref="0x404a51a0"/>
        <function-ref name="toggle" scoped="" ref="0x404a5280"/>
        <function-ref name="isOutput" scoped="" ref="0x404a5360"/>
        <function-ref name="get" scoped="" ref="0x404a5440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a5520"/>
        <function-ref name="set" scoped="" ref="0x404a5600"/>
        <function-ref name="clr" scoped="" ref="0x404a56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404ab670" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404ab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ab848"/>
        <function-ref name="isInput" scoped="" ref="0x404ab928"/>
        <function-ref name="toggle" scoped="" ref="0x404aba08"/>
        <function-ref name="isOutput" scoped="" ref="0x404abae8"/>
        <function-ref name="get" scoped="" ref="0x404abbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404abca8"/>
        <function-ref name="set" scoped="" ref="0x404abd88"/>
        <function-ref name="clr" scoped="" ref="0x404abe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x404b0c08" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x404b0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b0de0"/>
        <function-ref name="isInput" scoped="" ref="0x404b0ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404af010"/>
        <function-ref name="isOutput" scoped="" ref="0x404af0f0"/>
        <function-ref name="get" scoped="" ref="0x404af1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404af2b0"/>
        <function-ref name="set" scoped="" ref="0x404af390"/>
        <function-ref name="clr" scoped="" ref="0x404af470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40498010" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40498010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404981e8"/>
        <function-ref name="isInput" scoped="" ref="0x404982c8"/>
        <function-ref name="toggle" scoped="" ref="0x404983a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40498488"/>
        <function-ref name="get" scoped="" ref="0x40498568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40498648"/>
        <function-ref name="set" scoped="" ref="0x40498728"/>
        <function-ref name="clr" scoped="" ref="0x40498808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x4049e670" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x4049e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049e848"/>
        <function-ref name="isInput" scoped="" ref="0x4049e928"/>
        <function-ref name="toggle" scoped="" ref="0x4049ea08"/>
        <function-ref name="isOutput" scoped="" ref="0x4049eae8"/>
        <function-ref name="get" scoped="" ref="0x4049ebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049eca8"/>
        <function-ref name="set" scoped="" ref="0x4049ed88"/>
        <function-ref name="clr" scoped="" ref="0x4049ee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x404a4ce8" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x404a4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a4ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404a3010"/>
        <function-ref name="toggle" scoped="" ref="0x404a30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a31d0"/>
        <function-ref name="get" scoped="" ref="0x404a32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a3390"/>
        <function-ref name="set" scoped="" ref="0x404a3470"/>
        <function-ref name="clr" scoped="" ref="0x404a3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404a94b0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404a94b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a9688"/>
        <function-ref name="isInput" scoped="" ref="0x404a9768"/>
        <function-ref name="toggle" scoped="" ref="0x404a9848"/>
        <function-ref name="isOutput" scoped="" ref="0x404a9928"/>
        <function-ref name="get" scoped="" ref="0x404a9a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a9ae8"/>
        <function-ref name="set" scoped="" ref="0x404a9bc8"/>
        <function-ref name="clr" scoped="" ref="0x404a9ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404b7ce8" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404b7ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b7ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404b6010"/>
        <function-ref name="toggle" scoped="" ref="0x404b60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b61d0"/>
        <function-ref name="get" scoped="" ref="0x404b62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6390"/>
        <function-ref name="set" scoped="" ref="0x404b6470"/>
        <function-ref name="clr" scoped="" ref="0x404b6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404b32f0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404b32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b34c8"/>
        <function-ref name="isInput" scoped="" ref="0x404b35a8"/>
        <function-ref name="toggle" scoped="" ref="0x404b3688"/>
        <function-ref name="isOutput" scoped="" ref="0x404b3768"/>
        <function-ref name="get" scoped="" ref="0x404b3848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b3928"/>
        <function-ref name="set" scoped="" ref="0x404b3a08"/>
        <function-ref name="clr" scoped="" ref="0x404b3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x404a78e0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x404a78e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a7ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404a7b98"/>
        <function-ref name="toggle" scoped="" ref="0x404a7c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404a7d58"/>
        <function-ref name="get" scoped="" ref="0x404a7e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a7f18"/>
        <function-ref name="set" scoped="" ref="0x404b2010"/>
        <function-ref name="clr" scoped="" ref="0x404b20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x40497ea8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x40497ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404960c0"/>
        <function-ref name="isInput" scoped="" ref="0x404961a0"/>
        <function-ref name="toggle" scoped="" ref="0x40496280"/>
        <function-ref name="isOutput" scoped="" ref="0x40496360"/>
        <function-ref name="get" scoped="" ref="0x40496440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40496520"/>
        <function-ref name="set" scoped="" ref="0x40496600"/>
        <function-ref name="clr" scoped="" ref="0x404966e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x4049c590" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x4049c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049c768"/>
        <function-ref name="isInput" scoped="" ref="0x4049c848"/>
        <function-ref name="toggle" scoped="" ref="0x4049c928"/>
        <function-ref name="isOutput" scoped="" ref="0x4049ca08"/>
        <function-ref name="get" scoped="" ref="0x4049cae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049cbc8"/>
        <function-ref name="set" scoped="" ref="0x4049cca8"/>
        <function-ref name="clr" scoped="" ref="0x4049cd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x404b5e08" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x404b5e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b4010"/>
        <function-ref name="isInput" scoped="" ref="0x404b40f0"/>
        <function-ref name="toggle" scoped="" ref="0x404b41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b42b0"/>
        <function-ref name="get" scoped="" ref="0x404b4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b4470"/>
        <function-ref name="set" scoped="" ref="0x404b4550"/>
        <function-ref name="clr" scoped="" ref="0x404b4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x4049ba08" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x4049ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049bbe0"/>
        <function-ref name="isInput" scoped="" ref="0x4049bcc0"/>
        <function-ref name="toggle" scoped="" ref="0x4049bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x4049be80"/>
        <function-ref name="get" scoped="" ref="0x404a6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a60f0"/>
        <function-ref name="set" scoped="" ref="0x404a61d0"/>
        <function-ref name="clr" scoped="" ref="0x404a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404ac210" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404ac210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ac3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ac4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404ac5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac688"/>
        <function-ref name="get" scoped="" ref="0x404ac768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ac848"/>
        <function-ref name="set" scoped="" ref="0x404ac928"/>
        <function-ref name="clr" scoped="" ref="0x404aca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404b1750" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404b1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1928"/>
        <function-ref name="isInput" scoped="" ref="0x404b1a08"/>
        <function-ref name="toggle" scoped="" ref="0x404b1ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b1bc8"/>
        <function-ref name="get" scoped="" ref="0x404b1ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b1d88"/>
        <function-ref name="set" scoped="" ref="0x404b1e68"/>
        <function-ref name="clr" scoped="" ref="0x404b0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404b88e0" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404b88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b8ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404b8b98"/>
        <function-ref name="toggle" scoped="" ref="0x404b8c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404b8d58"/>
        <function-ref name="get" scoped="" ref="0x404b8e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8f18"/>
        <function-ref name="set" scoped="" ref="0x404b7010"/>
        <function-ref name="clr" scoped="" ref="0x404b70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x40495ce8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x40495ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40495ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404a0010"/>
        <function-ref name="toggle" scoped="" ref="0x404a00f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a01d0"/>
        <function-ref name="get" scoped="" ref="0x404a02b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a0390"/>
        <function-ref name="set" scoped="" ref="0x404a0470"/>
        <function-ref name="clr" scoped="" ref="0x404a0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x4049f210" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x4049f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049f3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4049f4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4049f5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4049f688"/>
        <function-ref name="get" scoped="" ref="0x4049f768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049f848"/>
        <function-ref name="set" scoped="" ref="0x4049f928"/>
        <function-ref name="clr" scoped="" ref="0x4049fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x404a58e0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x404a58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a5ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404a5b98"/>
        <function-ref name="toggle" scoped="" ref="0x404a5c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404a5d58"/>
        <function-ref name="get" scoped="" ref="0x404a5e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a5f18"/>
        <function-ref name="set" scoped="" ref="0x404a4010"/>
        <function-ref name="clr" scoped="" ref="0x404a40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404aa0a0" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404aa0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aa278"/>
        <function-ref name="isInput" scoped="" ref="0x404aa358"/>
        <function-ref name="toggle" scoped="" ref="0x404aa438"/>
        <function-ref name="isOutput" scoped="" ref="0x404aa518"/>
        <function-ref name="get" scoped="" ref="0x404aa5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aa6d8"/>
        <function-ref name="set" scoped="" ref="0x404aa7b8"/>
        <function-ref name="clr" scoped="" ref="0x404aa898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x404af670" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x404af670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404af848"/>
        <function-ref name="isInput" scoped="" ref="0x404af928"/>
        <function-ref name="toggle" scoped="" ref="0x404afa08"/>
        <function-ref name="isOutput" scoped="" ref="0x404afae8"/>
        <function-ref name="get" scoped="" ref="0x404afbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404afca8"/>
        <function-ref name="set" scoped="" ref="0x404afd88"/>
        <function-ref name="clr" scoped="" ref="0x404afe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40498a08" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40498a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40498be0"/>
        <function-ref name="isInput" scoped="" ref="0x40498cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40498da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40498e80"/>
        <function-ref name="get" scoped="" ref="0x40497010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404970f0"/>
        <function-ref name="set" scoped="" ref="0x404971d0"/>
        <function-ref name="clr" scoped="" ref="0x404972b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x4049d0a0" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x4049d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049d2f8"/>
        <function-ref name="isInput" scoped="" ref="0x4049d3d8"/>
        <function-ref name="toggle" scoped="" ref="0x4049d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x4049d598"/>
        <function-ref name="get" scoped="" ref="0x4049d678"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049d758"/>
        <function-ref name="set" scoped="" ref="0x4049d838"/>
        <function-ref name="clr" scoped="" ref="0x4049d918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x404a3750" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x404a3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a3928"/>
        <function-ref name="isInput" scoped="" ref="0x404a3a08"/>
        <function-ref name="toggle" scoped="" ref="0x404a3ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404a3bc8"/>
        <function-ref name="get" scoped="" ref="0x404a3ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a3d88"/>
        <function-ref name="set" scoped="" ref="0x404a3e68"/>
        <function-ref name="clr" scoped="" ref="0x404a2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x404b6750" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x404b6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6928"/>
        <function-ref name="isInput" scoped="" ref="0x404b6a08"/>
        <function-ref name="toggle" scoped="" ref="0x404b6ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6bc8"/>
        <function-ref name="get" scoped="" ref="0x404b6ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6d88"/>
        <function-ref name="set" scoped="" ref="0x404b6e68"/>
        <function-ref name="clr" scoped="" ref="0x404b5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x404a2c08" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x404a2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a2ee0"/>
        <function-ref name="isInput" scoped="" ref="0x404a1010"/>
        <function-ref name="toggle" scoped="" ref="0x404a10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a11d0"/>
        <function-ref name="get" scoped="" ref="0x404a12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a1390"/>
        <function-ref name="set" scoped="" ref="0x404a1470"/>
        <function-ref name="clr" scoped="" ref="0x404a1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404b22f0" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404b22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b24c8"/>
        <function-ref name="isInput" scoped="" ref="0x404b25a8"/>
        <function-ref name="toggle" scoped="" ref="0x404b2688"/>
        <function-ref name="isOutput" scoped="" ref="0x404b2768"/>
        <function-ref name="get" scoped="" ref="0x404b2848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2928"/>
        <function-ref name="set" scoped="" ref="0x404b2a08"/>
        <function-ref name="clr" scoped="" ref="0x404b2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404ad4b0" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404ad4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ad688"/>
        <function-ref name="isInput" scoped="" ref="0x404ad768"/>
        <function-ref name="toggle" scoped="" ref="0x404ad848"/>
        <function-ref name="isOutput" scoped="" ref="0x404ad928"/>
        <function-ref name="get" scoped="" ref="0x404ada08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404adae8"/>
        <function-ref name="set" scoped="" ref="0x404adbc8"/>
        <function-ref name="clr" scoped="" ref="0x404adca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x404b3ce8" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x404b3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404be010"/>
        <function-ref name="toggle" scoped="" ref="0x404be0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404be1d0"/>
        <function-ref name="get" scoped="" ref="0x404be2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404be390"/>
        <function-ref name="set" scoped="" ref="0x404be470"/>
        <function-ref name="clr" scoped="" ref="0x404be550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x404968e0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x404968e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40496ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40496b98"/>
        <function-ref name="toggle" scoped="" ref="0x40496c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40496d58"/>
        <function-ref name="get" scoped="" ref="0x40496e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40496f18"/>
        <function-ref name="set" scoped="" ref="0x40495010"/>
        <function-ref name="clr" scoped="" ref="0x404950f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x4049b010" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x4049b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4049b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4049b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4049b488"/>
        <function-ref name="get" scoped="" ref="0x4049b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049b648"/>
        <function-ref name="set" scoped="" ref="0x4049b728"/>
        <function-ref name="clr" scoped="" ref="0x4049b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404ae0a0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404ae0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ae278"/>
        <function-ref name="isInput" scoped="" ref="0x404ae358"/>
        <function-ref name="toggle" scoped="" ref="0x404ae438"/>
        <function-ref name="isOutput" scoped="" ref="0x404ae518"/>
        <function-ref name="get" scoped="" ref="0x404ae5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ae6d8"/>
        <function-ref name="set" scoped="" ref="0x404ae7b8"/>
        <function-ref name="clr" scoped="" ref="0x404ae898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x404a64b0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x404a64b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a6688"/>
        <function-ref name="isInput" scoped="" ref="0x404a6768"/>
        <function-ref name="toggle" scoped="" ref="0x404a6848"/>
        <function-ref name="isOutput" scoped="" ref="0x404a6928"/>
        <function-ref name="get" scoped="" ref="0x404a6a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a6ae8"/>
        <function-ref name="set" scoped="" ref="0x404a6bc8"/>
        <function-ref name="clr" scoped="" ref="0x404a6ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x404acc08" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x404acc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404acde0"/>
        <function-ref name="isInput" scoped="" ref="0x404acec0"/>
        <function-ref name="toggle" scoped="" ref="0x404ab010"/>
        <function-ref name="isOutput" scoped="" ref="0x404ab0f0"/>
        <function-ref name="get" scoped="" ref="0x404ab1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ab2b0"/>
        <function-ref name="set" scoped="" ref="0x404ab390"/>
        <function-ref name="clr" scoped="" ref="0x404ab470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404b0210" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404b0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b03e8"/>
        <function-ref name="isInput" scoped="" ref="0x404b04c8"/>
        <function-ref name="toggle" scoped="" ref="0x404b05a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b0688"/>
        <function-ref name="get" scoped="" ref="0x404b0768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b0848"/>
        <function-ref name="set" scoped="" ref="0x404b0928"/>
        <function-ref name="clr" scoped="" ref="0x404b0a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404b72f0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404b72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b74c8"/>
        <function-ref name="isInput" scoped="" ref="0x404b75a8"/>
        <function-ref name="toggle" scoped="" ref="0x404b7688"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7768"/>
        <function-ref name="get" scoped="" ref="0x404b7848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b7928"/>
        <function-ref name="set" scoped="" ref="0x404b7a08"/>
        <function-ref name="clr" scoped="" ref="0x404b7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x4048b548" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x4048b548"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048b720"/>
        <function-ref name="isInput" scoped="" ref="0x4048b800"/>
        <function-ref name="toggle" scoped="" ref="0x4048b8e0"/>
        <function-ref name="isOutput" scoped="" ref="0x4048b9c0"/>
        <function-ref name="get" scoped="" ref="0x4048baa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048bb80"/>
        <function-ref name="set" scoped="" ref="0x4048bc60"/>
        <function-ref name="clr" scoped="" ref="0x4048bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x4049fc08" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x4049fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4049fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4049e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4049e0f0"/>
        <function-ref name="get" scoped="" ref="0x4049e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049e2b0"/>
        <function-ref name="set" scoped="" ref="0x4049e390"/>
        <function-ref name="clr" scoped="" ref="0x4049e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x404a42f0" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x404a42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a44c8"/>
        <function-ref name="isInput" scoped="" ref="0x404a45a8"/>
        <function-ref name="toggle" scoped="" ref="0x404a4688"/>
        <function-ref name="isOutput" scoped="" ref="0x404a4768"/>
        <function-ref name="get" scoped="" ref="0x404a4848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a4928"/>
        <function-ref name="set" scoped="" ref="0x404a4a08"/>
        <function-ref name="clr" scoped="" ref="0x404a4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x404aaa98" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x404aaa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aac70"/>
        <function-ref name="isInput" scoped="" ref="0x404aad50"/>
        <function-ref name="toggle" scoped="" ref="0x404aae30"/>
        <function-ref name="isOutput" scoped="" ref="0x404aaf10"/>
        <function-ref name="get" scoped="" ref="0x404a9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a90f0"/>
        <function-ref name="set" scoped="" ref="0x404a91d0"/>
        <function-ref name="clr" scoped="" ref="0x404a92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x404b4830" loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x404b4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b4a08"/>
        <function-ref name="isInput" scoped="" ref="0x404b4ae8"/>
        <function-ref name="toggle" scoped="" ref="0x404b4bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b4ca8"/>
        <function-ref name="get" scoped="" ref="0x404b4d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b4e68"/>
        <function-ref name="set" scoped="" ref="0x404b3010"/>
        <function-ref name="clr" scoped="" ref="0x404b30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404a9ea8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404a9ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a70c0"/>
        <function-ref name="isInput" scoped="" ref="0x404a71a0"/>
        <function-ref name="toggle" scoped="" ref="0x404a7280"/>
        <function-ref name="isOutput" scoped="" ref="0x404a7360"/>
        <function-ref name="get" scoped="" ref="0x404a7440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a7520"/>
        <function-ref name="set" scoped="" ref="0x404a7600"/>
        <function-ref name="clr" scoped="" ref="0x404a76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x404a2210" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x404a2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a23e8"/>
        <function-ref name="isInput" scoped="" ref="0x404a24c8"/>
        <function-ref name="toggle" scoped="" ref="0x404a25a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404a2688"/>
        <function-ref name="get" scoped="" ref="0x404a2768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a2848"/>
        <function-ref name="set" scoped="" ref="0x404a2928"/>
        <function-ref name="clr" scoped="" ref="0x404a2a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x404974b0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x404974b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40497688"/>
        <function-ref name="isInput" scoped="" ref="0x40497768"/>
        <function-ref name="toggle" scoped="" ref="0x40497848"/>
        <function-ref name="isOutput" scoped="" ref="0x40497928"/>
        <function-ref name="get" scoped="" ref="0x40497a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40497ae8"/>
        <function-ref name="set" scoped="" ref="0x40497bc8"/>
        <function-ref name="clr" scoped="" ref="0x40497ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x4049db18" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x4049db18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049dcf0"/>
        <function-ref name="isInput" scoped="" ref="0x4049ddd0"/>
        <function-ref name="toggle" scoped="" ref="0x4049deb0"/>
        <function-ref name="isOutput" scoped="" ref="0x4049c010"/>
        <function-ref name="get" scoped="" ref="0x4049c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049c1d0"/>
        <function-ref name="set" scoped="" ref="0x4049c2b0"/>
        <function-ref name="clr" scoped="" ref="0x4049c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404dd330" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404dd330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dd508"/>
        <function-ref name="isInput" scoped="" ref="0x404dd5e8"/>
        <function-ref name="toggle" scoped="" ref="0x404dd6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404dd7a8"/>
        <function-ref name="get" scoped="" ref="0x404dd888"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dd968"/>
        <function-ref name="set" scoped="" ref="0x404dda48"/>
        <function-ref name="clr" scoped="" ref="0x404ddb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404e7030" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404e7030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e7208"/>
        <function-ref name="isInput" scoped="" ref="0x404e72e8"/>
        <function-ref name="toggle" scoped="" ref="0x404e73c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e74a8"/>
        <function-ref name="get" scoped="" ref="0x404e7588"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e7668"/>
        <function-ref name="set" scoped="" ref="0x404e7748"/>
        <function-ref name="clr" scoped="" ref="0x404e7828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404de010" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404de010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404de1e8"/>
        <function-ref name="isInput" scoped="" ref="0x404de2c8"/>
        <function-ref name="toggle" scoped="" ref="0x404de3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404de488"/>
        <function-ref name="get" scoped="" ref="0x404de568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404de648"/>
        <function-ref name="set" scoped="" ref="0x404de728"/>
        <function-ref name="clr" scoped="" ref="0x404de808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404ddc88" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404ddc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dde60"/>
        <function-ref name="isInput" scoped="" ref="0x404e8010"/>
        <function-ref name="toggle" scoped="" ref="0x404e80f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e81d0"/>
        <function-ref name="get" scoped="" ref="0x404e82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8390"/>
        <function-ref name="set" scoped="" ref="0x404e8470"/>
        <function-ref name="clr" scoped="" ref="0x404e8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404e7988" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404e7988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e7b60"/>
        <function-ref name="isInput" scoped="" ref="0x404e7c40"/>
        <function-ref name="toggle" scoped="" ref="0x404e7d20"/>
        <function-ref name="isOutput" scoped="" ref="0x404e7e00"/>
        <function-ref name="get" scoped="" ref="0x404e7ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e6010"/>
        <function-ref name="set" scoped="" ref="0x404e60f0"/>
        <function-ref name="clr" scoped="" ref="0x404e61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404de968" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404de968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404deb40"/>
        <function-ref name="isInput" scoped="" ref="0x404dec20"/>
        <function-ref name="toggle" scoped="" ref="0x404ded00"/>
        <function-ref name="isOutput" scoped="" ref="0x404dede0"/>
        <function-ref name="get" scoped="" ref="0x404deec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dd010"/>
        <function-ref name="set" scoped="" ref="0x404dd0f0"/>
        <function-ref name="clr" scoped="" ref="0x404dd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404e86b0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404e86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e8888"/>
        <function-ref name="isInput" scoped="" ref="0x404e8968"/>
        <function-ref name="toggle" scoped="" ref="0x404e8a48"/>
        <function-ref name="isOutput" scoped="" ref="0x404e8b28"/>
        <function-ref name="get" scoped="" ref="0x404e8c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8ce8"/>
        <function-ref name="set" scoped="" ref="0x404e8dc8"/>
        <function-ref name="clr" scoped="" ref="0x404e8ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404e6330" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404e6330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e6508"/>
        <function-ref name="isInput" scoped="" ref="0x404e65e8"/>
        <function-ref name="toggle" scoped="" ref="0x404e66c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e67a8"/>
        <function-ref name="get" scoped="" ref="0x404e6888"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e6968"/>
        <function-ref name="set" scoped="" ref="0x404e6a48"/>
        <function-ref name="clr" scoped="" ref="0x404e6b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd8cc0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd8e98"/>
        <function-ref name="isInput" scoped="" ref="0x40fd5010"/>
        <function-ref name="toggle" scoped="" ref="0x40fd50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd51d0"/>
        <function-ref name="get" scoped="" ref="0x40fd52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd5390"/>
        <function-ref name="set" scoped="" ref="0x40fd5470"/>
        <function-ref name="clr" scoped="" ref="0x40fd5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd4718" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd4718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd48f0"/>
        <function-ref name="isInput" scoped="" ref="0x40fd49d0"/>
        <function-ref name="toggle" scoped="" ref="0x40fd4ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd4b90"/>
        <function-ref name="get" scoped="" ref="0x40fd4c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd4d50"/>
        <function-ref name="set" scoped="" ref="0x40fd4e30"/>
        <function-ref name="clr" scoped="" ref="0x40fd4f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd20f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd20f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd22d0"/>
        <function-ref name="isInput" scoped="" ref="0x40fd23b0"/>
        <function-ref name="toggle" scoped="" ref="0x40fd2490"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd2570"/>
        <function-ref name="get" scoped="" ref="0x40fd2650"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd2730"/>
        <function-ref name="set" scoped="" ref="0x40fd2810"/>
        <function-ref name="clr" scoped="" ref="0x40fd28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd1ac8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40fd1d80"/>
        <function-ref name="toggle" scoped="" ref="0x40fd1e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd0010"/>
        <function-ref name="get" scoped="" ref="0x40fd00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd01d0"/>
        <function-ref name="set" scoped="" ref="0x40fd02b0"/>
        <function-ref name="clr" scoped="" ref="0x40fd0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fcf570" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fcf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fcf748"/>
        <function-ref name="isInput" scoped="" ref="0x40fcf828"/>
        <function-ref name="toggle" scoped="" ref="0x40fcf908"/>
        <function-ref name="isOutput" scoped="" ref="0x40fcf9e8"/>
        <function-ref name="get" scoped="" ref="0x40fcfac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fcfba8"/>
        <function-ref name="set" scoped="" ref="0x40fcfc88"/>
        <function-ref name="clr" scoped="" ref="0x40fcfd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fcd010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fcd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fcd1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40fcd2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40fcd3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40fcd488"/>
        <function-ref name="get" scoped="" ref="0x40fcd568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fcd648"/>
        <function-ref name="set" scoped="" ref="0x40fcd728"/>
        <function-ref name="clr" scoped="" ref="0x40fcd808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fcc9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fcc9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fccbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40fccca0"/>
        <function-ref name="toggle" scoped="" ref="0x40fccd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40fcce60"/>
        <function-ref name="get" scoped="" ref="0x40fcb010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fcb0f0"/>
        <function-ref name="set" scoped="" ref="0x40fcb1d0"/>
        <function-ref name="clr" scoped="" ref="0x40fcb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fca538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fca538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fca710"/>
        <function-ref name="isInput" scoped="" ref="0x40fca7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fca8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fca9b0"/>
        <function-ref name="get" scoped="" ref="0x40fcaa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fcab70"/>
        <function-ref name="set" scoped="" ref="0x40fcac50"/>
        <function-ref name="clr" scoped="" ref="0x40fcad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404edba8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404edba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404edd80"/>
        <function-ref name="isInput" scoped="" ref="0x404ede60"/>
        <function-ref name="toggle" scoped="" ref="0x404ec010"/>
        <function-ref name="isOutput" scoped="" ref="0x404ec0f0"/>
        <function-ref name="get" scoped="" ref="0x404ec1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ec2b0"/>
        <function-ref name="set" scoped="" ref="0x404ec390"/>
        <function-ref name="clr" scoped="" ref="0x404ec470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404eb890" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404eb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eba68"/>
        <function-ref name="isInput" scoped="" ref="0x404ebb48"/>
        <function-ref name="toggle" scoped="" ref="0x404ebc28"/>
        <function-ref name="isOutput" scoped="" ref="0x404ebd08"/>
        <function-ref name="get" scoped="" ref="0x404ebde8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ebec8"/>
        <function-ref name="set" scoped="" ref="0x404ea010"/>
        <function-ref name="clr" scoped="" ref="0x404ea0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404ee888" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404ee888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eea60"/>
        <function-ref name="isInput" scoped="" ref="0x404eeb40"/>
        <function-ref name="toggle" scoped="" ref="0x404eec20"/>
        <function-ref name="isOutput" scoped="" ref="0x404eed00"/>
        <function-ref name="get" scoped="" ref="0x404eede0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eeec0"/>
        <function-ref name="set" scoped="" ref="0x404ed010"/>
        <function-ref name="clr" scoped="" ref="0x404ed0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404ec5d0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404ec5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ec7a8"/>
        <function-ref name="isInput" scoped="" ref="0x404ec888"/>
        <function-ref name="toggle" scoped="" ref="0x404ec968"/>
        <function-ref name="isOutput" scoped="" ref="0x404eca48"/>
        <function-ref name="get" scoped="" ref="0x404ecb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ecc08"/>
        <function-ref name="set" scoped="" ref="0x404ecce8"/>
        <function-ref name="clr" scoped="" ref="0x404ecdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404ea250" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404ea250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ea428"/>
        <function-ref name="isInput" scoped="" ref="0x404ea508"/>
        <function-ref name="toggle" scoped="" ref="0x404ea5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ea6c8"/>
        <function-ref name="get" scoped="" ref="0x404ea7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ea888"/>
        <function-ref name="set" scoped="" ref="0x404ea968"/>
        <function-ref name="clr" scoped="" ref="0x404eaa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404ed250" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404ed250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ed428"/>
        <function-ref name="isInput" scoped="" ref="0x404ed508"/>
        <function-ref name="toggle" scoped="" ref="0x404ed5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ed6c8"/>
        <function-ref name="get" scoped="" ref="0x404ed7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ed888"/>
        <function-ref name="set" scoped="" ref="0x404ed968"/>
        <function-ref name="clr" scoped="" ref="0x404eda48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404ecf28" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404ecf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eb110"/>
        <function-ref name="isInput" scoped="" ref="0x404eb1f0"/>
        <function-ref name="toggle" scoped="" ref="0x404eb2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404eb3b0"/>
        <function-ref name="get" scoped="" ref="0x404eb490"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eb570"/>
        <function-ref name="set" scoped="" ref="0x404eb650"/>
        <function-ref name="clr" scoped="" ref="0x404eb730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404eaba8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404eaba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ead80"/>
        <function-ref name="isInput" scoped="" ref="0x404eae60"/>
        <function-ref name="toggle" scoped="" ref="0x404e9010"/>
        <function-ref name="isOutput" scoped="" ref="0x404e90f0"/>
        <function-ref name="get" scoped="" ref="0x404e91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e92b0"/>
        <function-ref name="set" scoped="" ref="0x404e9390"/>
        <function-ref name="clr" scoped="" ref="0x404e9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41012938" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41012938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41012b10"/>
        <function-ref name="isInput" scoped="" ref="0x41012bf0"/>
        <function-ref name="toggle" scoped="" ref="0x41012cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x41012db0"/>
        <function-ref name="get" scoped="" ref="0x41012e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41011010"/>
        <function-ref name="set" scoped="" ref="0x410110f0"/>
        <function-ref name="clr" scoped="" ref="0x410111d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410103b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410103b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41010588"/>
        <function-ref name="isInput" scoped="" ref="0x41010668"/>
        <function-ref name="toggle" scoped="" ref="0x41010748"/>
        <function-ref name="isOutput" scoped="" ref="0x41010828"/>
        <function-ref name="get" scoped="" ref="0x41010908"/>
        <function-ref name="makeOutput" scoped="" ref="0x410109e8"/>
        <function-ref name="set" scoped="" ref="0x41010ac8"/>
        <function-ref name="clr" scoped="" ref="0x41010ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4100fd70" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4100fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4100e010"/>
        <function-ref name="isInput" scoped="" ref="0x4100e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4100e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4100e2b0"/>
        <function-ref name="get" scoped="" ref="0x4100e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4100e470"/>
        <function-ref name="set" scoped="" ref="0x4100e550"/>
        <function-ref name="clr" scoped="" ref="0x4100e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4100d7f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4100d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4100d9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4100dab0"/>
        <function-ref name="toggle" scoped="" ref="0x4100db90"/>
        <function-ref name="isOutput" scoped="" ref="0x4100dc70"/>
        <function-ref name="get" scoped="" ref="0x4100dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4100de30"/>
        <function-ref name="set" scoped="" ref="0x4100df10"/>
        <function-ref name="clr" scoped="" ref="0x4100c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4100b228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4100b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4100b400"/>
        <function-ref name="isInput" scoped="" ref="0x4100b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4100b5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4100b6a0"/>
        <function-ref name="get" scoped="" ref="0x4100b780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4100b860"/>
        <function-ref name="set" scoped="" ref="0x4100b940"/>
        <function-ref name="clr" scoped="" ref="0x4100ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4100ac08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4100ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4100ade0"/>
        <function-ref name="isInput" scoped="" ref="0x4100aec0"/>
        <function-ref name="toggle" scoped="" ref="0x41009010"/>
        <function-ref name="isOutput" scoped="" ref="0x410090f0"/>
        <function-ref name="get" scoped="" ref="0x410091d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x410092b0"/>
        <function-ref name="set" scoped="" ref="0x41009390"/>
        <function-ref name="clr" scoped="" ref="0x41009470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410086c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410086c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41008898"/>
        <function-ref name="isInput" scoped="" ref="0x41008978"/>
        <function-ref name="toggle" scoped="" ref="0x41008a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41008b38"/>
        <function-ref name="get" scoped="" ref="0x41008c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41008cf8"/>
        <function-ref name="set" scoped="" ref="0x41008dd8"/>
        <function-ref name="clr" scoped="" ref="0x41008eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410060b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410060b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41006288"/>
        <function-ref name="isInput" scoped="" ref="0x41006368"/>
        <function-ref name="toggle" scoped="" ref="0x41006448"/>
        <function-ref name="isOutput" scoped="" ref="0x41006528"/>
        <function-ref name="get" scoped="" ref="0x41006608"/>
        <function-ref name="makeOutput" scoped="" ref="0x410066e8"/>
        <function-ref name="set" scoped="" ref="0x410067c8"/>
        <function-ref name="clr" scoped="" ref="0x410068a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404f04f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404f04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f06c8"/>
        <function-ref name="isInput" scoped="" ref="0x404f07a8"/>
        <function-ref name="toggle" scoped="" ref="0x404f0888"/>
        <function-ref name="isOutput" scoped="" ref="0x404f0968"/>
        <function-ref name="get" scoped="" ref="0x404f0a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f0b28"/>
        <function-ref name="set" scoped="" ref="0x404f0c08"/>
        <function-ref name="clr" scoped="" ref="0x404f0ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404fa170" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404fa170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fa348"/>
        <function-ref name="isInput" scoped="" ref="0x404fa428"/>
        <function-ref name="toggle" scoped="" ref="0x404fa508"/>
        <function-ref name="isOutput" scoped="" ref="0x404fa5e8"/>
        <function-ref name="get" scoped="" ref="0x404fa6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fa7a8"/>
        <function-ref name="set" scoped="" ref="0x404fa888"/>
        <function-ref name="clr" scoped="" ref="0x404fa968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404f2228" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404f2228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f2400"/>
        <function-ref name="isInput" scoped="" ref="0x404f24e0"/>
        <function-ref name="toggle" scoped="" ref="0x404f25c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f26a0"/>
        <function-ref name="get" scoped="" ref="0x404f2780"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f2860"/>
        <function-ref name="set" scoped="" ref="0x404f2940"/>
        <function-ref name="clr" scoped="" ref="0x404f2a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404f0e48" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404f0e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ef050"/>
        <function-ref name="isInput" scoped="" ref="0x404ef130"/>
        <function-ref name="toggle" scoped="" ref="0x404ef210"/>
        <function-ref name="isOutput" scoped="" ref="0x404ef2f0"/>
        <function-ref name="get" scoped="" ref="0x404ef3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ef4b0"/>
        <function-ref name="set" scoped="" ref="0x404ef590"/>
        <function-ref name="clr" scoped="" ref="0x404ef670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404faac8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404faac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404faca0"/>
        <function-ref name="isInput" scoped="" ref="0x404fad80"/>
        <function-ref name="toggle" scoped="" ref="0x404fae60"/>
        <function-ref name="isOutput" scoped="" ref="0x404f9010"/>
        <function-ref name="get" scoped="" ref="0x404f90f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f91d0"/>
        <function-ref name="set" scoped="" ref="0x404f92b0"/>
        <function-ref name="clr" scoped="" ref="0x404f9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404f2b80" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404f2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f2d58"/>
        <function-ref name="isInput" scoped="" ref="0x404f2e38"/>
        <function-ref name="toggle" scoped="" ref="0x404f2f18"/>
        <function-ref name="isOutput" scoped="" ref="0x404f0010"/>
        <function-ref name="get" scoped="" ref="0x404f00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f01d0"/>
        <function-ref name="set" scoped="" ref="0x404f02b0"/>
        <function-ref name="clr" scoped="" ref="0x404f0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404ef7d0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404ef7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ef9a8"/>
        <function-ref name="isInput" scoped="" ref="0x404efa88"/>
        <function-ref name="toggle" scoped="" ref="0x404efb68"/>
        <function-ref name="isOutput" scoped="" ref="0x404efc48"/>
        <function-ref name="get" scoped="" ref="0x404efd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404efe08"/>
        <function-ref name="set" scoped="" ref="0x404efee8"/>
        <function-ref name="clr" scoped="" ref="0x404fa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404f94f0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404f94f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f96c8"/>
        <function-ref name="isInput" scoped="" ref="0x404f97a8"/>
        <function-ref name="toggle" scoped="" ref="0x404f9888"/>
        <function-ref name="isOutput" scoped="" ref="0x404f9968"/>
        <function-ref name="get" scoped="" ref="0x404f9a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f9b28"/>
        <function-ref name="set" scoped="" ref="0x404f9c08"/>
        <function-ref name="clr" scoped="" ref="0x404f9ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4104d538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4104d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4104d710"/>
        <function-ref name="isInput" scoped="" ref="0x4104d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4104d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4104d9b0"/>
        <function-ref name="get" scoped="" ref="0x4104da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4104db70"/>
        <function-ref name="set" scoped="" ref="0x4104dc50"/>
        <function-ref name="clr" scoped="" ref="0x4104dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4104b010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4104b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4104b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4104b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4104b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4104b488"/>
        <function-ref name="get" scoped="" ref="0x4104b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4104b648"/>
        <function-ref name="set" scoped="" ref="0x4104b728"/>
        <function-ref name="clr" scoped="" ref="0x4104b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4104a9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4104a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4104abc0"/>
        <function-ref name="isInput" scoped="" ref="0x4104aca0"/>
        <function-ref name="toggle" scoped="" ref="0x4104ad80"/>
        <function-ref name="isOutput" scoped="" ref="0x4104ae60"/>
        <function-ref name="get" scoped="" ref="0x41049010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410490f0"/>
        <function-ref name="set" scoped="" ref="0x410491d0"/>
        <function-ref name="clr" scoped="" ref="0x410492b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41048538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41048538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41048710"/>
        <function-ref name="isInput" scoped="" ref="0x410487f0"/>
        <function-ref name="toggle" scoped="" ref="0x410488d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410489b0"/>
        <function-ref name="get" scoped="" ref="0x41048a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41048b70"/>
        <function-ref name="set" scoped="" ref="0x41048c50"/>
        <function-ref name="clr" scoped="" ref="0x41048d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41046010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41046010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410461e8"/>
        <function-ref name="isInput" scoped="" ref="0x410462c8"/>
        <function-ref name="toggle" scoped="" ref="0x410463a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41046488"/>
        <function-ref name="get" scoped="" ref="0x41046568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41046648"/>
        <function-ref name="set" scoped="" ref="0x41046728"/>
        <function-ref name="clr" scoped="" ref="0x41046808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410459e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410459e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41045bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41045ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41045d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41045e60"/>
        <function-ref name="get" scoped="" ref="0x41044010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410440f0"/>
        <function-ref name="set" scoped="" ref="0x410441d0"/>
        <function-ref name="clr" scoped="" ref="0x410442b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41043538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41043538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41043710"/>
        <function-ref name="isInput" scoped="" ref="0x410437f0"/>
        <function-ref name="toggle" scoped="" ref="0x410438d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410439b0"/>
        <function-ref name="get" scoped="" ref="0x41043a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41043b70"/>
        <function-ref name="set" scoped="" ref="0x41043c50"/>
        <function-ref name="clr" scoped="" ref="0x41043d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41041010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41041010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410411e8"/>
        <function-ref name="isInput" scoped="" ref="0x410412c8"/>
        <function-ref name="toggle" scoped="" ref="0x410413a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41041488"/>
        <function-ref name="get" scoped="" ref="0x41041568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41041648"/>
        <function-ref name="set" scoped="" ref="0x41041728"/>
        <function-ref name="clr" scoped="" ref="0x41041808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404f5e48" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404f5e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40500050"/>
        <function-ref name="isInput" scoped="" ref="0x40500130"/>
        <function-ref name="toggle" scoped="" ref="0x40500210"/>
        <function-ref name="isOutput" scoped="" ref="0x405002f0"/>
        <function-ref name="get" scoped="" ref="0x405003d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405004b0"/>
        <function-ref name="set" scoped="" ref="0x40500590"/>
        <function-ref name="clr" scoped="" ref="0x40500670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404ffac8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404ffac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ffca0"/>
        <function-ref name="isInput" scoped="" ref="0x404ffd80"/>
        <function-ref name="toggle" scoped="" ref="0x404ffe60"/>
        <function-ref name="isOutput" scoped="" ref="0x404fd010"/>
        <function-ref name="get" scoped="" ref="0x404fd0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fd1d0"/>
        <function-ref name="set" scoped="" ref="0x404fd2b0"/>
        <function-ref name="clr" scoped="" ref="0x404fd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404f6b00" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404f6b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f6cd8"/>
        <function-ref name="isInput" scoped="" ref="0x404f6db8"/>
        <function-ref name="toggle" scoped="" ref="0x404f6e98"/>
        <function-ref name="isOutput" scoped="" ref="0x404f5010"/>
        <function-ref name="get" scoped="" ref="0x404f50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f51d0"/>
        <function-ref name="set" scoped="" ref="0x404f52b0"/>
        <function-ref name="clr" scoped="" ref="0x404f5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405007d0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405007d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405009a8"/>
        <function-ref name="isInput" scoped="" ref="0x40500a88"/>
        <function-ref name="toggle" scoped="" ref="0x40500b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40500c48"/>
        <function-ref name="get" scoped="" ref="0x40500d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40500e08"/>
        <function-ref name="set" scoped="" ref="0x40500ee8"/>
        <function-ref name="clr" scoped="" ref="0x404ff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404fd4f0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404fd4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fd6c8"/>
        <function-ref name="isInput" scoped="" ref="0x404fd7a8"/>
        <function-ref name="toggle" scoped="" ref="0x404fd888"/>
        <function-ref name="isOutput" scoped="" ref="0x404fd968"/>
        <function-ref name="get" scoped="" ref="0x404fda48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fdb28"/>
        <function-ref name="set" scoped="" ref="0x404fdc08"/>
        <function-ref name="clr" scoped="" ref="0x404fdce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404f54f0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404f54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f56c8"/>
        <function-ref name="isInput" scoped="" ref="0x404f57a8"/>
        <function-ref name="toggle" scoped="" ref="0x404f5888"/>
        <function-ref name="isOutput" scoped="" ref="0x404f5968"/>
        <function-ref name="get" scoped="" ref="0x404f5a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f5b28"/>
        <function-ref name="set" scoped="" ref="0x404f5c08"/>
        <function-ref name="clr" scoped="" ref="0x404f5ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404ff170" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404ff170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ff348"/>
        <function-ref name="isInput" scoped="" ref="0x404ff428"/>
        <function-ref name="toggle" scoped="" ref="0x404ff508"/>
        <function-ref name="isOutput" scoped="" ref="0x404ff5e8"/>
        <function-ref name="get" scoped="" ref="0x404ff6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ff7a8"/>
        <function-ref name="set" scoped="" ref="0x404ff888"/>
        <function-ref name="clr" scoped="" ref="0x404ff968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404fde48" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404fde48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fc050"/>
        <function-ref name="isInput" scoped="" ref="0x404fc130"/>
        <function-ref name="toggle" scoped="" ref="0x404fc210"/>
        <function-ref name="isOutput" scoped="" ref="0x404fc2f0"/>
        <function-ref name="get" scoped="" ref="0x404fc3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fc4b0"/>
        <function-ref name="set" scoped="" ref="0x404fc590"/>
        <function-ref name="clr" scoped="" ref="0x404fc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41089418" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41089418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410895f0"/>
        <function-ref name="isInput" scoped="" ref="0x410896d0"/>
        <function-ref name="toggle" scoped="" ref="0x410897b0"/>
        <function-ref name="isOutput" scoped="" ref="0x41089890"/>
        <function-ref name="get" scoped="" ref="0x41089970"/>
        <function-ref name="makeOutput" scoped="" ref="0x41089a50"/>
        <function-ref name="set" scoped="" ref="0x41089b30"/>
        <function-ref name="clr" scoped="" ref="0x41089c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41088de0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41088de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41087010"/>
        <function-ref name="isInput" scoped="" ref="0x410870f0"/>
        <function-ref name="toggle" scoped="" ref="0x410871d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410872b0"/>
        <function-ref name="get" scoped="" ref="0x41087390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41087470"/>
        <function-ref name="set" scoped="" ref="0x41087550"/>
        <function-ref name="clr" scoped="" ref="0x41087630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410867f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410867f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410869d0"/>
        <function-ref name="isInput" scoped="" ref="0x41086ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41086b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41086c70"/>
        <function-ref name="get" scoped="" ref="0x41086d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41086e30"/>
        <function-ref name="set" scoped="" ref="0x41086f10"/>
        <function-ref name="clr" scoped="" ref="0x41085010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41084228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41084228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41084400"/>
        <function-ref name="isInput" scoped="" ref="0x410844e0"/>
        <function-ref name="toggle" scoped="" ref="0x410845c0"/>
        <function-ref name="isOutput" scoped="" ref="0x410846a0"/>
        <function-ref name="get" scoped="" ref="0x41084780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41084860"/>
        <function-ref name="set" scoped="" ref="0x41084940"/>
        <function-ref name="clr" scoped="" ref="0x41084a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41083c08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41083c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41083de0"/>
        <function-ref name="isInput" scoped="" ref="0x41083ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41082010"/>
        <function-ref name="isOutput" scoped="" ref="0x410820f0"/>
        <function-ref name="get" scoped="" ref="0x410821d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x410822b0"/>
        <function-ref name="set" scoped="" ref="0x41082390"/>
        <function-ref name="clr" scoped="" ref="0x41082470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410816c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410816c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41081898"/>
        <function-ref name="isInput" scoped="" ref="0x41081978"/>
        <function-ref name="toggle" scoped="" ref="0x41081a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41081b38"/>
        <function-ref name="get" scoped="" ref="0x41081c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41081cf8"/>
        <function-ref name="set" scoped="" ref="0x41081dd8"/>
        <function-ref name="clr" scoped="" ref="0x41081eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4107e0b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4107e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4107e288"/>
        <function-ref name="isInput" scoped="" ref="0x4107e368"/>
        <function-ref name="toggle" scoped="" ref="0x4107e448"/>
        <function-ref name="isOutput" scoped="" ref="0x4107e528"/>
        <function-ref name="get" scoped="" ref="0x4107e608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4107e6e8"/>
        <function-ref name="set" scoped="" ref="0x4107e7c8"/>
        <function-ref name="clr" scoped="" ref="0x4107e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4107da88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4107da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4107dc60"/>
        <function-ref name="isInput" scoped="" ref="0x4107dd40"/>
        <function-ref name="toggle" scoped="" ref="0x4107de20"/>
        <function-ref name="isOutput" scoped="" ref="0x4107df00"/>
        <function-ref name="get" scoped="" ref="0x4107c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4107c0f0"/>
        <function-ref name="set" scoped="" ref="0x4107c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4107c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405056b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405056b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40505888"/>
        <function-ref name="isInput" scoped="" ref="0x40505968"/>
        <function-ref name="toggle" scoped="" ref="0x40505a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40505b28"/>
        <function-ref name="get" scoped="" ref="0x40505c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40505ce8"/>
        <function-ref name="set" scoped="" ref="0x40505dc8"/>
        <function-ref name="clr" scoped="" ref="0x40505ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40503330" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40503330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40503508"/>
        <function-ref name="isInput" scoped="" ref="0x405035e8"/>
        <function-ref name="toggle" scoped="" ref="0x405036c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405037a8"/>
        <function-ref name="get" scoped="" ref="0x40503888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40503968"/>
        <function-ref name="set" scoped="" ref="0x40503a48"/>
        <function-ref name="clr" scoped="" ref="0x40503b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405063d8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405063d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405065b0"/>
        <function-ref name="isInput" scoped="" ref="0x40506690"/>
        <function-ref name="toggle" scoped="" ref="0x40506770"/>
        <function-ref name="isOutput" scoped="" ref="0x40506850"/>
        <function-ref name="get" scoped="" ref="0x40506930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40506a10"/>
        <function-ref name="set" scoped="" ref="0x40506af0"/>
        <function-ref name="clr" scoped="" ref="0x40506bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40504030" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40504030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40504208"/>
        <function-ref name="isInput" scoped="" ref="0x405042e8"/>
        <function-ref name="toggle" scoped="" ref="0x405043c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405044a8"/>
        <function-ref name="get" scoped="" ref="0x40504588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40504668"/>
        <function-ref name="set" scoped="" ref="0x40504748"/>
        <function-ref name="clr" scoped="" ref="0x40504828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40503c88" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40503c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40503e60"/>
        <function-ref name="isInput" scoped="" ref="0x40502010"/>
        <function-ref name="toggle" scoped="" ref="0x405020f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405021d0"/>
        <function-ref name="get" scoped="" ref="0x405022b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40502390"/>
        <function-ref name="set" scoped="" ref="0x40502470"/>
        <function-ref name="clr" scoped="" ref="0x40502550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40506d30" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40506d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40506f08"/>
        <function-ref name="isInput" scoped="" ref="0x40505010"/>
        <function-ref name="toggle" scoped="" ref="0x405050f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405051d0"/>
        <function-ref name="get" scoped="" ref="0x405052b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40505390"/>
        <function-ref name="set" scoped="" ref="0x40505470"/>
        <function-ref name="clr" scoped="" ref="0x40505550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40504988" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40504988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40504b60"/>
        <function-ref name="isInput" scoped="" ref="0x40504c40"/>
        <function-ref name="toggle" scoped="" ref="0x40504d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40504e00"/>
        <function-ref name="get" scoped="" ref="0x40504ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40503010"/>
        <function-ref name="set" scoped="" ref="0x405030f0"/>
        <function-ref name="clr" scoped="" ref="0x405031d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405026b0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405026b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40502888"/>
        <function-ref name="isInput" scoped="" ref="0x40502968"/>
        <function-ref name="toggle" scoped="" ref="0x40502a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40502b28"/>
        <function-ref name="get" scoped="" ref="0x40502c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40502ce8"/>
        <function-ref name="set" scoped="" ref="0x40502dc8"/>
        <function-ref name="clr" scoped="" ref="0x40502ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410cbde8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410cbde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410c7010"/>
        <function-ref name="isInput" scoped="" ref="0x410c70f0"/>
        <function-ref name="toggle" scoped="" ref="0x410c71d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410c72b0"/>
        <function-ref name="get" scoped="" ref="0x410c7390"/>
        <function-ref name="makeOutput" scoped="" ref="0x410c7470"/>
        <function-ref name="set" scoped="" ref="0x410c7550"/>
        <function-ref name="clr" scoped="" ref="0x410c7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410c67f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410c67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410c69d0"/>
        <function-ref name="isInput" scoped="" ref="0x410c6ab0"/>
        <function-ref name="toggle" scoped="" ref="0x410c6b90"/>
        <function-ref name="isOutput" scoped="" ref="0x410c6c70"/>
        <function-ref name="get" scoped="" ref="0x410c6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x410c6e30"/>
        <function-ref name="set" scoped="" ref="0x410c6f10"/>
        <function-ref name="clr" scoped="" ref="0x410c5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410c4228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410c4228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410c4400"/>
        <function-ref name="isInput" scoped="" ref="0x410c44e0"/>
        <function-ref name="toggle" scoped="" ref="0x410c45c0"/>
        <function-ref name="isOutput" scoped="" ref="0x410c46a0"/>
        <function-ref name="get" scoped="" ref="0x410c4780"/>
        <function-ref name="makeOutput" scoped="" ref="0x410c4860"/>
        <function-ref name="set" scoped="" ref="0x410c4940"/>
        <function-ref name="clr" scoped="" ref="0x410c4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410c3c08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410c3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410c3de0"/>
        <function-ref name="isInput" scoped="" ref="0x410c3ec0"/>
        <function-ref name="toggle" scoped="" ref="0x410c2010"/>
        <function-ref name="isOutput" scoped="" ref="0x410c20f0"/>
        <function-ref name="get" scoped="" ref="0x410c21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x410c22b0"/>
        <function-ref name="set" scoped="" ref="0x410c2390"/>
        <function-ref name="clr" scoped="" ref="0x410c2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410c16c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410c16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410c1898"/>
        <function-ref name="isInput" scoped="" ref="0x410c1978"/>
        <function-ref name="toggle" scoped="" ref="0x410c1a58"/>
        <function-ref name="isOutput" scoped="" ref="0x410c1b38"/>
        <function-ref name="get" scoped="" ref="0x410c1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x410c1cf8"/>
        <function-ref name="set" scoped="" ref="0x410c1dd8"/>
        <function-ref name="clr" scoped="" ref="0x410c1eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410bf0b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410bf0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410bf288"/>
        <function-ref name="isInput" scoped="" ref="0x410bf368"/>
        <function-ref name="toggle" scoped="" ref="0x410bf448"/>
        <function-ref name="isOutput" scoped="" ref="0x410bf528"/>
        <function-ref name="get" scoped="" ref="0x410bf608"/>
        <function-ref name="makeOutput" scoped="" ref="0x410bf6e8"/>
        <function-ref name="set" scoped="" ref="0x410bf7c8"/>
        <function-ref name="clr" scoped="" ref="0x410bf8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410bea88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410bea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410bec60"/>
        <function-ref name="isInput" scoped="" ref="0x410bed40"/>
        <function-ref name="toggle" scoped="" ref="0x410bee20"/>
        <function-ref name="isOutput" scoped="" ref="0x410bef00"/>
        <function-ref name="get" scoped="" ref="0x410bd010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410bd0f0"/>
        <function-ref name="set" scoped="" ref="0x410bd1d0"/>
        <function-ref name="clr" scoped="" ref="0x410bd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410bc538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410bc538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410bc710"/>
        <function-ref name="isInput" scoped="" ref="0x410bc7f0"/>
        <function-ref name="toggle" scoped="" ref="0x410bc8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410bc9b0"/>
        <function-ref name="get" scoped="" ref="0x410bca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x410bcb70"/>
        <function-ref name="set" scoped="" ref="0x410bcc50"/>
        <function-ref name="clr" scoped="" ref="0x410bcd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4050bf28" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4050bf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050a110"/>
        <function-ref name="isInput" scoped="" ref="0x4050a1f0"/>
        <function-ref name="toggle" scoped="" ref="0x4050a2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4050a3b0"/>
        <function-ref name="get" scoped="" ref="0x4050a490"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050a570"/>
        <function-ref name="set" scoped="" ref="0x4050a650"/>
        <function-ref name="clr" scoped="" ref="0x4050a730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40509ba8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40509ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40509d80"/>
        <function-ref name="isInput" scoped="" ref="0x40509e60"/>
        <function-ref name="toggle" scoped="" ref="0x40508010"/>
        <function-ref name="isOutput" scoped="" ref="0x405080f0"/>
        <function-ref name="get" scoped="" ref="0x405081d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405082b0"/>
        <function-ref name="set" scoped="" ref="0x40508390"/>
        <function-ref name="clr" scoped="" ref="0x40508470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4050cc28" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4050cc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050ce00"/>
        <function-ref name="isInput" scoped="" ref="0x4050cee0"/>
        <function-ref name="toggle" scoped="" ref="0x4050b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4050b0f0"/>
        <function-ref name="get" scoped="" ref="0x4050b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050b2b0"/>
        <function-ref name="set" scoped="" ref="0x4050b390"/>
        <function-ref name="clr" scoped="" ref="0x4050b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4050a890" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4050a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050aa68"/>
        <function-ref name="isInput" scoped="" ref="0x4050ab48"/>
        <function-ref name="toggle" scoped="" ref="0x4050ac28"/>
        <function-ref name="isOutput" scoped="" ref="0x4050ad08"/>
        <function-ref name="get" scoped="" ref="0x4050ade8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050aec8"/>
        <function-ref name="set" scoped="" ref="0x40509010"/>
        <function-ref name="clr" scoped="" ref="0x405090f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405085d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405085d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405087a8"/>
        <function-ref name="isInput" scoped="" ref="0x40508888"/>
        <function-ref name="toggle" scoped="" ref="0x40508968"/>
        <function-ref name="isOutput" scoped="" ref="0x40508a48"/>
        <function-ref name="get" scoped="" ref="0x40508b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508c08"/>
        <function-ref name="set" scoped="" ref="0x40508ce8"/>
        <function-ref name="clr" scoped="" ref="0x40508dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4050b5d0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4050b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050b7a8"/>
        <function-ref name="isInput" scoped="" ref="0x4050b888"/>
        <function-ref name="toggle" scoped="" ref="0x4050b968"/>
        <function-ref name="isOutput" scoped="" ref="0x4050ba48"/>
        <function-ref name="get" scoped="" ref="0x4050bb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050bc08"/>
        <function-ref name="set" scoped="" ref="0x4050bce8"/>
        <function-ref name="clr" scoped="" ref="0x4050bdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40509250" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40509250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40509428"/>
        <function-ref name="isInput" scoped="" ref="0x40509508"/>
        <function-ref name="toggle" scoped="" ref="0x405095e8"/>
        <function-ref name="isOutput" scoped="" ref="0x405096c8"/>
        <function-ref name="get" scoped="" ref="0x405097a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40509888"/>
        <function-ref name="set" scoped="" ref="0x40509968"/>
        <function-ref name="clr" scoped="" ref="0x40509a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40508f28" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40508f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40515110"/>
        <function-ref name="isInput" scoped="" ref="0x405151f0"/>
        <function-ref name="toggle" scoped="" ref="0x405152d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405153b0"/>
        <function-ref name="get" scoped="" ref="0x40515490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40515570"/>
        <function-ref name="set" scoped="" ref="0x40515650"/>
        <function-ref name="clr" scoped="" ref="0x40515730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41107538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41107538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41107710"/>
        <function-ref name="isInput" scoped="" ref="0x411077f0"/>
        <function-ref name="toggle" scoped="" ref="0x411078d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411079b0"/>
        <function-ref name="get" scoped="" ref="0x41107a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41107b70"/>
        <function-ref name="set" scoped="" ref="0x41107c50"/>
        <function-ref name="clr" scoped="" ref="0x41107d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41105010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41105010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411051e8"/>
        <function-ref name="isInput" scoped="" ref="0x411052c8"/>
        <function-ref name="toggle" scoped="" ref="0x411053a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41105488"/>
        <function-ref name="get" scoped="" ref="0x41105568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41105648"/>
        <function-ref name="set" scoped="" ref="0x41105728"/>
        <function-ref name="clr" scoped="" ref="0x41105808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411049e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411049e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41104bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41104ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41104d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41104e60"/>
        <function-ref name="get" scoped="" ref="0x41103010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411030f0"/>
        <function-ref name="set" scoped="" ref="0x411031d0"/>
        <function-ref name="clr" scoped="" ref="0x411032b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41102538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41102538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41102710"/>
        <function-ref name="isInput" scoped="" ref="0x411027f0"/>
        <function-ref name="toggle" scoped="" ref="0x411028d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411029b0"/>
        <function-ref name="get" scoped="" ref="0x41102a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41102b70"/>
        <function-ref name="set" scoped="" ref="0x41102c50"/>
        <function-ref name="clr" scoped="" ref="0x41102d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41100010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41100010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411001e8"/>
        <function-ref name="isInput" scoped="" ref="0x411002c8"/>
        <function-ref name="toggle" scoped="" ref="0x411003a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41100488"/>
        <function-ref name="get" scoped="" ref="0x41100568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41100648"/>
        <function-ref name="set" scoped="" ref="0x41100728"/>
        <function-ref name="clr" scoped="" ref="0x41100808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410fe9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410fe9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410febc0"/>
        <function-ref name="isInput" scoped="" ref="0x410feca0"/>
        <function-ref name="toggle" scoped="" ref="0x410fed80"/>
        <function-ref name="isOutput" scoped="" ref="0x410fee60"/>
        <function-ref name="get" scoped="" ref="0x410fd010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410fd0f0"/>
        <function-ref name="set" scoped="" ref="0x410fd1d0"/>
        <function-ref name="clr" scoped="" ref="0x410fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410fc538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410fc538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410fc710"/>
        <function-ref name="isInput" scoped="" ref="0x410fc7f0"/>
        <function-ref name="toggle" scoped="" ref="0x410fc8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410fc9b0"/>
        <function-ref name="get" scoped="" ref="0x410fca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x410fcb70"/>
        <function-ref name="set" scoped="" ref="0x410fcc50"/>
        <function-ref name="clr" scoped="" ref="0x410fcd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410fa010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410fa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410fa1e8"/>
        <function-ref name="isInput" scoped="" ref="0x410fa2c8"/>
        <function-ref name="toggle" scoped="" ref="0x410fa3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x410fa488"/>
        <function-ref name="get" scoped="" ref="0x410fa568"/>
        <function-ref name="makeOutput" scoped="" ref="0x410fa648"/>
        <function-ref name="set" scoped="" ref="0x410fa728"/>
        <function-ref name="clr" scoped="" ref="0x410fa808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40512e60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40512e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40511050"/>
        <function-ref name="isInput" scoped="" ref="0x40511130"/>
        <function-ref name="toggle" scoped="" ref="0x40511210"/>
        <function-ref name="isOutput" scoped="" ref="0x405112f0"/>
        <function-ref name="get" scoped="" ref="0x405113d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405114b0"/>
        <function-ref name="set" scoped="" ref="0x40511590"/>
        <function-ref name="clr" scoped="" ref="0x40511670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4051e458" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4051e458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051e630"/>
        <function-ref name="isInput" scoped="" ref="0x4051e710"/>
        <function-ref name="toggle" scoped="" ref="0x4051e7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4051e8d0"/>
        <function-ref name="get" scoped="" ref="0x4051e9b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051ea90"/>
        <function-ref name="set" scoped="" ref="0x4051eb70"/>
        <function-ref name="clr" scoped="" ref="0x4051ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4052aa30" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4052aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052ac08"/>
        <function-ref name="isInput" scoped="" ref="0x4052ace8"/>
        <function-ref name="toggle" scoped="" ref="0x4052adc8"/>
        <function-ref name="isOutput" scoped="" ref="0x4052aea8"/>
        <function-ref name="get" scoped="" ref="0x40529010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405290f0"/>
        <function-ref name="set" scoped="" ref="0x405291d0"/>
        <function-ref name="clr" scoped="" ref="0x405292b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40527090" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40527090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40527268"/>
        <function-ref name="isInput" scoped="" ref="0x40527348"/>
        <function-ref name="toggle" scoped="" ref="0x40527428"/>
        <function-ref name="isOutput" scoped="" ref="0x40527508"/>
        <function-ref name="get" scoped="" ref="0x405275e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405276c8"/>
        <function-ref name="set" scoped="" ref="0x405277a8"/>
        <function-ref name="clr" scoped="" ref="0x40527888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405246c0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405246c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40524898"/>
        <function-ref name="isInput" scoped="" ref="0x40524978"/>
        <function-ref name="toggle" scoped="" ref="0x40524a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40524b38"/>
        <function-ref name="get" scoped="" ref="0x40524c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40524cf8"/>
        <function-ref name="set" scoped="" ref="0x40524dd8"/>
        <function-ref name="clr" scoped="" ref="0x40524eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40530cb8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40530cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40530e90"/>
        <function-ref name="isInput" scoped="" ref="0x4052f010"/>
        <function-ref name="toggle" scoped="" ref="0x4052f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4052f1d0"/>
        <function-ref name="get" scoped="" ref="0x4052f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052f390"/>
        <function-ref name="set" scoped="" ref="0x4052f470"/>
        <function-ref name="clr" scoped="" ref="0x4052f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4052c3b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4052c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052c588"/>
        <function-ref name="isInput" scoped="" ref="0x4052c668"/>
        <function-ref name="toggle" scoped="" ref="0x4052c748"/>
        <function-ref name="isOutput" scoped="" ref="0x4052c828"/>
        <function-ref name="get" scoped="" ref="0x4052c908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052c9e8"/>
        <function-ref name="set" scoped="" ref="0x4052cac8"/>
        <function-ref name="clr" scoped="" ref="0x4052cba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40538978" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40538978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40538b50"/>
        <function-ref name="isInput" scoped="" ref="0x40538c30"/>
        <function-ref name="toggle" scoped="" ref="0x40538d10"/>
        <function-ref name="isOutput" scoped="" ref="0x40538df0"/>
        <function-ref name="get" scoped="" ref="0x40538ed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40537010"/>
        <function-ref name="set" scoped="" ref="0x405370f0"/>
        <function-ref name="clr" scoped="" ref="0x405371d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40536ee0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40536ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405350e0"/>
        <function-ref name="isInput" scoped="" ref="0x405351c0"/>
        <function-ref name="toggle" scoped="" ref="0x405352a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40535380"/>
        <function-ref name="get" scoped="" ref="0x40535460"/>
        <function-ref name="makeOutput" scoped="" ref="0x40535540"/>
        <function-ref name="set" scoped="" ref="0x40535620"/>
        <function-ref name="clr" scoped="" ref="0x40535700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405323e8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405323e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405325c0"/>
        <function-ref name="isInput" scoped="" ref="0x405326a0"/>
        <function-ref name="toggle" scoped="" ref="0x40532780"/>
        <function-ref name="isOutput" scoped="" ref="0x40532860"/>
        <function-ref name="get" scoped="" ref="0x40532940"/>
        <function-ref name="makeOutput" scoped="" ref="0x40532a20"/>
        <function-ref name="set" scoped="" ref="0x40532b00"/>
        <function-ref name="clr" scoped="" ref="0x40532be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4053e8f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4053e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053eac8"/>
        <function-ref name="isInput" scoped="" ref="0x4053eba8"/>
        <function-ref name="toggle" scoped="" ref="0x4053ec88"/>
        <function-ref name="isOutput" scoped="" ref="0x4053ed68"/>
        <function-ref name="get" scoped="" ref="0x4053ee48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053ef28"/>
        <function-ref name="set" scoped="" ref="0x4053d018"/>
        <function-ref name="clr" scoped="" ref="0x4053d0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4053cdd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4053cdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053b010"/>
        <function-ref name="isInput" scoped="" ref="0x4053b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4053b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4053b2b0"/>
        <function-ref name="get" scoped="" ref="0x4053b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053b470"/>
        <function-ref name="set" scoped="" ref="0x4053b550"/>
        <function-ref name="clr" scoped="" ref="0x4053b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405463b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405463b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40546588"/>
        <function-ref name="isInput" scoped="" ref="0x40546668"/>
        <function-ref name="toggle" scoped="" ref="0x40546748"/>
        <function-ref name="isOutput" scoped="" ref="0x40546828"/>
        <function-ref name="get" scoped="" ref="0x40546908"/>
        <function-ref name="makeOutput" scoped="" ref="0x405469e8"/>
        <function-ref name="set" scoped="" ref="0x40546ac8"/>
        <function-ref name="clr" scoped="" ref="0x40546ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40558858" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40558858"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40558a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40558c08" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40558c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40558de0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40558ec0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40567010"/>
        <function-ref name="actualMicro" scoped="" ref="0x405670f0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x405671d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40572010" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40572010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405721e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x405731c8" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x405731c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405733a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40573b28" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40573b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40573d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40573560" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40573560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40573738"/>
        <function-ref name="taskLoop" scoped="" ref="0x40573818"/>
        <function-ref name="runNextTask" scoped="" ref="0x405738f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40359600" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40359600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403597d8"/>
        <function-ref name="runTask" scoped="" ref="0x403598b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40353ed8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40353ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4034f0c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x4034f1a0"/>
        <function-ref name="runNextTask" scoped="" ref="0x4034f280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403ced30" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403ced30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403cef08"/>
        <function-ref name="runTask" scoped="" ref="0x403cc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403cc9b8" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403cc9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403ccb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403ce4f8" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403ce4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ce6d0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403ce7b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403ce890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403e1f10" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403e1f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403db108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403dc438" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403dc438"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403dc610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403e1148" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403e1148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403e1320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4047df18" loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4047df18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4057a108"/>
        <function-ref name="stopDone" scoped="" ref="0x4057a1e8"/>
        <function-ref name="start" scoped="" ref="0x4057a2c8"/>
        <function-ref name="stop" scoped="" ref="0x4057a3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4057a808" loc="57:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4057a808"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4057a9e0"/>
        <function-ref name="getPayload" scoped="" ref="0x4057aac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4057aba0"/>
        <function-ref name="cancel" scoped="" ref="0x4057ac80"/>
        <function-ref name="sendDone" scoped="" ref="0x4057ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40578890" loc="59:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40578890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40578a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40578be8" loc="61:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40578be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40578dc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40578ea0"/>
        <function-ref name="getPayload" scoped="" ref="0x40577010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405770f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405771d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40584490" loc="64:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40584490"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4058a010"/>
        <function-ref name="clear" scoped="" ref="0x4058a3c0"/>
        <function-ref name="isValid" scoped="" ref="0x40584be0"/>
        <function-ref name="set" scoped="" ref="0x4058a770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40590e58" loc="66:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40590e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40593050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40593130"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40593210"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x405932f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405781f8" loc="58:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405781f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405783d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40587be8" loc="63:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40587be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40587dc0"/>
        <function-ref name="noAck" scoped="" ref="0x40587ea0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40584010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4058ba98" loc="62:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4058ba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4058bc70"/>
        <function-ref name="source" scoped="" ref="0x4058bd50"/>
        <function-ref name="address" scoped="" ref="0x4058be30"/>
        <function-ref name="destination" scoped="" ref="0x4058bf10"/>
        <function-ref name="setSource" scoped="" ref="0x40576010"/>
        <function-ref name="setDestination" scoped="" ref="0x405760f0"/>
        <function-ref name="type" scoped="" ref="0x405761d0"/>
        <function-ref name="setType" scoped="" ref="0x405762b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40576390"/>
        <function-ref name="setGroup" scoped="" ref="0x40576470"/>
        <function-ref name="localGroup" scoped="" ref="0x40576550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4058aea8" loc="65:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4058aea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405889c0"/>
        <function-ref name="clear" scoped="" ref="0x40588d70"/>
        <function-ref name="isValid" scoped="" ref="0x40588610"/>
        <function-ref name="set" scoped="" ref="0x40594150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405988f8" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405988f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40598ad0"/>
        <function-ref name="stopDone" scoped="" ref="0x40598bb0"/>
        <function-ref name="start" scoped="" ref="0x40598c90"/>
        <function-ref name="stop" scoped="" ref="0x40598d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405aa578" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405aa578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405aa750"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405aa830"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405aa910"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405aa9f0"/>
        <function-ref name="setCca" scoped="" ref="0x405aaad0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405aabb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405a0260" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405a0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405a04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405a7270" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405a7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a7448"/>
        <function-ref name="payloadLength" scoped="" ref="0x405a7528"/>
        <function-ref name="getPayload" scoped="" ref="0x405a7608"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405a76e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405a77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405971f8" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405971f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405973d0"/>
        <function-ref name="getPayload" scoped="" ref="0x405974b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40597590"/>
        <function-ref name="cancel" scoped="" ref="0x40597670"/>
        <function-ref name="sendDone" scoped="" ref="0x40597750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40595268" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40595268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40595440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x405a2af0" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x405a2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x405a2cc8"/>
        <function-ref name="setNetwork" scoped="" ref="0x405a2da8"/>
        <function-ref name="getRssi" scoped="" ref="0x405a2e88"/>
        <function-ref name="getNetwork" scoped="" ref="0x405a6010"/>
        <function-ref name="getPower" scoped="" ref="0x405a60f0"/>
        <function-ref name="getLqi" scoped="" ref="0x405a61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405aada0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405aada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x405a5010"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x405a50f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x405a51d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x405a52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40597bb8" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40597bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40597d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405a63f0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405a65c8"/>
        <function-ref name="noAck" scoped="" ref="0x405a66a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x405a6788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405b6760" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405b6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405b6938"/>
        <function-ref name="setRetries" scoped="" ref="0x405b6a18"/>
        <function-ref name="getRetries" scoped="" ref="0x405b6af8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x405b6bd8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405b6cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405955d8" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405955d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405957b0"/>
        <function-ref name="source" scoped="" ref="0x40595890"/>
        <function-ref name="address" scoped="" ref="0x40595970"/>
        <function-ref name="destination" scoped="" ref="0x40595a50"/>
        <function-ref name="setSource" scoped="" ref="0x40595b30"/>
        <function-ref name="setDestination" scoped="" ref="0x40595c10"/>
        <function-ref name="type" scoped="" ref="0x40595cf0"/>
        <function-ref name="setType" scoped="" ref="0x40595dd0"/>
        <function-ref name="isForMe" scoped="" ref="0x40595eb0"/>
        <function-ref name="setGroup" scoped="" ref="0x405a7010"/>
        <function-ref name="localGroup" scoped="" ref="0x405a70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x405af7e8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405af7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x405af9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405a9440" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405a9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405a9618"/>
        <function-ref name="stopDone" scoped="" ref="0x405a96f8"/>
        <function-ref name="start" scoped="" ref="0x405a97d8"/>
        <function-ref name="stop" scoped="" ref="0x405a98b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x405c7118" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405c7118"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x405c72f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405c7b00" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405c7b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405c7cd8"/>
        <function-ref name="setRetries" scoped="" ref="0x405c7db8"/>
        <function-ref name="getRetries" scoped="" ref="0x405c7e98"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x405c4010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405c40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x405bc2a0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x405bc2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x405bc478"/>
        <function-ref name="setNetwork" scoped="" ref="0x405bc558"/>
        <function-ref name="getRssi" scoped="" ref="0x405bc638"/>
        <function-ref name="getNetwork" scoped="" ref="0x405bc718"/>
        <function-ref name="getPower" scoped="" ref="0x405bc7f8"/>
        <function-ref name="getLqi" scoped="" ref="0x405bc8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x405bf760" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x405bf760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405bf938"/>
        <function-ref name="getPayload" scoped="" ref="0x405bfa18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405bfaf8"/>
        <function-ref name="cancel" scoped="" ref="0x405bfbd8"/>
        <function-ref name="sendDone" scoped="" ref="0x405bfcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405c74e0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405c74e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x405c76b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x405c7798"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x405c7878"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x405c7958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x405c6bd0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x405c6bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405c6da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405bcaf8" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405bcaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405bccd0"/>
        <function-ref name="noAck" scoped="" ref="0x405bcdb0"/>
        <function-ref name="wasAcked" scoped="" ref="0x405bce90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x405bddc0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x405bddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405b0010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405b00f0"/>
        <function-ref name="request" scoped="" ref="0x405b01d0"/>
        <function-ref name="granted" scoped="" ref="0x405b02b0"/>
        <function-ref name="isOwner" scoped="" ref="0x405b0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x405c6460" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x405c6460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405c6638"/>
        <function-ref name="getPayload" scoped="" ref="0x405c6718"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405c67f8"/>
        <function-ref name="cancel" scoped="" ref="0x405c68d8"/>
        <function-ref name="sendDone" scoped="" ref="0x405c69b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x405bf010" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x405bf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405bf1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405bf2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x405bf3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405bf488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405bf568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x405bfee8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x405bfee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405bc0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405c4ad8" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405c4ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405c4cb0"/>
        <function-ref name="stopDone" scoped="" ref="0x405c4d90"/>
        <function-ref name="start" scoped="" ref="0x405c4e70"/>
        <function-ref name="stop" scoped="" ref="0x405c0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405c0c58" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405c0c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405c0e30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405c0f10"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405cf010"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405cf0f0"/>
        <function-ref name="setCca" scoped="" ref="0x405cf1d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405cf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x405c01a0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x405c01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405c0378"/>
        <function-ref name="getPayload" scoped="" ref="0x405c0458"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405c0538"/>
        <function-ref name="cancel" scoped="" ref="0x405c0618"/>
        <function-ref name="sendDone" scoped="" ref="0x405c06f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405c08a0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405c08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405c0a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405cfbe0" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405cfbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405cfdb8"/>
        <function-ref name="stopDone" scoped="" ref="0x405cfe98"/>
        <function-ref name="start" scoped="" ref="0x405cc010"/>
        <function-ref name="stop" scoped="" ref="0x405cc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405cc9b8" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405cc9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405ccb90"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405ccc70"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405ccd50"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405cce30"/>
        <function-ref name="setCca" scoped="" ref="0x405ccf10"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405cb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x405d0ae8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x405d0ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405d0cc0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405d0da0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405d0e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405c9010"/>
        <function-ref name="setCca" scoped="" ref="0x405c90f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405c91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x405df0f0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x405df0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x405df2c8"/>
        <function-ref name="setNetwork" scoped="" ref="0x405df3a8"/>
        <function-ref name="getRssi" scoped="" ref="0x405df488"/>
        <function-ref name="getNetwork" scoped="" ref="0x405df568"/>
        <function-ref name="getPower" scoped="" ref="0x405df648"/>
        <function-ref name="getLqi" scoped="" ref="0x405df728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x405d0328" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x405d0328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405d0500"/>
        <function-ref name="cancel" scoped="" ref="0x405d05e0"/>
        <function-ref name="modify" scoped="" ref="0x405d06c0"/>
        <function-ref name="sendDone" scoped="" ref="0x405d07a0"/>
        <function-ref name="resend" scoped="" ref="0x405d0880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x405cc280" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x405cc280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405cc458"/>
        <function-ref name="getPayload" scoped="" ref="0x405cc538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405cc618"/>
        <function-ref name="cancel" scoped="" ref="0x405cc6f8"/>
        <function-ref name="sendDone" scoped="" ref="0x405cc7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x405d3010" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x405d3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x405d31e8"/>
        <function-ref name="rand32" scoped="" ref="0x405d32c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x405d5d18" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x405d5d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405d5ef0"/>
        <function-ref name="stop" scoped="" ref="0x405ca010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x405da850" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x405da850"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x405daa28"/>
        <function-ref name="getHeader" scoped="" ref="0x405dab08"/>
        <function-ref name="getMetadata" scoped="" ref="0x405dabe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x405d6308" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x405d6308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x405d64e0"/>
        <function-ref name="rfOff" scoped="" ref="0x405d65c0"/>
        <function-ref name="rxOn" scoped="" ref="0x405d66a0"/>
        <function-ref name="startVReg" scoped="" ref="0x405d6780"/>
        <function-ref name="stopVReg" scoped="" ref="0x405d6860"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x405d6940"/>
        <function-ref name="stopOscillator" scoped="" ref="0x405d6a20"/>
        <function-ref name="startVRegDone" scoped="" ref="0x405d6b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405d3458" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405d3458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405d3630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405d3710"/>
        <function-ref name="led1On" scoped="" ref="0x405d37f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405d38d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405d39b0"/>
        <function-ref name="get" scoped="" ref="0x405d3a90"/>
        <function-ref name="led1Off" scoped="" ref="0x405d3b70"/>
        <function-ref name="led2Off" scoped="" ref="0x405d3ef0"/>
        <function-ref name="set" scoped="" ref="0x405d3c50"/>
        <function-ref name="led0On" scoped="" ref="0x405d3d30"/>
        <function-ref name="led2On" scoped="" ref="0x405d3e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x405cb1c8" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x405cb1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405cb3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405cb480"/>
        <function-ref name="request" scoped="" ref="0x405cb560"/>
        <function-ref name="granted" scoped="" ref="0x405cb640"/>
        <function-ref name="isOwner" scoped="" ref="0x405cb720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x405dd0e0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x405dd0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x405dd338"/>
        <function-ref name="toIdle" scoped="" ref="0x405dd418"/>
        <function-ref name="isState" scoped="" ref="0x405dd4f8"/>
        <function-ref name="isIdle" scoped="" ref="0x405dd5d8"/>
        <function-ref name="requestState" scoped="" ref="0x405dd6b8"/>
        <function-ref name="forceState" scoped="" ref="0x405dd798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x405e5258" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x405e5258"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e5430"/>
        <function-ref name="runTask" scoped="" ref="0x405e5510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x405e6a10" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x405e6a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e6be8"/>
        <function-ref name="runTask" scoped="" ref="0x405e6cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x405e61d0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x405e61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e63a8"/>
        <function-ref name="runTask" scoped="" ref="0x405e6488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x406161b0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x406161b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40616388"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40616468"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40616548"/>
        <function-ref name="syncDone" scoped="" ref="0x40616628"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40616708"/>
        <function-ref name="setShortAddr" scoped="" ref="0x406167e8"/>
        <function-ref name="setChannel" scoped="" ref="0x406168c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x406169a8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40616a88"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40616b68"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40616c48"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40616d28"/>
        <function-ref name="sync" scoped="" ref="0x40616e08"/>
        <function-ref name="getChannel" scoped="" ref="0x4060d010"/>
        <function-ref name="getPanAddr" scoped="" ref="0x4060d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x4060dda8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x4060dda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4060c3e0"/>
        <function-ref name="readDone" scoped="" ref="0x4060c638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x4060d2c0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x4060d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x4060d498"/>
        <function-ref name="rfOff" scoped="" ref="0x4060d578"/>
        <function-ref name="rxOn" scoped="" ref="0x4060d658"/>
        <function-ref name="startVReg" scoped="" ref="0x4060d738"/>
        <function-ref name="stopVReg" scoped="" ref="0x4060d818"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4060d8f8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4060d9d8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4060dab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4060e168" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4060e168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4060e340"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4060e420"/>
        <function-ref name="request" scoped="" ref="0x4060e500"/>
        <function-ref name="granted" scoped="" ref="0x4060e5e0"/>
        <function-ref name="isOwner" scoped="" ref="0x4060e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40613c20" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40613c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40613df8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40613ed8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40612010"/>
        <function-ref name="syncDone" scoped="" ref="0x406120f0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x406121d0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x406122b0"/>
        <function-ref name="setChannel" scoped="" ref="0x40612390"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40612470"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40612550"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40612630"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40612710"/>
        <function-ref name="getShortAddr" scoped="" ref="0x406127f0"/>
        <function-ref name="sync" scoped="" ref="0x406128d0"/>
        <function-ref name="getChannel" scoped="" ref="0x40612a30"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40612b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x40633158" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40633158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40633330"/>
        <function-ref name="write" scoped="" ref="0x40633410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x40622c50" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40622c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x40622e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x4061b408" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x4061b408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406208b8"/>
        <function-ref name="fired" scoped="" ref="0x40620088"/>
        <function-ref name="startAt" scoped="" ref="0x40620578"/>
        <function-ref name="isRunning" scoped="" ref="0x40620300"/>
        <function-ref name="getAlarm" scoped="" ref="0x40620b30"/>
        <function-ref name="start" scoped="" ref="0x4061bb58"/>
        <function-ref name="stop" scoped="" ref="0x4061bdf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x406296a8" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x406296a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40629880"/>
        <function-ref name="write" scoped="" ref="0x40629960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x4062c840" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x4062c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062ca18"/>
        <function-ref name="isInput" scoped="" ref="0x4062caf8"/>
        <function-ref name="toggle" scoped="" ref="0x4062cbd8"/>
        <function-ref name="isOutput" scoped="" ref="0x4062ccb8"/>
        <function-ref name="get" scoped="" ref="0x4062cd98"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062ce78"/>
        <function-ref name="set" scoped="" ref="0x4062b010"/>
        <function-ref name="clr" scoped="" ref="0x4062b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x40623840" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x40623840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40623e68"/>
        <function-ref name="readDone" scoped="" ref="0x406220f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x40639538" loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x40639538"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40639710"/>
        <function-ref name="runTask" scoped="" ref="0x406397f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x40633650" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40633650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40633828"/>
        <function-ref name="write" scoped="" ref="0x40633908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x40633b58" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40633b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40633d30"/>
        <function-ref name="write" scoped="" ref="0x40633e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x40632c70" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40632c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40632e48"/>
        <function-ref name="write" scoped="" ref="0x40632f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40624390" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40624390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40624568"/>
        <function-ref name="changed" scoped="" ref="0x40624648"/>
        <function-ref name="amGroup" scoped="" ref="0x40624728"/>
        <function-ref name="setAddress" scoped="" ref="0x40624808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40620e00" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40620e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062c010"/>
        <function-ref name="isInput" scoped="" ref="0x4062c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4062c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4062c2b0"/>
        <function-ref name="get" scoped="" ref="0x4062c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062c470"/>
        <function-ref name="set" scoped="" ref="0x4062c550"/>
        <function-ref name="clr" scoped="" ref="0x4062c630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x4062f2a8" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x4062f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4062f580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x4062b300" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x4062b300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062b4d8"/>
        <function-ref name="isInput" scoped="" ref="0x4062b5b8"/>
        <function-ref name="toggle" scoped="" ref="0x4062b698"/>
        <function-ref name="isOutput" scoped="" ref="0x4062b778"/>
        <function-ref name="get" scoped="" ref="0x4062b858"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062b938"/>
        <function-ref name="set" scoped="" ref="0x4062ba18"/>
        <function-ref name="clr" scoped="" ref="0x4062baf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40613158" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40613158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40613330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40629bc8" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40629bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40629da0"/>
        <function-ref name="write" scoped="" ref="0x40629e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x4062f7c8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x4062f7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4062f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x4062fbe8" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x4062fbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4062fdc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4062fea0"/>
        <function-ref name="request" scoped="" ref="0x4062e010"/>
        <function-ref name="granted" scoped="" ref="0x4062e0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4062e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x4062ebd8" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x4062ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4062edb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4062ee90"/>
        <function-ref name="request" scoped="" ref="0x4062d010"/>
        <function-ref name="granted" scoped="" ref="0x4062d0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4062d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40612ce0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40612ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40612eb8"/>
        <function-ref name="rfOff" scoped="" ref="0x40623010"/>
        <function-ref name="rxOn" scoped="" ref="0x406230f0"/>
        <function-ref name="startVReg" scoped="" ref="0x406231d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x406232b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40623390"/>
        <function-ref name="stopOscillator" scoped="" ref="0x40623470"/>
        <function-ref name="startVRegDone" scoped="" ref="0x40623550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x40629188" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40629188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40629360"/>
        <function-ref name="write" scoped="" ref="0x40629440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x40632768" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40632768"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40632940"/>
        <function-ref name="write" scoped="" ref="0x40632a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x40630a18" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40630a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40630bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4062d360" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4062d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4062d538"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4062d618"/>
        <function-ref name="led1On" scoped="" ref="0x4062d6f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4062d7d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4062d8b8"/>
        <function-ref name="get" scoped="" ref="0x4062d998"/>
        <function-ref name="led1Off" scoped="" ref="0x4062da78"/>
        <function-ref name="led2Off" scoped="" ref="0x4062ddf8"/>
        <function-ref name="set" scoped="" ref="0x4062db58"/>
        <function-ref name="led0On" scoped="" ref="0x4062dc38"/>
        <function-ref name="led2On" scoped="" ref="0x4062dd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x4063bcb8" loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x4063bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4063be90"/>
        <function-ref name="runTask" scoped="" ref="0x40639010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406134e8" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406134e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406136c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406137a0"/>
        <function-ref name="request" scoped="" ref="0x40613880"/>
        <function-ref name="granted" scoped="" ref="0x40613960"/>
        <function-ref name="isOwner" scoped="" ref="0x40613a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x4062a010" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x4062a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4062a1e8"/>
        <function-ref name="write" scoped="" ref="0x4062a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x40634a08" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40634a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40634c60"/>
        <function-ref name="write" scoped="" ref="0x40634d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x406273e0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x406273e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406275b8"/>
        <function-ref name="disable" scoped="" ref="0x40627698"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40627778"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40627858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x4062e428" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x4062e428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4062e600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4062e6e0"/>
        <function-ref name="request" scoped="" ref="0x4062e7c0"/>
        <function-ref name="granted" scoped="" ref="0x4062e8a0"/>
        <function-ref name="isOwner" scoped="" ref="0x4062e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x40630e30" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40630e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4062f050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40675ae8" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40675ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40675cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x406850e0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x406850e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406845c8"/>
        <function-ref name="fired" scoped="" ref="0x40685d48"/>
        <function-ref name="startAt" scoped="" ref="0x40684288"/>
        <function-ref name="isRunning" scoped="" ref="0x40684010"/>
        <function-ref name="getAlarm" scoped="" ref="0x40684840"/>
        <function-ref name="start" scoped="" ref="0x40685830"/>
        <function-ref name="stop" scoped="" ref="0x40685ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x407d5e78" loc="86:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x407d5e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40682350"/>
        <function-ref name="fired" scoped="" ref="0x40683af8"/>
        <function-ref name="startAt" scoped="" ref="0x40682010"/>
        <function-ref name="isRunning" scoped="" ref="0x40683d70"/>
        <function-ref name="getAlarm" scoped="" ref="0x406825c8"/>
        <function-ref name="start" scoped="" ref="0x406835e0"/>
        <function-ref name="stop" scoped="" ref="0x40683880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406827f8" loc="87:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406827f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406829d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41183de0" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41183de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41181350"/>
        <function-ref name="fired" scoped="" ref="0x41182a88"/>
        <function-ref name="startAt" scoped="" ref="0x41181010"/>
        <function-ref name="isRunning" scoped="" ref="0x41182d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x411815c8"/>
        <function-ref name="start" scoped="" ref="0x41182570"/>
        <function-ref name="stop" scoped="" ref="0x41182810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41180bc8" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41180bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="TOne" ref="0x403ca9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4117d0a8"/>
        <function-ref name="fired" scoped="" ref="0x4117e858"/>
        <function-ref name="startAt" scoped="" ref="0x4117ed48"/>
        <function-ref name="isRunning" scoped="" ref="0x4117ead0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4117d320"/>
        <function-ref name="start" scoped="" ref="0x4117e340"/>
        <function-ref name="stop" scoped="" ref="0x4117e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4069fcd0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4069fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4069fea8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x406a4010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406a40f0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x406a41d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406a42b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406a4390"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x406a4470"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x406a4550"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x406a4630"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x406a4710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406afb10" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406afb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4069e640"/>
        <function-ref name="test" scoped="" ref="0x4069e150"/>
        <function-ref name="get" scoped="" ref="0x406a3200"/>
        <function-ref name="captured" scoped="" ref="0x406a3718"/>
        <function-ref name="reset" scoped="" ref="0x406a39b8"/>
        <function-ref name="isOn" scoped="" ref="0x4069e3c8"/>
        <function-ref name="set" scoped="" ref="0x406a3478"/>
        <function-ref name="start" scoped="" ref="0x406a3c30"/>
        <function-ref name="stop" scoped="" ref="0x406a3ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406a86e0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406a86e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406adc90"/>
        <function-ref name="fired" scoped="" ref="0x406ad2b0"/>
        <function-ref name="get" scoped="" ref="0x406a8d28"/>
        <function-ref name="reset" scoped="" ref="0x406ad528"/>
        <function-ref name="isOn" scoped="" ref="0x406adf08"/>
        <function-ref name="set" scoped="" ref="0x406ad010"/>
        <function-ref name="start" scoped="" ref="0x406ad7a0"/>
        <function-ref name="stop" scoped="" ref="0x406ada18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40693d60" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40693d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406927f0"/>
        <function-ref name="test" scoped="" ref="0x40692300"/>
        <function-ref name="get" scoped="" ref="0x406983e0"/>
        <function-ref name="setScale" scoped="" ref="0x40692a68"/>
        <function-ref name="getScale" scoped="" ref="0x40692d08"/>
        <function-ref name="reset" scoped="" ref="0x40698b70"/>
        <function-ref name="overflow" scoped="" ref="0x406988f8"/>
        <function-ref name="isOn" scoped="" ref="0x40692578"/>
        <function-ref name="set" scoped="" ref="0x40698658"/>
        <function-ref name="start" scoped="" ref="0x40698de8"/>
        <function-ref name="stop" scoped="" ref="0x40692088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406b1208" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406b1208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406b13e0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406b14c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406b15a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406b1680"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406b1760"/>
        <function-ref name="setControl" scoped="" ref="0x406b1840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406c0820" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406c0820"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406c09f8"/>
        <function-ref name="compareBusy" scoped="" ref="0x406c0ad8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406c0bb8"/>
        <function-ref name="countBusy" scoped="" ref="0x406c0c98"/>
        <function-ref name="getAssr" scoped="" ref="0x406c0d78"/>
        <function-ref name="setAssr" scoped="" ref="0x406c0e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406b1b68" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406b1b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406b5110"/>
        <function-ref name="fired" scoped="" ref="0x406b6718"/>
        <function-ref name="get" scoped="" ref="0x406b6200"/>
        <function-ref name="reset" scoped="" ref="0x406b6990"/>
        <function-ref name="isOn" scoped="" ref="0x406b5388"/>
        <function-ref name="set" scoped="" ref="0x406b6478"/>
        <function-ref name="start" scoped="" ref="0x406b6c08"/>
        <function-ref name="stop" scoped="" ref="0x406b6e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406aca28" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406aca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406b7500"/>
        <function-ref name="test" scoped="" ref="0x406b7010"/>
        <function-ref name="get" scoped="" ref="0x406b8088"/>
        <function-ref name="setScale" scoped="" ref="0x406b7778"/>
        <function-ref name="getScale" scoped="" ref="0x406b7a18"/>
        <function-ref name="reset" scoped="" ref="0x406b8818"/>
        <function-ref name="overflow" scoped="" ref="0x406b85a0"/>
        <function-ref name="isOn" scoped="" ref="0x406b7288"/>
        <function-ref name="set" scoped="" ref="0x406b8300"/>
        <function-ref name="start" scoped="" ref="0x406b8a90"/>
        <function-ref name="stop" scoped="" ref="0x406b8d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406bde68" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406bde68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406bb050"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406bb130"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406bb210"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406bb2f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406bb3d0"/>
        <function-ref name="setControl" scoped="" ref="0x406bb4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x406cd2c8" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x406cd2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x406cd4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406cd728" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406cd728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406cd900"/>
        <function-ref name="compareBusy" scoped="" ref="0x406cd9e0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406cdac0"/>
        <function-ref name="countBusy" scoped="" ref="0x406cdba0"/>
        <function-ref name="getAssr" scoped="" ref="0x406cdc80"/>
        <function-ref name="setAssr" scoped="" ref="0x406cdd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406bb7d8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406bb7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406bad38"/>
        <function-ref name="fired" scoped="" ref="0x406ba358"/>
        <function-ref name="get" scoped="" ref="0x406bbe20"/>
        <function-ref name="reset" scoped="" ref="0x406ba5d0"/>
        <function-ref name="isOn" scoped="" ref="0x406cd010"/>
        <function-ref name="set" scoped="" ref="0x406ba0b8"/>
        <function-ref name="start" scoped="" ref="0x406ba848"/>
        <function-ref name="stop" scoped="" ref="0x406baac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406b0b08" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406b0b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406bd600"/>
        <function-ref name="test" scoped="" ref="0x406bd110"/>
        <function-ref name="get" scoped="" ref="0x406be200"/>
        <function-ref name="setScale" scoped="" ref="0x406bd878"/>
        <function-ref name="getScale" scoped="" ref="0x406bdb18"/>
        <function-ref name="reset" scoped="" ref="0x406be990"/>
        <function-ref name="overflow" scoped="" ref="0x406be718"/>
        <function-ref name="isOn" scoped="" ref="0x406bd388"/>
        <function-ref name="set" scoped="" ref="0x406be478"/>
        <function-ref name="start" scoped="" ref="0x406bec08"/>
        <function-ref name="stop" scoped="" ref="0x406bee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406fa520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406fa520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406fa6f8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x406fa7d8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406fa8b8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x406fa998"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406faa78"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406fab58"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x406fac38"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x406fad18"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x406fadf8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x406faed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x40705528" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x40705528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40705700"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407057e0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407058c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407059a0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40705a80"/>
        <function-ref name="setControl" scoped="" ref="0x40705b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x406f7128" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x406f7128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4070a690"/>
        <function-ref name="fired" scoped="" ref="0x406f7c88"/>
        <function-ref name="get" scoped="" ref="0x406f7770"/>
        <function-ref name="reset" scoped="" ref="0x406f7f00"/>
        <function-ref name="isOn" scoped="" ref="0x4070a908"/>
        <function-ref name="set" scoped="" ref="0x406f79e8"/>
        <function-ref name="start" scoped="" ref="0x4070a1a0"/>
        <function-ref name="stop" scoped="" ref="0x4070a418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406f9258" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406f9258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x406f8cc0"/>
        <function-ref name="test" scoped="" ref="0x406f87d0"/>
        <function-ref name="get" scoped="" ref="0x406f98a0"/>
        <function-ref name="captured" scoped="" ref="0x406f9db8"/>
        <function-ref name="reset" scoped="" ref="0x406f8068"/>
        <function-ref name="isOn" scoped="" ref="0x406f8a48"/>
        <function-ref name="set" scoped="" ref="0x406f9b18"/>
        <function-ref name="start" scoped="" ref="0x406f82e0"/>
        <function-ref name="stop" scoped="" ref="0x406f8558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x4070ad20" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x4070ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407082c0"/>
        <function-ref name="fired" scoped="" ref="0x407098a8"/>
        <function-ref name="get" scoped="" ref="0x40709390"/>
        <function-ref name="reset" scoped="" ref="0x40709b20"/>
        <function-ref name="isOn" scoped="" ref="0x40708538"/>
        <function-ref name="set" scoped="" ref="0x40709608"/>
        <function-ref name="start" scoped="" ref="0x40709d98"/>
        <function-ref name="stop" scoped="" ref="0x40708048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40708950" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40708950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40707f08"/>
        <function-ref name="fired" scoped="" ref="0x40707528"/>
        <function-ref name="get" scoped="" ref="0x40707010"/>
        <function-ref name="reset" scoped="" ref="0x407077a0"/>
        <function-ref name="isOn" scoped="" ref="0x407051a0"/>
        <function-ref name="set" scoped="" ref="0x40707288"/>
        <function-ref name="start" scoped="" ref="0x40707a18"/>
        <function-ref name="stop" scoped="" ref="0x40707c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406fd1a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406fd1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406fcc68"/>
        <function-ref name="test" scoped="" ref="0x406fc778"/>
        <function-ref name="get" scoped="" ref="0x406fd7e8"/>
        <function-ref name="setScale" scoped="" ref="0x406fcee0"/>
        <function-ref name="getScale" scoped="" ref="0x406fa1c0"/>
        <function-ref name="reset" scoped="" ref="0x406fc010"/>
        <function-ref name="overflow" scoped="" ref="0x406fdd00"/>
        <function-ref name="isOn" scoped="" ref="0x406fc9f0"/>
        <function-ref name="set" scoped="" ref="0x406fda60"/>
        <function-ref name="start" scoped="" ref="0x406fc288"/>
        <function-ref name="stop" scoped="" ref="0x406fc500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4074edb8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4074edb8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x403505d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x403505d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4074d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4074d220" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4074d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4075bc68"/>
        <function-ref name="test" scoped="" ref="0x4075b778"/>
        <function-ref name="get" scoped="" ref="0x4074d868"/>
        <function-ref name="setScale" scoped="" ref="0x4075bee0"/>
        <function-ref name="getScale" scoped="" ref="0x4075a1c0"/>
        <function-ref name="reset" scoped="" ref="0x4075b010"/>
        <function-ref name="overflow" scoped="" ref="0x4074dd80"/>
        <function-ref name="isOn" scoped="" ref="0x4075b9f0"/>
        <function-ref name="set" scoped="" ref="0x4074dae0"/>
        <function-ref name="start" scoped="" ref="0x4075b288"/>
        <function-ref name="stop" scoped="" ref="0x4075b500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x411739f0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x411739f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x403503d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x403503d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="TOne" ref="0x403ca9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41171010"/>
        <function-ref name="fired" scoped="" ref="0x41172718"/>
        <function-ref name="startAt" scoped="" ref="0x41172c08"/>
        <function-ref name="isRunning" scoped="" ref="0x41172990"/>
        <function-ref name="getAlarm" scoped="" ref="0x41171288"/>
        <function-ref name="start" scoped="" ref="0x41172200"/>
        <function-ref name="stop" scoped="" ref="0x411724a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x4116f7e8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x4116f7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x411aed58"/>
        <function-ref name="fired" scoped="" ref="0x411ae378"/>
        <function-ref name="get" scoped="" ref="0x4116fe30"/>
        <function-ref name="reset" scoped="" ref="0x411ae5f0"/>
        <function-ref name="isOn" scoped="" ref="0x411ad010"/>
        <function-ref name="set" scoped="" ref="0x411ae0d8"/>
        <function-ref name="start" scoped="" ref="0x411ae868"/>
        <function-ref name="stop" scoped="" ref="0x411aeae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x41171548" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x41171548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4116f010"/>
        <function-ref name="test" scoped="" ref="0x41170ab8"/>
        <function-ref name="get" scoped="" ref="0x41171b90"/>
        <function-ref name="setScale" scoped="" ref="0x4116f288"/>
        <function-ref name="getScale" scoped="" ref="0x4116f528"/>
        <function-ref name="reset" scoped="" ref="0x41170350"/>
        <function-ref name="overflow" scoped="" ref="0x411700d8"/>
        <function-ref name="isOn" scoped="" ref="0x41170d30"/>
        <function-ref name="set" scoped="" ref="0x41171e08"/>
        <function-ref name="start" scoped="" ref="0x411705c8"/>
        <function-ref name="stop" scoped="" ref="0x41170840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4078e648" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4078e648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4078ed98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4077a2c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4077a048"/>
        <function-ref name="overflow" scoped="" ref="0x4077a538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4078b088" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4078b088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="TOne" ref="0x403ca9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4078b7d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4078bcc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4078ba50"/>
        <function-ref name="overflow" scoped="" ref="0x4078a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40789890" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40789890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="TOne" ref="0x403ca9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40788010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40788500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40788288"/>
        <function-ref name="overflow" scoped="" ref="0x40788778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40788a58" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40788a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40794500"/>
        <function-ref name="test" scoped="" ref="0x40794010"/>
        <function-ref name="get" scoped="" ref="0x407950b8"/>
        <function-ref name="setScale" scoped="" ref="0x40794778"/>
        <function-ref name="getScale" scoped="" ref="0x40794a18"/>
        <function-ref name="reset" scoped="" ref="0x40795848"/>
        <function-ref name="overflow" scoped="" ref="0x407955d0"/>
        <function-ref name="isOn" scoped="" ref="0x40794288"/>
        <function-ref name="set" scoped="" ref="0x40795330"/>
        <function-ref name="start" scoped="" ref="0x40795ac0"/>
        <function-ref name="stop" scoped="" ref="0x40795d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407b00e0" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407b00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="TOne" ref="0x403ca9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407b0830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407b0d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407b0aa8"/>
        <function-ref name="overflow" scoped="" ref="0x407af010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40792e60" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40792e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407b15e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407b1ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407b1858"/>
        <function-ref name="overflow" scoped="" ref="0x407b1d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4117c5a0" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4117c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4117bab8"/>
        <function-ref name="fired" scoped="" ref="0x4117b288"/>
        <function-ref name="startAt" scoped="" ref="0x4117b778"/>
        <function-ref name="isRunning" scoped="" ref="0x4117b500"/>
        <function-ref name="getAlarm" scoped="" ref="0x4117bd30"/>
        <function-ref name="start" scoped="" ref="0x4117ccf0"/>
        <function-ref name="stop" scoped="" ref="0x4117b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x41178380" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x41178380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="TOne" ref="0x403ca9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41177840"/>
        <function-ref name="fired" scoped="" ref="0x41177010"/>
        <function-ref name="startAt" scoped="" ref="0x41177500"/>
        <function-ref name="isRunning" scoped="" ref="0x41177288"/>
        <function-ref name="getAlarm" scoped="" ref="0x41177ab8"/>
        <function-ref name="start" scoped="" ref="0x41178ad0"/>
        <function-ref name="stop" scoped="" ref="0x41178d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x411790a0" loc="68:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x411790a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x411797f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41179ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41179a68"/>
        <function-ref name="overflow" scoped="" ref="0x41178010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407d6bb0" loc="18:/opt/tinyos-2.1.2/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407d6bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d6d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x407d0890" loc="87:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x407d0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d0a68"/>
        <function-ref name="isInput" scoped="" ref="0x407d0b48"/>
        <function-ref name="toggle" scoped="" ref="0x407d0c28"/>
        <function-ref name="isOutput" scoped="" ref="0x407d0d08"/>
        <function-ref name="get" scoped="" ref="0x407d0de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d0ec8"/>
        <function-ref name="set" scoped="" ref="0x407cf010"/>
        <function-ref name="clr" scoped="" ref="0x407cf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x407cf2e8" loc="88:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x407cf2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407cf4c0"/>
        <function-ref name="isInput" scoped="" ref="0x407cf5a0"/>
        <function-ref name="toggle" scoped="" ref="0x407cf680"/>
        <function-ref name="isOutput" scoped="" ref="0x407cf760"/>
        <function-ref name="get" scoped="" ref="0x407cf840"/>
        <function-ref name="makeOutput" scoped="" ref="0x407cf920"/>
        <function-ref name="set" scoped="" ref="0x407cfa00"/>
        <function-ref name="clr" scoped="" ref="0x407cfae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x407cfcd0" loc="89:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x407cfcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407cfea8"/>
        <function-ref name="isInput" scoped="" ref="0x407ce010"/>
        <function-ref name="toggle" scoped="" ref="0x407ce0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407ce1d0"/>
        <function-ref name="get" scoped="" ref="0x407ce2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ce390"/>
        <function-ref name="set" scoped="" ref="0x407ce470"/>
        <function-ref name="clr" scoped="" ref="0x407ce550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x40687e90" loc="86:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40687e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d0080"/>
        <function-ref name="isInput" scoped="" ref="0x407d0160"/>
        <function-ref name="toggle" scoped="" ref="0x407d0240"/>
        <function-ref name="isOutput" scoped="" ref="0x407d0320"/>
        <function-ref name="get" scoped="" ref="0x407d0400"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d04e0"/>
        <function-ref name="set" scoped="" ref="0x407d05c0"/>
        <function-ref name="clr" scoped="" ref="0x407d06a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x407cd128" loc="91:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x407cd128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407cd300"/>
        <function-ref name="isInput" scoped="" ref="0x407cd3e0"/>
        <function-ref name="toggle" scoped="" ref="0x407cd4c0"/>
        <function-ref name="isOutput" scoped="" ref="0x407cd5a0"/>
        <function-ref name="get" scoped="" ref="0x407cd680"/>
        <function-ref name="makeOutput" scoped="" ref="0x407cd760"/>
        <function-ref name="set" scoped="" ref="0x407cd840"/>
        <function-ref name="clr" scoped="" ref="0x407cd920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x406874b8" loc="85:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x406874b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40687690"/>
        <function-ref name="isInput" scoped="" ref="0x40687770"/>
        <function-ref name="toggle" scoped="" ref="0x40687850"/>
        <function-ref name="isOutput" scoped="" ref="0x40687930"/>
        <function-ref name="get" scoped="" ref="0x40687a10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40687af0"/>
        <function-ref name="set" scoped="" ref="0x40687bd0"/>
        <function-ref name="clr" scoped="" ref="0x40687cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x407ce730" loc="90:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x407ce730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ce908"/>
        <function-ref name="isInput" scoped="" ref="0x407ce9e8"/>
        <function-ref name="toggle" scoped="" ref="0x407ceac8"/>
        <function-ref name="isOutput" scoped="" ref="0x407ceba8"/>
        <function-ref name="get" scoped="" ref="0x407cec88"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ced68"/>
        <function-ref name="set" scoped="" ref="0x407cee48"/>
        <function-ref name="clr" scoped="" ref="0x407cef28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x407dda28" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x407dda28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x407ddc00"/>
        <function-ref name="disable" scoped="" ref="0x407ddce0"/>
        <function-ref name="captured" scoped="" ref="0x407dddc0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x407ddea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x407df188" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x407df188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407df360"/>
        <function-ref name="disable" scoped="" ref="0x407df440"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407df520"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407df600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x407df898" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x407df898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407dfa70"/>
        <function-ref name="disable" scoped="" ref="0x407dfb50"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407dfc30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407dfd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407e9d28" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407e9d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x407e9f00"/>
        <function-ref name="disable" scoped="" ref="0x407db010"/>
        <function-ref name="captured" scoped="" ref="0x407db0f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x407db1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x407db3e0" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x407db3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x407daf08"/>
        <function-ref name="test" scoped="" ref="0x407daa18"/>
        <function-ref name="get" scoped="" ref="0x407dba28"/>
        <function-ref name="captured" scoped="" ref="0x407da010"/>
        <function-ref name="reset" scoped="" ref="0x407da2b0"/>
        <function-ref name="isOn" scoped="" ref="0x407dac90"/>
        <function-ref name="set" scoped="" ref="0x407dbca0"/>
        <function-ref name="start" scoped="" ref="0x407da528"/>
        <function-ref name="stop" scoped="" ref="0x407da7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x407e5050" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x407e5050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407e5228"/>
        <function-ref name="fired" scoped="" ref="0x407e5308"/>
        <function-ref name="disable" scoped="" ref="0x407e53e8"/>
        <function-ref name="edge" scoped="" ref="0x407e54c8"/>
        <function-ref name="enable" scoped="" ref="0x407e55a8"/>
        <function-ref name="getValue" scoped="" ref="0x407e5688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x407e6a28" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x407e6a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407e6c00"/>
        <function-ref name="disable" scoped="" ref="0x407e6ce0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407e6dc0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407e6ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x40806c98" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x40806c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40806e70"/>
        <function-ref name="fired" scoped="" ref="0x40805010"/>
        <function-ref name="disable" scoped="" ref="0x408050f0"/>
        <function-ref name="edge" scoped="" ref="0x408051d0"/>
        <function-ref name="enable" scoped="" ref="0x408052b0"/>
        <function-ref name="getValue" scoped="" ref="0x40805390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x407f00b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x407f00b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f0288"/>
        <function-ref name="fired" scoped="" ref="0x407f0368"/>
        <function-ref name="disable" scoped="" ref="0x407f0448"/>
        <function-ref name="edge" scoped="" ref="0x407f0528"/>
        <function-ref name="enable" scoped="" ref="0x407f0608"/>
        <function-ref name="getValue" scoped="" ref="0x407f06e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x40807ad8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x40807ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40807cb0"/>
        <function-ref name="fired" scoped="" ref="0x40807d90"/>
        <function-ref name="disable" scoped="" ref="0x40807e70"/>
        <function-ref name="edge" scoped="" ref="0x40806010"/>
        <function-ref name="enable" scoped="" ref="0x408060f0"/>
        <function-ref name="getValue" scoped="" ref="0x408061d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x408055d8" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x408055d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408057b0"/>
        <function-ref name="fired" scoped="" ref="0x40805890"/>
        <function-ref name="disable" scoped="" ref="0x40805970"/>
        <function-ref name="edge" scoped="" ref="0x40805a50"/>
        <function-ref name="enable" scoped="" ref="0x40805b30"/>
        <function-ref name="getValue" scoped="" ref="0x40805c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x407f0930" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x407f0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f0b08"/>
        <function-ref name="fired" scoped="" ref="0x407f0be8"/>
        <function-ref name="disable" scoped="" ref="0x407f0cc8"/>
        <function-ref name="edge" scoped="" ref="0x407f0da8"/>
        <function-ref name="enable" scoped="" ref="0x407f0e88"/>
        <function-ref name="getValue" scoped="" ref="0x40807010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x40806418" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x40806418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408065f0"/>
        <function-ref name="fired" scoped="" ref="0x408066d0"/>
        <function-ref name="disable" scoped="" ref="0x408067b0"/>
        <function-ref name="edge" scoped="" ref="0x40806890"/>
        <function-ref name="enable" scoped="" ref="0x40806970"/>
        <function-ref name="getValue" scoped="" ref="0x40806a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x407f3800" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x407f3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f39d8"/>
        <function-ref name="fired" scoped="" ref="0x407f3ab8"/>
        <function-ref name="disable" scoped="" ref="0x407f3b98"/>
        <function-ref name="edge" scoped="" ref="0x407f3c78"/>
        <function-ref name="enable" scoped="" ref="0x407f3d58"/>
        <function-ref name="getValue" scoped="" ref="0x407f3e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x40807258" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x40807258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40807430"/>
        <function-ref name="fired" scoped="" ref="0x40807510"/>
        <function-ref name="disable" scoped="" ref="0x408075f0"/>
        <function-ref name="edge" scoped="" ref="0x408076d0"/>
        <function-ref name="enable" scoped="" ref="0x408077b0"/>
        <function-ref name="getValue" scoped="" ref="0x40807890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x40801c50" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x40801c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40801e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x407fe5b8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x407fe5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407fe790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x40801360" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x40801360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40801538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x408001a0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x408001a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40800378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x407fea30" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x407fea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407fec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x408017d8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x408017d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408019b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x407fe140" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x407fe140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407fe318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x407feea8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x407feea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408010c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x408023b0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x408023b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40802588"/>
        <function-ref name="fired" scoped="" ref="0x40802668"/>
        <function-ref name="disable" scoped="" ref="0x40802748"/>
        <function-ref name="edge" scoped="" ref="0x40802828"/>
        <function-ref name="enable" scoped="" ref="0x40802908"/>
        <function-ref name="getValue" scoped="" ref="0x408029e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40802b68" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40802b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40802d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40816538" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40816538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40816710"/>
        <function-ref name="fired" scoped="" ref="0x408167f0"/>
        <function-ref name="disable" scoped="" ref="0x408168d0"/>
        <function-ref name="edge" scoped="" ref="0x408169b0"/>
        <function-ref name="enable" scoped="" ref="0x40816a90"/>
        <function-ref name="getValue" scoped="" ref="0x40816b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40816cf0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40816cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40816ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4082d6c0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4082d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082d898"/>
        <function-ref name="fired" scoped="" ref="0x4082d978"/>
        <function-ref name="disable" scoped="" ref="0x4082da58"/>
        <function-ref name="edge" scoped="" ref="0x4082db38"/>
        <function-ref name="enable" scoped="" ref="0x4082dc18"/>
        <function-ref name="getValue" scoped="" ref="0x4082dcf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4082de78" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4082de78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4082c070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4082b7a8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4082b7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082b980"/>
        <function-ref name="fired" scoped="" ref="0x4082ba60"/>
        <function-ref name="disable" scoped="" ref="0x4082bb40"/>
        <function-ref name="edge" scoped="" ref="0x4082bc20"/>
        <function-ref name="enable" scoped="" ref="0x4082bd00"/>
        <function-ref name="getValue" scoped="" ref="0x4082bde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4082a010" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4082a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4082a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40829a08" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40829a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40829be0"/>
        <function-ref name="fired" scoped="" ref="0x40829cc0"/>
        <function-ref name="disable" scoped="" ref="0x40829da0"/>
        <function-ref name="edge" scoped="" ref="0x40829e80"/>
        <function-ref name="enable" scoped="" ref="0x40828010"/>
        <function-ref name="getValue" scoped="" ref="0x408280f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40828270" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40828270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40828448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40827c70" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40827c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40827e48"/>
        <function-ref name="fired" scoped="" ref="0x40827f28"/>
        <function-ref name="disable" scoped="" ref="0x40826018"/>
        <function-ref name="edge" scoped="" ref="0x408260f8"/>
        <function-ref name="enable" scoped="" ref="0x408261d8"/>
        <function-ref name="getValue" scoped="" ref="0x408262b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40826438" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40826438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40826610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40824e68" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40824e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40823050"/>
        <function-ref name="fired" scoped="" ref="0x40823130"/>
        <function-ref name="disable" scoped="" ref="0x40823210"/>
        <function-ref name="edge" scoped="" ref="0x408232f0"/>
        <function-ref name="enable" scoped="" ref="0x408233d0"/>
        <function-ref name="getValue" scoped="" ref="0x408234b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40823630" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40823630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40823808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4083b050" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4083b050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4083b228"/>
        <function-ref name="fired" scoped="" ref="0x4083b308"/>
        <function-ref name="disable" scoped="" ref="0x4083b3e8"/>
        <function-ref name="edge" scoped="" ref="0x4083b4c8"/>
        <function-ref name="enable" scoped="" ref="0x4083b5a8"/>
        <function-ref name="getValue" scoped="" ref="0x4083b688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4083b808" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4083b808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4083b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x408346c8" loc="51:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x408346c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408348a0"/>
        <function-ref name="isInput" scoped="" ref="0x40834980"/>
        <function-ref name="toggle" scoped="" ref="0x40834a60"/>
        <function-ref name="isOutput" scoped="" ref="0x40834b40"/>
        <function-ref name="get" scoped="" ref="0x40834c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x40834d00"/>
        <function-ref name="set" scoped="" ref="0x40834de0"/>
        <function-ref name="clr" scoped="" ref="0x40834ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x40834010" loc="47:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40834010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408341e8"/>
        <function-ref name="disable" scoped="" ref="0x408342c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x408343a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40834488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x40833ed8" loc="69:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x40833ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408320c0"/>
        <function-ref name="runTask" scoped="" ref="0x408321a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409a9880" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409a9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a9b58"/>
        <function-ref name="write" scoped="" ref="0x409a9c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409afbd8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409afbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409afdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409abe50" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409abe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409aa050"/>
        <function-ref name="write" scoped="" ref="0x409aa130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409a76a8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409a76a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a7880"/>
        <function-ref name="write" scoped="" ref="0x409a7960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x409a7ae0" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x409a7ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a7cb8"/>
        <function-ref name="write" scoped="" ref="0x409a7d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x409a2cb8" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x409a2cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a2e90"/>
        <function-ref name="write" scoped="" ref="0x409c0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x409a3b20" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x409a3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a3cf8"/>
        <function-ref name="write" scoped="" ref="0x409a3dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409ae6c0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409ae6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409ae898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409a32b0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409a32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a3488"/>
        <function-ref name="write" scoped="" ref="0x409a3568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409aa6e8" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409aa6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409aa8c0"/>
        <function-ref name="write" scoped="" ref="0x409aa9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409a9010" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409a9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a91e8"/>
        <function-ref name="write" scoped="" ref="0x409a92c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409a5468" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409a5468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a5640"/>
        <function-ref name="write" scoped="" ref="0x409a5720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409a7f18" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409a7f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a6108"/>
        <function-ref name="write" scoped="" ref="0x409a61e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409af010" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409af1e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x409af2c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409af3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409ac4e8" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409ac4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409ac6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409ac840" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409ac840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409aca98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409acc18" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409acc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409acdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x409a36e8" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409a36e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a38c0"/>
        <function-ref name="write" scoped="" ref="0x409a39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409aed70" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409aed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409ac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x409aab20" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x409aab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409aacf8"/>
        <function-ref name="write" scoped="" ref="0x409aadd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409aa2b0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409aa2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409aa488"/>
        <function-ref name="write" scoped="" ref="0x409aa568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409af880" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409af880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409afa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x409a2880" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x409a2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a2a58"/>
        <function-ref name="write" scoped="" ref="0x409a2b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x409a2010" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x409a2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a21e8"/>
        <function-ref name="write" scoped="" ref="0x409a22c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409a58a0" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409a58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a5a78"/>
        <function-ref name="write" scoped="" ref="0x409a5b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409a4e38" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409a4e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a3050"/>
        <function-ref name="write" scoped="" ref="0x409a3130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409a67a0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409a67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a6978"/>
        <function-ref name="write" scoped="" ref="0x409a6a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409c0190" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409c0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409c0568"/>
        <function-ref name="writeDone" scoped="" ref="0x409c0648"/>
        <function-ref name="write" scoped="" ref="0x409c0728"/>
        <function-ref name="beginRead" scoped="" ref="0x409c0808"/>
        <function-ref name="readDone" scoped="" ref="0x409c08e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409af528" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409af528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409af700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409aba18" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409aba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409abbf0"/>
        <function-ref name="write" scoped="" ref="0x409abcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409a9448" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409a9448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a9620"/>
        <function-ref name="write" scoped="" ref="0x409a9700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409a6368" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409a6368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a6540"/>
        <function-ref name="write" scoped="" ref="0x409a6620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x409a9db8" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x409a9db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a7010"/>
        <function-ref name="write" scoped="" ref="0x409a70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409ae010" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409ae010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409ae1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409a7270" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409a7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a7448"/>
        <function-ref name="write" scoped="" ref="0x409a7528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409b0918" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409b0918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409b0af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409b0bd0"/>
        <function-ref name="request" scoped="" ref="0x409b0cb0"/>
        <function-ref name="granted" scoped="" ref="0x409b0d90"/>
        <function-ref name="isOwner" scoped="" ref="0x409b0e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409ab010" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409ab010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409ab1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409ab6c0" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409ab6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409ab898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409a4a00" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409a4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a4bd8"/>
        <function-ref name="write" scoped="" ref="0x409a4cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409a45c8" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409a45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a47a0"/>
        <function-ref name="write" scoped="" ref="0x409a4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409ac190" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409ac190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409ac368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x409a4190" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409a4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a4368"/>
        <function-ref name="write" scoped="" ref="0x409a4448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x409a2448" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x409a2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a2620"/>
        <function-ref name="write" scoped="" ref="0x409a2700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409a5cd8" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409a5cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a5eb0"/>
        <function-ref name="write" scoped="" ref="0x409a4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409ae368" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409ae368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409ae540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409a5030" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409a5030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a5208"/>
        <function-ref name="write" scoped="" ref="0x409a52e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409aea18" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409aea18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409aebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409a6bd8" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409a6bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a6db0"/>
        <function-ref name="write" scoped="" ref="0x409a6e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409ab368" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409ab368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409ab540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409c0a68" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409c0a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409c0c40"/>
        <function-ref name="writeDone" scoped="" ref="0x409c0d20"/>
        <function-ref name="write" scoped="" ref="0x409c0e00"/>
        <function-ref name="beginRead" scoped="" ref="0x409c0ee0"/>
        <function-ref name="readDone" scoped="" ref="0x409bf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x4085b7a8" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x4085b7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4085b980"/>
        <function-ref name="writeDone" scoped="" ref="0x4085ba60"/>
        <function-ref name="write" scoped="" ref="0x4085bb40"/>
        <function-ref name="beginRead" scoped="" ref="0x4085bc20"/>
        <function-ref name="readDone" scoped="" ref="0x4085bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40849f00" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40849f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x4085b0f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x4085b1d0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4085b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x4085a208" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x4085a208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4085a3e0"/>
        <function-ref name="write" scoped="" ref="0x4085a4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x4085a9d0" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x4085a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4085aba8"/>
        <function-ref name="write" scoped="" ref="0x4085ac88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408497b0" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408497b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40849988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40849a68"/>
        <function-ref name="request" scoped="" ref="0x40849b48"/>
        <function-ref name="granted" scoped="" ref="0x40849c28"/>
        <function-ref name="isOwner" scoped="" ref="0x40849d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x408591f8" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x408591f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408593d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x40864210" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40864210"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408643e8"/>
        <function-ref name="sendDone" scoped="" ref="0x408644c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x4086e100" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x4086e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4086e2d8"/>
        <function-ref name="writeDone" scoped="" ref="0x4086e3b8"/>
        <function-ref name="write" scoped="" ref="0x4086e498"/>
        <function-ref name="beginRead" scoped="" ref="0x4086e578"/>
        <function-ref name="readDone" scoped="" ref="0x4086e658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40859d68" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40859d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40856010"/>
        <function-ref name="abortRelease" scoped="" ref="0x408560f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x408561d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x4086ced0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x4086ced0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x4086b0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x408646e0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x408646e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408648b8"/>
        <function-ref name="toIdle" scoped="" ref="0x40864998"/>
        <function-ref name="isState" scoped="" ref="0x40864a78"/>
        <function-ref name="isIdle" scoped="" ref="0x40864b58"/>
        <function-ref name="requestState" scoped="" ref="0x40864c38"/>
        <function-ref name="forceState" scoped="" ref="0x40864d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x4086dee8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x4086dee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4086c0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4086c1c0"/>
        <function-ref name="request" scoped="" ref="0x4086c2a0"/>
        <function-ref name="granted" scoped="" ref="0x4086c380"/>
        <function-ref name="isOwner" scoped="" ref="0x4086c460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x4086eb28" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x4086eb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086ed00"/>
        <function-ref name="write" scoped="" ref="0x4086ede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x4086d2f0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x4086d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086d4c8"/>
        <function-ref name="write" scoped="" ref="0x4086d5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40864e88" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40864e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4086a070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4086a150"/>
        <function-ref name="led1On" scoped="" ref="0x4086a230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4086a310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4086a3f0"/>
        <function-ref name="get" scoped="" ref="0x4086a4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x4086a5b0"/>
        <function-ref name="led2Off" scoped="" ref="0x4086a930"/>
        <function-ref name="set" scoped="" ref="0x4086a690"/>
        <function-ref name="led0On" scoped="" ref="0x4086a770"/>
        <function-ref name="led2On" scoped="" ref="0x4086a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40856648" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40856648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40856820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40856900"/>
        <function-ref name="request" scoped="" ref="0x408569e0"/>
        <function-ref name="granted" scoped="" ref="0x40856ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x40856ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x40865bd0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x40865bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40865da8"/>
        <function-ref name="runTask" scoped="" ref="0x40865e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x4086daa8" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x4086daa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4086dc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x4089e1e8" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x4089e1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4089e3c0"/>
        <function-ref name="toIdle" scoped="" ref="0x4089e4a0"/>
        <function-ref name="isState" scoped="" ref="0x4089e580"/>
        <function-ref name="isIdle" scoped="" ref="0x4089e660"/>
        <function-ref name="requestState" scoped="" ref="0x4089e740"/>
        <function-ref name="forceState" scoped="" ref="0x4089e820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x4089c578" loc="66:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x4089c578"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4089c750"/>
        <function-ref name="toIdle" scoped="" ref="0x4089c830"/>
        <function-ref name="isState" scoped="" ref="0x4089c910"/>
        <function-ref name="isIdle" scoped="" ref="0x4089c9f0"/>
        <function-ref name="requestState" scoped="" ref="0x4089cad0"/>
        <function-ref name="forceState" scoped="" ref="0x4089cbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408b4598" loc="66:/opt/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408b4598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408b4770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x408b4bc8" loc="67:/opt/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x408b4bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408b4da0"/>
        <function-ref name="toIdle" scoped="" ref="0x408b4e80"/>
        <function-ref name="isState" scoped="" ref="0x408b1010"/>
        <function-ref name="isIdle" scoped="" ref="0x408b10f0"/>
        <function-ref name="requestState" scoped="" ref="0x408b11d0"/>
        <function-ref name="forceState" scoped="" ref="0x408b12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408c1c58" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408c1c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c1e30"/>
        <function-ref name="sendDone" scoped="" ref="0x408c1f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408c1920" loc="42:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408c1920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408c1af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408b2f10" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408b2f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408c1108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408c1268" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408c1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408c1440"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408c1520"/>
        <function-ref name="request" scoped="" ref="0x408c1600"/>
        <function-ref name="granted" scoped="" ref="0x408c16e0"/>
        <function-ref name="isOwner" scoped="" ref="0x408c17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408b8a68" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408b8a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408b8c40"/>
        <function-ref name="sendDone" scoped="" ref="0x408b8d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408bc1b8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408bc1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408bc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408c0d60" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408c0d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408bc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x408b8430" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x408b8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x408b8608"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x408b86e8"/>
        <function-ref name="splitRead" scoped="" ref="0x408b87c8"/>
        <function-ref name="write" scoped="" ref="0x408b88a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408bb1f8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408bb1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408bb3d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408bb4b0"/>
        <function-ref name="request" scoped="" ref="0x408bb590"/>
        <function-ref name="granted" scoped="" ref="0x408bb670"/>
        <function-ref name="isOwner" scoped="" ref="0x408bb750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x408e21e0" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x408e21e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408e23b8"/>
        <function-ref name="runTask" scoped="" ref="0x408e2498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408b5290" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408b5290"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408b5468"/>
        <function-ref name="sendDone" scoped="" ref="0x408b5548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x408cd8c0" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x408cd8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408cda98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408cdb78"/>
        <function-ref name="request" scoped="" ref="0x408cdc58"/>
        <function-ref name="granted" scoped="" ref="0x408cdd38"/>
        <function-ref name="isOwner" scoped="" ref="0x408cde18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408b68d8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408b68d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408b6ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408b6578" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408b6578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408b6750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x408dcbc8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x408dcbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x408dcda0"/>
        <function-ref name="sleep" scoped="" ref="0x408cd2b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x408ce010"/>
        <function-ref name="dataReady" scoped="" ref="0x408cd390"/>
        <function-ref name="initMaster" scoped="" ref="0x408ce1d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x408ce2b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x408ce390"/>
        <function-ref name="read" scoped="" ref="0x408ce470"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x408ce550"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x408ce630"/>
        <function-ref name="setClock" scoped="" ref="0x408ce710"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x408ce7f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x408ce8d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x408cea30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x408ceb10"/>
        <function-ref name="write" scoped="" ref="0x408cebf0"/>
        <function-ref name="enableSpi" scoped="" ref="0x408cecd0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x408cedb0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x408cee90"/>
        <function-ref name="getClock" scoped="" ref="0x408cd010"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x408cd0f0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x408dce80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x408ce0f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x408cd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x408b6c60" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x408b6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x408b6e38"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x408b6f18"/>
        <function-ref name="splitRead" scoped="" ref="0x408b5010"/>
        <function-ref name="write" scoped="" ref="0x408b50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408b59c0" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408b59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408b5b98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408b5c78"/>
        <function-ref name="request" scoped="" ref="0x408b5d58"/>
        <function-ref name="granted" scoped="" ref="0x408b5e38"/>
        <function-ref name="isOwner" scoped="" ref="0x408b5f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x408daf00" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x408daf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x408d90f0"/>
        <function-ref name="userId" scoped="" ref="0x408d91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x408d9398" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x408d9398"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x408d9570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x408b7e40" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x408b7e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40901050"/>
        <function-ref name="sleep" scoped="" ref="0x40900470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40901210"/>
        <function-ref name="dataReady" scoped="" ref="0x40900550"/>
        <function-ref name="initMaster" scoped="" ref="0x409013d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x409014b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40901590"/>
        <function-ref name="read" scoped="" ref="0x40901670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40901750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40901830"/>
        <function-ref name="setClock" scoped="" ref="0x40901910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x409019f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40901ad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40901c30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40901d10"/>
        <function-ref name="write" scoped="" ref="0x40901df0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40901ed0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40900010"/>
        <function-ref name="getClockPhase" scoped="" ref="0x409000f0"/>
        <function-ref name="getClock" scoped="" ref="0x409001d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x409002b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40901130"/>
        <function-ref name="setClockPhase" scoped="" ref="0x409012f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40900390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40917e88" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40917e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40914070"/>
        <function-ref name="isInput" scoped="" ref="0x40914150"/>
        <function-ref name="toggle" scoped="" ref="0x40914230"/>
        <function-ref name="isOutput" scoped="" ref="0x40914310"/>
        <function-ref name="get" scoped="" ref="0x409143f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409144d0"/>
        <function-ref name="set" scoped="" ref="0x409145b0"/>
        <function-ref name="clr" scoped="" ref="0x40914690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x408fb9e8" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x408fb9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408fbbc0"/>
        <function-ref name="isInput" scoped="" ref="0x408fbca0"/>
        <function-ref name="toggle" scoped="" ref="0x408fbd80"/>
        <function-ref name="isOutput" scoped="" ref="0x408fbe60"/>
        <function-ref name="get" scoped="" ref="0x40917010"/>
        <function-ref name="makeOutput" scoped="" ref="0x409170f0"/>
        <function-ref name="set" scoped="" ref="0x409171d0"/>
        <function-ref name="clr" scoped="" ref="0x409172b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x408fb010" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x408fb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408fb1e8"/>
        <function-ref name="isInput" scoped="" ref="0x408fb2c8"/>
        <function-ref name="toggle" scoped="" ref="0x408fb3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x408fb488"/>
        <function-ref name="get" scoped="" ref="0x408fb568"/>
        <function-ref name="makeOutput" scoped="" ref="0x408fb648"/>
        <function-ref name="set" scoped="" ref="0x408fb728"/>
        <function-ref name="clr" scoped="" ref="0x408fb808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40916ac0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40916ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40916c98"/>
        <function-ref name="stop" scoped="" ref="0x40916d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40914898" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40914898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40914a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x408fd1c8" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x408fd1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x408fd3a0"/>
        <function-ref name="sleep" scoped="" ref="0x408fc7f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x408fd560"/>
        <function-ref name="dataReady" scoped="" ref="0x408fc8d0"/>
        <function-ref name="initMaster" scoped="" ref="0x408fd720"/>
        <function-ref name="setMasterBit" scoped="" ref="0x408fd800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x408fd8e0"/>
        <function-ref name="read" scoped="" ref="0x408fd9c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x408fdaa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x408fdb80"/>
        <function-ref name="setClock" scoped="" ref="0x408fdc60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x408fdd40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x408fde20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x408fc010"/>
        <function-ref name="setDataOrder" scoped="" ref="0x408fc0f0"/>
        <function-ref name="write" scoped="" ref="0x408fc1d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x408fc2b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x408fc390"/>
        <function-ref name="getClockPhase" scoped="" ref="0x408fc470"/>
        <function-ref name="getClock" scoped="" ref="0x408fc550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x408fc630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x408fd480"/>
        <function-ref name="setClockPhase" scoped="" ref="0x408fd640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x408fc710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x409174a0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x409174a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40917678"/>
        <function-ref name="isInput" scoped="" ref="0x40917758"/>
        <function-ref name="toggle" scoped="" ref="0x40917838"/>
        <function-ref name="isOutput" scoped="" ref="0x40917918"/>
        <function-ref name="get" scoped="" ref="0x409179f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40917ad8"/>
        <function-ref name="set" scoped="" ref="0x40917bb8"/>
        <function-ref name="clr" scoped="" ref="0x40917c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40928cb0" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40928cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40928e98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4096b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4096b600" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4096b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4096b7e8"/>
        <function-ref name="configure" scoped="" ref="0x4096b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40928570" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40928570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40928758"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40928838"/>
        <function-ref name="request" scoped="" ref="0x40928918"/>
        <function-ref name="granted" scoped="" ref="0x409289f8"/>
        <function-ref name="isOwner" scoped="" ref="0x40928ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4096b150" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4096b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4096b328"/>
        <function-ref name="userId" scoped="" ref="0x4096b408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41200df0" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41200df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411fe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x411fe170" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x411fe170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411fe348"/>
        <function-ref name="isEmpty" scoped="" ref="0x411fe428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411fe508"/>
        <function-ref name="dequeue" scoped="" ref="0x411fe5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x411fd8c0" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x411fd8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x411fdaa8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411fdb88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411fb218" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411fb218"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411fb400"/>
        <function-ref name="configure" scoped="" ref="0x411fb4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x411fb640" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x411fb640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411fb818"/>
        <function-ref name="isEmpty" scoped="" ref="0x411fb8f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411fb9d8"/>
        <function-ref name="dequeue" scoped="" ref="0x411fbab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411fd180" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411fd180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411fd368"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411fd448"/>
        <function-ref name="request" scoped="" ref="0x411fd528"/>
        <function-ref name="granted" scoped="" ref="0x411fd608"/>
        <function-ref name="isOwner" scoped="" ref="0x411fd6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x411fdcc8" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411fdcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411fdea0"/>
        <function-ref name="userId" scoped="" ref="0x411fb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x411fbc38" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x411fbc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411fbe10"/>
        <function-ref name="runTask" scoped="" ref="0x411fbef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40965b68" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40965b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40965d40"/>
        <function-ref name="isInput" scoped="" ref="0x40965e20"/>
        <function-ref name="toggle" scoped="" ref="0x40965f00"/>
        <function-ref name="isOutput" scoped="" ref="0x40964010"/>
        <function-ref name="get" scoped="" ref="0x409640f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409641d0"/>
        <function-ref name="set" scoped="" ref="0x409642b0"/>
        <function-ref name="clr" scoped="" ref="0x40964390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40968bf8" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40968bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40968dd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40968eb0"/>
        <function-ref name="request" scoped="" ref="0x40965010"/>
        <function-ref name="granted" scoped="" ref="0x409650f0"/>
        <function-ref name="isOwner" scoped="" ref="0x409651d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x40965438" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x40965438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40965610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409656f0"/>
        <function-ref name="request" scoped="" ref="0x409657d0"/>
        <function-ref name="granted" scoped="" ref="0x409658b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40965990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40978040" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40978040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40978218"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409782f8"/>
        <function-ref name="led1On" scoped="" ref="0x409783d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409784b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40978598"/>
        <function-ref name="get" scoped="" ref="0x40978678"/>
        <function-ref name="led1Off" scoped="" ref="0x40978758"/>
        <function-ref name="led2Off" scoped="" ref="0x40978ad8"/>
        <function-ref name="set" scoped="" ref="0x40978838"/>
        <function-ref name="led0On" scoped="" ref="0x40978918"/>
        <function-ref name="led2On" scoped="" ref="0x409789f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40974400" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40974400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409745d8"/>
        <function-ref name="isInput" scoped="" ref="0x409746b8"/>
        <function-ref name="toggle" scoped="" ref="0x40974798"/>
        <function-ref name="isOutput" scoped="" ref="0x40974878"/>
        <function-ref name="get" scoped="" ref="0x40974958"/>
        <function-ref name="makeOutput" scoped="" ref="0x40974a38"/>
        <function-ref name="set" scoped="" ref="0x40974b18"/>
        <function-ref name="clr" scoped="" ref="0x40974bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40975390" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40975390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40975568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40974de8" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40974de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40973010"/>
        <function-ref name="isInput" scoped="" ref="0x409730f0"/>
        <function-ref name="toggle" scoped="" ref="0x409731d0"/>
        <function-ref name="isOutput" scoped="" ref="0x409732b0"/>
        <function-ref name="get" scoped="" ref="0x40973390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40973470"/>
        <function-ref name="set" scoped="" ref="0x40973550"/>
        <function-ref name="clr" scoped="" ref="0x40973630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x409756d8" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409756d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409758b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40975990"/>
        <function-ref name="led1On" scoped="" ref="0x40975a70"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40975b50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40975c30"/>
        <function-ref name="get" scoped="" ref="0x40975d10"/>
        <function-ref name="led1Off" scoped="" ref="0x40975df0"/>
        <function-ref name="led2Off" scoped="" ref="0x409741d0"/>
        <function-ref name="set" scoped="" ref="0x40975ed0"/>
        <function-ref name="led0On" scoped="" ref="0x40974010"/>
        <function-ref name="led2On" scoped="" ref="0x409740f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40973820" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40973820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409739f8"/>
        <function-ref name="isInput" scoped="" ref="0x40973ad8"/>
        <function-ref name="toggle" scoped="" ref="0x40973bb8"/>
        <function-ref name="isOutput" scoped="" ref="0x40973c98"/>
        <function-ref name="get" scoped="" ref="0x40973d78"/>
        <function-ref name="makeOutput" scoped="" ref="0x40973e58"/>
        <function-ref name="set" scoped="" ref="0x40972010"/>
        <function-ref name="clr" scoped="" ref="0x409720f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40977ba0" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40977ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40977d78"/>
        <function-ref name="isInput" scoped="" ref="0x40977e58"/>
        <function-ref name="toggle" scoped="" ref="0x40982010"/>
        <function-ref name="isOutput" scoped="" ref="0x409820f0"/>
        <function-ref name="get" scoped="" ref="0x409821d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409822b0"/>
        <function-ref name="set" scoped="" ref="0x40982390"/>
        <function-ref name="clr" scoped="" ref="0x40982470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40982680" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40982680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40982858"/>
        <function-ref name="isInput" scoped="" ref="0x40982938"/>
        <function-ref name="toggle" scoped="" ref="0x40982a18"/>
        <function-ref name="isOutput" scoped="" ref="0x40982af8"/>
        <function-ref name="get" scoped="" ref="0x40982bd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40982cb8"/>
        <function-ref name="set" scoped="" ref="0x40982d98"/>
        <function-ref name="clr" scoped="" ref="0x40982e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x409a0a38" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409a0a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409a0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x409a00b0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x409a00b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409a0288"/>
        <function-ref name="isInput" scoped="" ref="0x409a0368"/>
        <function-ref name="toggle" scoped="" ref="0x409a0448"/>
        <function-ref name="isOutput" scoped="" ref="0x409a0528"/>
        <function-ref name="get" scoped="" ref="0x409a0608"/>
        <function-ref name="makeOutput" scoped="" ref="0x409a06e8"/>
        <function-ref name="set" scoped="" ref="0x409a07c8"/>
        <function-ref name="clr" scoped="" ref="0x409a08a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409b35c8" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409b35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b38a0"/>
        <function-ref name="write" scoped="" ref="0x409b3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409b9920" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409b9920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b9af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409b5af8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409b5af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b5cd0"/>
        <function-ref name="write" scoped="" ref="0x409b5db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409b2448" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409b2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b2620"/>
        <function-ref name="write" scoped="" ref="0x409b2700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x409b2880" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x409b2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b2a58"/>
        <function-ref name="write" scoped="" ref="0x409b2b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x409ccb20" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x409ccb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cccf8"/>
        <function-ref name="write" scoped="" ref="0x409ccdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x409cda00" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x409cda00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cdbd8"/>
        <function-ref name="write" scoped="" ref="0x409cdcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409b8368" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409b8368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b8540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409cd190" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409cd190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cd368"/>
        <function-ref name="write" scoped="" ref="0x409cd448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409b4448" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409b4448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b4620"/>
        <function-ref name="write" scoped="" ref="0x409b4700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409b4cb8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409b4cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b4e90"/>
        <function-ref name="write" scoped="" ref="0x409b3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409cf2b0" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409cf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cf488"/>
        <function-ref name="write" scoped="" ref="0x409cf568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409b2cb8" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409b2cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b2e90"/>
        <function-ref name="write" scoped="" ref="0x409b1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409bac78" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409bac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409bae50"/>
        <function-ref name="abortRelease" scoped="" ref="0x409b9010"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409b90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409b7190" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409b7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b7368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409b74e8" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409b74e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409b78c0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409b78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b7a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x409cd5c8" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409cd5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cd7a0"/>
        <function-ref name="write" scoped="" ref="0x409cd880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409b8a18" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409b8a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x409b4880" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x409b4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b4a58"/>
        <function-ref name="write" scoped="" ref="0x409b4b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409b4010" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409b4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b41e8"/>
        <function-ref name="write" scoped="" ref="0x409b42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409b95c8" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409b95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b97a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x409cc6e8" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x409cc6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cc8c0"/>
        <function-ref name="write" scoped="" ref="0x409cc9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x409cde38" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x409cde38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cc050"/>
        <function-ref name="write" scoped="" ref="0x409cc130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409cf6e8" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409cf6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cf8c0"/>
        <function-ref name="write" scoped="" ref="0x409cf9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409cecb8" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409cecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cee90"/>
        <function-ref name="write" scoped="" ref="0x409cd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409b15c8" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409b15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b17a0"/>
        <function-ref name="write" scoped="" ref="0x409b1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409cb010" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409cb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409cb3e8"/>
        <function-ref name="writeDone" scoped="" ref="0x409cb4c8"/>
        <function-ref name="write" scoped="" ref="0x409cb5a8"/>
        <function-ref name="beginRead" scoped="" ref="0x409cb688"/>
        <function-ref name="readDone" scoped="" ref="0x409cb768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409b9270" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409b9270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b9448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409b56c0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409b56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b5898"/>
        <function-ref name="write" scoped="" ref="0x409b5978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409b3190" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409b3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b3368"/>
        <function-ref name="write" scoped="" ref="0x409b3448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409b1190" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409b1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b1368"/>
        <function-ref name="write" scoped="" ref="0x409b1448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x409b3b00" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x409b3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b3cd8"/>
        <function-ref name="write" scoped="" ref="0x409b3db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409b9c78" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409b9c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b9e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409b2010" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409b2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b21e8"/>
        <function-ref name="write" scoped="" ref="0x409b22c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409ba5c0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409ba5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409ba798"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409ba878"/>
        <function-ref name="request" scoped="" ref="0x409ba958"/>
        <function-ref name="granted" scoped="" ref="0x409baa38"/>
        <function-ref name="isOwner" scoped="" ref="0x409bab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409b7c18" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409b7c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b7df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409b5368" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409b5368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b5540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409ce880" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409ce880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cea58"/>
        <function-ref name="write" scoped="" ref="0x409ceb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409ce448" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409ce448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ce620"/>
        <function-ref name="write" scoped="" ref="0x409ce700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409b8d70" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409b8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x409ce010" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ce1e8"/>
        <function-ref name="write" scoped="" ref="0x409ce2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x409cc2b0" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x409cc2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cc488"/>
        <function-ref name="write" scoped="" ref="0x409cc568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409cfb20" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409cfb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cfcf8"/>
        <function-ref name="write" scoped="" ref="0x409cfdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409b8010" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b81e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409b1e38" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409b1e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cf050"/>
        <function-ref name="write" scoped="" ref="0x409cf130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409b86c0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409b86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b8898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409b1a00" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409b1a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b1bd8"/>
        <function-ref name="write" scoped="" ref="0x409b1cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409b5010" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409b5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409cb8e8" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409cb8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409cbac0"/>
        <function-ref name="writeDone" scoped="" ref="0x409cbba0"/>
        <function-ref name="write" scoped="" ref="0x409cbc80"/>
        <function-ref name="beginRead" scoped="" ref="0x409cbd60"/>
        <function-ref name="readDone" scoped="" ref="0x409cbe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409c1e38" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409c1e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409df208"/>
        <function-ref name="write" scoped="" ref="0x409df2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409c5368" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409c5368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c5540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409c24b8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409c24b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c2690"/>
        <function-ref name="write" scoped="" ref="0x409c2770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409dfcd8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409dfcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dfeb0"/>
        <function-ref name="write" scoped="" ref="0x409de010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x409de190" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x409de190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409de368"/>
        <function-ref name="write" scoped="" ref="0x409de448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x409d8448" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x409d8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d8620"/>
        <function-ref name="write" scoped="" ref="0x409d8700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x409d92b0" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x409d92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d9488"/>
        <function-ref name="write" scoped="" ref="0x409d9568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409c5d70" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409c5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409dba00" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409dba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dbbd8"/>
        <function-ref name="write" scoped="" ref="0x409dbcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409c2d28" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409c2d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c2f00"/>
        <function-ref name="write" scoped="" ref="0x409c1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409c15c8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409c15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c17a0"/>
        <function-ref name="write" scoped="" ref="0x409c1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409ddb20" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409ddb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ddcf8"/>
        <function-ref name="write" scoped="" ref="0x409dddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409de5c8" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409de5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409de7a0"/>
        <function-ref name="write" scoped="" ref="0x409de880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409c76c8" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409c76c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409c78a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x409c7980"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409c7a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409c4b98" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409c4b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c4d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409c4ef0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409c4ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c3188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409c3308" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409c3308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x409dbe38" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409dbe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d9050"/>
        <function-ref name="write" scoped="" ref="0x409d9130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409c44e8" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409c44e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x409c1190" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x409c1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c1368"/>
        <function-ref name="write" scoped="" ref="0x409c1448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409c28f0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409c28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c2ac8"/>
        <function-ref name="write" scoped="" ref="0x409c2ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409c5010" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x409d8010" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x409d8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d81e8"/>
        <function-ref name="write" scoped="" ref="0x409d82c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x409d96e8" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x409d96e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d98c0"/>
        <function-ref name="write" scoped="" ref="0x409d99a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409dc010" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409dc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dc1e8"/>
        <function-ref name="write" scoped="" ref="0x409dc2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409db5c8" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409db5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409db7a0"/>
        <function-ref name="write" scoped="" ref="0x409db880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409dee38" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409dee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dd050"/>
        <function-ref name="write" scoped="" ref="0x409dd130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409d8880" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409d8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409d8c58"/>
        <function-ref name="writeDone" scoped="" ref="0x409d8d38"/>
        <function-ref name="write" scoped="" ref="0x409d8e18"/>
        <function-ref name="beginRead" scoped="" ref="0x409d8ef8"/>
        <function-ref name="readDone" scoped="" ref="0x409d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409c7be0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409c7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c7db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409c2080" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409c2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c2258"/>
        <function-ref name="write" scoped="" ref="0x409c2338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409c1a00" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409c1a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c1bd8"/>
        <function-ref name="write" scoped="" ref="0x409c1cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409dea00" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409dea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409debd8"/>
        <function-ref name="write" scoped="" ref="0x409decb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x409df468" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x409df468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409df640"/>
        <function-ref name="write" scoped="" ref="0x409df720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409c56c0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409c56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c5898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409df8a0" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409df8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dfa78"/>
        <function-ref name="write" scoped="" ref="0x409dfb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409c7010" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409c7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409c71e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409c72c8"/>
        <function-ref name="request" scoped="" ref="0x409c73a8"/>
        <function-ref name="granted" scoped="" ref="0x409c7488"/>
        <function-ref name="isOwner" scoped="" ref="0x409c7568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409c3660" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409c3660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c3838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409c3d10" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409c3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c3ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409db190" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409db190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409db368"/>
        <function-ref name="write" scoped="" ref="0x409db448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409dccb8" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409dccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dce90"/>
        <function-ref name="write" scoped="" ref="0x409db010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409c4840" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409c4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c4a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x409dc880" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409dc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dca58"/>
        <function-ref name="write" scoped="" ref="0x409dcb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x409d9b20" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x409d9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d9cf8"/>
        <function-ref name="write" scoped="" ref="0x409d9dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409dc448" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409dc448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dc620"/>
        <function-ref name="write" scoped="" ref="0x409dc700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409c5a18" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409c5a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409dd6e8" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409dd6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dd8c0"/>
        <function-ref name="write" scoped="" ref="0x409dd9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409c4190" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409c4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c4368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409dd2b0" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409dd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dd488"/>
        <function-ref name="write" scoped="" ref="0x409dd568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409c39b8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409c39b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409d7190" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409d7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409d7368"/>
        <function-ref name="writeDone" scoped="" ref="0x409d7448"/>
        <function-ref name="write" scoped="" ref="0x409d7528"/>
        <function-ref name="beginRead" scoped="" ref="0x409d7608"/>
        <function-ref name="readDone" scoped="" ref="0x409d76e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x409d4968" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409d4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x409d4b40"/>
        <function-ref name="changed" scoped="" ref="0x409d4c20"/>
        <function-ref name="amGroup" scoped="" ref="0x409d4d00"/>
        <function-ref name="setAddress" scoped="" ref="0x409d4de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x409e81e8" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x409e81e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x409e83c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x409fe808" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x409fe808"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x409fe9e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x409feac0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x409feba0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x409fec80"/>
        <function-ref name="setCca" scoped="" ref="0x409fed60"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x409fee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x409fd8e0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x409fd8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409fdab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x409fe0f0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x409fe0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fe2c8"/>
        <function-ref name="cancel" scoped="" ref="0x409fe3a8"/>
        <function-ref name="modify" scoped="" ref="0x409fe488"/>
        <function-ref name="sendDone" scoped="" ref="0x409fe568"/>
        <function-ref name="resend" scoped="" ref="0x409fe648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409e2c08" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409e2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409e2de0"/>
        <function-ref name="stop" scoped="" ref="0x409e2ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x409fdd48" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x409fdd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409fdf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40a09490" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40a09490"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40a09668"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40a09748"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40a09828"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40a09908"/>
        <function-ref name="setCca" scoped="" ref="0x40a099e8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40a09ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a042b0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a042b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a04db0"/>
        <function-ref name="clear" scoped="" ref="0x40a02170"/>
        <function-ref name="isValid" scoped="" ref="0x40a04a00"/>
        <function-ref name="set" scoped="" ref="0x40a02520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x40a1ad70" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40a1ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a19010"/>
        <function-ref name="write" scoped="" ref="0x40a190f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x40a19300" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40a19300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a194d8"/>
        <function-ref name="write" scoped="" ref="0x40a195b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40a09d88" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40a09d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a07010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x40a1b598" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40a1b598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a1b770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x40a1d840" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x40a1d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a1da18"/>
        <function-ref name="disable" scoped="" ref="0x40a1daf8"/>
        <function-ref name="captured" scoped="" ref="0x40a1dbd8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a1dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x40a07888" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x40a07888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a06d58"/>
        <function-ref name="fired" scoped="" ref="0x40a06528"/>
        <function-ref name="startAt" scoped="" ref="0x40a06a18"/>
        <function-ref name="isRunning" scoped="" ref="0x40a067a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a05010"/>
        <function-ref name="start" scoped="" ref="0x40a06010"/>
        <function-ref name="stop" scoped="" ref="0x40a062b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40a052c0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40a052c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a05498"/>
        <function-ref name="setNetwork" scoped="" ref="0x40a05578"/>
        <function-ref name="getRssi" scoped="" ref="0x40a05658"/>
        <function-ref name="getNetwork" scoped="" ref="0x40a05738"/>
        <function-ref name="getPower" scoped="" ref="0x40a05818"/>
        <function-ref name="getLqi" scoped="" ref="0x40a058f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x40a1c338" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a1c338"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a1c510"/>
        <function-ref name="write" scoped="" ref="0x40a1c5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x40a1c840" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40a1c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a1ca18"/>
        <function-ref name="write" scoped="" ref="0x40a1caf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x40a15a60" loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a15a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a15c38"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a15d18"/>
        <function-ref name="sfd" scoped="" ref="0x40a15df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a0acd8" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a0acd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a0aeb0"/>
        <function-ref name="cancel" scoped="" ref="0x40a09010"/>
        <function-ref name="modify" scoped="" ref="0x40a090f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a091d0"/>
        <function-ref name="resend" scoped="" ref="0x40a092b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x40a1f588" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40a1f588"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40a1f760"/>
        <function-ref name="abortRelease" scoped="" ref="0x40a1f840"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40a1f920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x40a1b9c8" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40a1b9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a1bba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40a019a8" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40a019a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a01b80"/>
        <function-ref name="isInput" scoped="" ref="0x40a01c60"/>
        <function-ref name="toggle" scoped="" ref="0x40a01d40"/>
        <function-ref name="isOutput" scoped="" ref="0x40a01e20"/>
        <function-ref name="get" scoped="" ref="0x40a01f00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a22010"/>
        <function-ref name="set" scoped="" ref="0x40a220f0"/>
        <function-ref name="clr" scoped="" ref="0x40a221d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a0a440" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a0a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a0a618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40a05b00" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a05b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40a05cd8"/>
        <function-ref name="getHeader" scoped="" ref="0x40a05db8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40a05e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40a1d170" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a1d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a1d348"/>
        <function-ref name="isSet" scoped="" ref="0x40a1d428"/>
        <function-ref name="cancel" scoped="" ref="0x40a1d508"/>
        <function-ref name="set" scoped="" ref="0x40a1d5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40a1be08" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40a1be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a1a0f0"/>
        <function-ref name="write" scoped="" ref="0x40a1a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a22e10" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a22e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a1f010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a1f0f0"/>
        <function-ref name="request" scoped="" ref="0x40a1f1d0"/>
        <function-ref name="granted" scoped="" ref="0x40a1f2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a1f390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x40a1deb8" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40a1deb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a01188"/>
        <function-ref name="isInput" scoped="" ref="0x40a01268"/>
        <function-ref name="toggle" scoped="" ref="0x40a01348"/>
        <function-ref name="isOutput" scoped="" ref="0x40a01428"/>
        <function-ref name="get" scoped="" ref="0x40a01508"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a015e8"/>
        <function-ref name="set" scoped="" ref="0x40a016c8"/>
        <function-ref name="clr" scoped="" ref="0x40a017a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x40a197c8" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40a197c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a199a0"/>
        <function-ref name="write" scoped="" ref="0x40a19a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x40a19ca8" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40a19ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a19e80"/>
        <function-ref name="write" scoped="" ref="0x40a18010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40a1cd28" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40a1cd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a1cf00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x40a223d0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40a223d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a225a8"/>
        <function-ref name="isInput" scoped="" ref="0x40a22688"/>
        <function-ref name="toggle" scoped="" ref="0x40a22768"/>
        <function-ref name="isOutput" scoped="" ref="0x40a22848"/>
        <function-ref name="get" scoped="" ref="0x40a22928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a22a08"/>
        <function-ref name="set" scoped="" ref="0x40a22ae8"/>
        <function-ref name="clr" scoped="" ref="0x40a22bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a17010" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a17010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a171e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a172c8"/>
        <function-ref name="led1On" scoped="" ref="0x40a173a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a17488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a17568"/>
        <function-ref name="get" scoped="" ref="0x40a17648"/>
        <function-ref name="led1Off" scoped="" ref="0x40a17728"/>
        <function-ref name="led2Off" scoped="" ref="0x40a17aa8"/>
        <function-ref name="set" scoped="" ref="0x40a17808"/>
        <function-ref name="led0On" scoped="" ref="0x40a178e8"/>
        <function-ref name="led2On" scoped="" ref="0x40a179c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x40a1a850" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40a1a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a1aa28"/>
        <function-ref name="write" scoped="" ref="0x40a1ab08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a0a7e0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a0a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a0a9b8"/>
        <function-ref name="stop" scoped="" ref="0x40a0aa98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x40a1fb48" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40a1fb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a1fd20"/>
        <function-ref name="writeDone" scoped="" ref="0x40a1fe00"/>
        <function-ref name="write" scoped="" ref="0x40a1fee0"/>
        <function-ref name="beginRead" scoped="" ref="0x40a1c010"/>
        <function-ref name="readDone" scoped="" ref="0x40a1c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x40a1b168" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40a1b168"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a1b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x40a1a410" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40a1a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a1a5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40a072c0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40a072c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a07498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40a67880" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40a67880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a67b58"/>
        <function-ref name="write" scoped="" ref="0x40a67c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40a6dbf8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40a6dbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a6ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40a6ae50" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40a6ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a68050"/>
        <function-ref name="write" scoped="" ref="0x40a68130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40a886a8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40a886a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a88880"/>
        <function-ref name="write" scoped="" ref="0x40a88960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40a88ae0" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40a88ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a88cb8"/>
        <function-ref name="write" scoped="" ref="0x40a88d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40a82cb8" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40a82cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a82e90"/>
        <function-ref name="write" scoped="" ref="0x40a81010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40a83b20" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40a83b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a83cf8"/>
        <function-ref name="write" scoped="" ref="0x40a83dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40a6c6c0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40a6c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a6c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40a832b0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a832b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a83488"/>
        <function-ref name="write" scoped="" ref="0x40a83568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40a686e8" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40a686e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a688c0"/>
        <function-ref name="write" scoped="" ref="0x40a689a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40a67010" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40a67010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a671e8"/>
        <function-ref name="write" scoped="" ref="0x40a672c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40a86468" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40a86468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a86640"/>
        <function-ref name="write" scoped="" ref="0x40a86720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40a88f18" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40a88f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a87108"/>
        <function-ref name="write" scoped="" ref="0x40a871e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40a6d030" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40a6d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40a6d208"/>
        <function-ref name="abortRelease" scoped="" ref="0x40a6d2e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40a6d3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40a6b4e8" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40a6b4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a6b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40a6b840" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40a6b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a6ba98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40a6bc18" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40a6bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a6bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40a836e8" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40a836e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a838c0"/>
        <function-ref name="write" scoped="" ref="0x40a839a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40a6cd70" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40a6cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a6b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40a68b20" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40a68b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a68cf8"/>
        <function-ref name="write" scoped="" ref="0x40a68dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40a682b0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40a682b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a68488"/>
        <function-ref name="write" scoped="" ref="0x40a68568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40a6d8a0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40a6d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a6da78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40a82880" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40a82880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a82a58"/>
        <function-ref name="write" scoped="" ref="0x40a82b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40a82010" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40a82010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a821e8"/>
        <function-ref name="write" scoped="" ref="0x40a822c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40a868a0" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40a868a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a86a78"/>
        <function-ref name="write" scoped="" ref="0x40a86b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40a84e38" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40a84e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a83050"/>
        <function-ref name="write" scoped="" ref="0x40a83130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40a877a0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40a877a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a87978"/>
        <function-ref name="write" scoped="" ref="0x40a87a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40a81190" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40a81190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a81568"/>
        <function-ref name="writeDone" scoped="" ref="0x40a81648"/>
        <function-ref name="write" scoped="" ref="0x40a81728"/>
        <function-ref name="beginRead" scoped="" ref="0x40a81808"/>
        <function-ref name="readDone" scoped="" ref="0x40a818e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40a6d548" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40a6d548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a6d720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40a6aa18" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40a6aa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6abf0"/>
        <function-ref name="write" scoped="" ref="0x40a6acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40a67448" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40a67448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a67620"/>
        <function-ref name="write" scoped="" ref="0x40a67700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40a87368" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40a87368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a87540"/>
        <function-ref name="write" scoped="" ref="0x40a87620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40a67db8" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40a67db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a88010"/>
        <function-ref name="write" scoped="" ref="0x40a880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40a6c010" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40a6c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a6c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40a88270" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40a88270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a88448"/>
        <function-ref name="write" scoped="" ref="0x40a88528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a6e950" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a6e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a6eb28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a6ec08"/>
        <function-ref name="request" scoped="" ref="0x40a6ece8"/>
        <function-ref name="granted" scoped="" ref="0x40a6edc8"/>
        <function-ref name="isOwner" scoped="" ref="0x40a6eea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40a6a010" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40a6a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a6a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40a6a6c0" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40a6a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a6a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40a84a00" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40a84a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a84bd8"/>
        <function-ref name="write" scoped="" ref="0x40a84cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40a845c8" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40a845c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a847a0"/>
        <function-ref name="write" scoped="" ref="0x40a84880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40a6b190" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40a6b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a6b368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40a84190" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40a84190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a84368"/>
        <function-ref name="write" scoped="" ref="0x40a84448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40a82448" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40a82448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a82620"/>
        <function-ref name="write" scoped="" ref="0x40a82700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40a86cd8" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40a86cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a86eb0"/>
        <function-ref name="write" scoped="" ref="0x40a84010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40a6c368" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40a6c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a6c540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40a86030" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40a86030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a86208"/>
        <function-ref name="write" scoped="" ref="0x40a862e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40a6ca18" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40a6ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a6cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40a87bd8" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40a87bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a87db0"/>
        <function-ref name="write" scoped="" ref="0x40a87e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40a6a368" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40a6a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a6a540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40a81a68" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40a81a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a81c40"/>
        <function-ref name="writeDone" scoped="" ref="0x40a81d20"/>
        <function-ref name="write" scoped="" ref="0x40a81e00"/>
        <function-ref name="beginRead" scoped="" ref="0x40a81ee0"/>
        <function-ref name="readDone" scoped="" ref="0x40a80010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40a7bcd8" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a7bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a7beb0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a78010"/>
        <function-ref name="sfd" scoped="" ref="0x40a780f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a78298" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a78298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a78470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40a78730" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40a78730"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a78908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a7b838" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a7b838"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a7ba10"/>
        <function-ref name="stop" scoped="" ref="0x40a7baf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x40a954c0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40a954c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a95698"/>
        <function-ref name="isInput" scoped="" ref="0x40a95778"/>
        <function-ref name="toggle" scoped="" ref="0x40a95858"/>
        <function-ref name="isOutput" scoped="" ref="0x40a95938"/>
        <function-ref name="get" scoped="" ref="0x40a95a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a95af8"/>
        <function-ref name="set" scoped="" ref="0x40a95bd8"/>
        <function-ref name="clr" scoped="" ref="0x40a95cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40a91680" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40a91680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40a91858"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40a91938"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40a91a18"/>
        <function-ref name="syncDone" scoped="" ref="0x40a91af8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40a91bd8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40a91cb8"/>
        <function-ref name="setChannel" scoped="" ref="0x40a91d98"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40a91e78"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40a90010"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40a900f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40a901d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40a902b0"/>
        <function-ref name="sync" scoped="" ref="0x40a90390"/>
        <function-ref name="getChannel" scoped="" ref="0x40a904f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40a905d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x40aa9b88" loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x40aa9b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40aa9d60"/>
        <function-ref name="runTask" scoped="" ref="0x40aa9e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a90980" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a90980"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a8f4a8"/>
        <function-ref name="clear" scoped="" ref="0x40a8f858"/>
        <function-ref name="isValid" scoped="" ref="0x40a8f0f8"/>
        <function-ref name="set" scoped="" ref="0x40a8fc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x40a95ed0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40a95ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a940c0"/>
        <function-ref name="isInput" scoped="" ref="0x40a941a0"/>
        <function-ref name="toggle" scoped="" ref="0x40a94280"/>
        <function-ref name="isOutput" scoped="" ref="0x40a94360"/>
        <function-ref name="get" scoped="" ref="0x40a94440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a94520"/>
        <function-ref name="set" scoped="" ref="0x40a94600"/>
        <function-ref name="clr" scoped="" ref="0x40a946e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x40a8eaa0" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40a8eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a8ec78"/>
        <function-ref name="write" scoped="" ref="0x40a8ed58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x40a8d010" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40a8d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a8d1e8"/>
        <function-ref name="write" scoped="" ref="0x40a8d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x40a8d9b8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40a8d9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a8db90"/>
        <function-ref name="write" scoped="" ref="0x40a8dc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40a92878" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40a92878"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a92a50"/>
        <function-ref name="setNetwork" scoped="" ref="0x40a92b30"/>
        <function-ref name="getRssi" scoped="" ref="0x40a92c10"/>
        <function-ref name="getNetwork" scoped="" ref="0x40a92cf0"/>
        <function-ref name="getPower" scoped="" ref="0x40a92dd0"/>
        <function-ref name="getLqi" scoped="" ref="0x40a92eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40a98c70" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a98c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a98e48"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a98f28"/>
        <function-ref name="sfd" scoped="" ref="0x40a97018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x40a92010" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40a92010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a921e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40a97a30" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40a97a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a97c08"/>
        <function-ref name="isInput" scoped="" ref="0x40a97ce8"/>
        <function-ref name="toggle" scoped="" ref="0x40a97dc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a97ea8"/>
        <function-ref name="get" scoped="" ref="0x40a95010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a950f0"/>
        <function-ref name="set" scoped="" ref="0x40a951d0"/>
        <function-ref name="clr" scoped="" ref="0x40a952b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x40a8deb8" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40a8deb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a8b0c0"/>
        <function-ref name="write" scoped="" ref="0x40a8b1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a98430" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a98430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a98608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40a91108" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a91108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40a912e0"/>
        <function-ref name="getHeader" scoped="" ref="0x40a913c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40a914a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a971c0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a971c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a97398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a930a0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a930a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a93278"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a93358"/>
        <function-ref name="request" scoped="" ref="0x40a93438"/>
        <function-ref name="granted" scoped="" ref="0x40a93518"/>
        <function-ref name="isOwner" scoped="" ref="0x40a935f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x40a8d4d8" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40a8d4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a8d6b0"/>
        <function-ref name="write" scoped="" ref="0x40a8d790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x40a93820" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40a93820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a939f8"/>
        <function-ref name="writeDone" scoped="" ref="0x40a93ad8"/>
        <function-ref name="write" scoped="" ref="0x40a93bb8"/>
        <function-ref name="beginRead" scoped="" ref="0x40a93c98"/>
        <function-ref name="readDone" scoped="" ref="0x40a93d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40a8b3d0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40a8b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a8b6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40a97658" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40a97658"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a97830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a8b838" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a8b838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a8ba10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a8baf0"/>
        <function-ref name="led1On" scoped="" ref="0x40a8bbd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a8bcb0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a8bd90"/>
        <function-ref name="get" scoped="" ref="0x40a8be70"/>
        <function-ref name="led1Off" scoped="" ref="0x40a8a010"/>
        <function-ref name="led2Off" scoped="" ref="0x40a8a390"/>
        <function-ref name="set" scoped="" ref="0x40a8a0f0"/>
        <function-ref name="led0On" scoped="" ref="0x40a8a1d0"/>
        <function-ref name="led2On" scoped="" ref="0x40a8a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x40a8e580" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40a8e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a8e758"/>
        <function-ref name="write" scoped="" ref="0x40a8e838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x40a8e140" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40a8e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a8e318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x40a94978" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40a94978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a94b50"/>
        <function-ref name="disable" scoped="" ref="0x40a94c30"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40a94d10"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40a94df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x40a92440" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40a92440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a92698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a987d0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a987d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a989a8"/>
        <function-ref name="stop" scoped="" ref="0x40a98a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40adc060" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40adc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40adc238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40ae0ba0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40ae0ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40ae0d78"/>
        <function-ref name="setNetwork" scoped="" ref="0x40ae0e58"/>
        <function-ref name="getRssi" scoped="" ref="0x40add010"/>
        <function-ref name="getNetwork" scoped="" ref="0x40add0f0"/>
        <function-ref name="getPower" scoped="" ref="0x40add1d0"/>
        <function-ref name="getLqi" scoped="" ref="0x40add2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40adc6b8" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40adc6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40adb1d8"/>
        <function-ref name="clear" scoped="" ref="0x40adb588"/>
        <function-ref name="isValid" scoped="" ref="0x40adce08"/>
        <function-ref name="set" scoped="" ref="0x40adb938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40addaa0" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40addaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40addc78"/>
        <function-ref name="getHeader" scoped="" ref="0x40addd58"/>
        <function-ref name="getMetadata" scoped="" ref="0x40adde38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40ad8888" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40ad8888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ad8a60"/>
        <function-ref name="isSet" scoped="" ref="0x40ad8b40"/>
        <function-ref name="cancel" scoped="" ref="0x40ad8c20"/>
        <function-ref name="set" scoped="" ref="0x40ad8d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40ada100" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ada100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40adac00"/>
        <function-ref name="clear" scoped="" ref="0x40ad8010"/>
        <function-ref name="isValid" scoped="" ref="0x40ada850"/>
        <function-ref name="set" scoped="" ref="0x40ad83c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40add520" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40add520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40add6f8"/>
        <function-ref name="noAck" scoped="" ref="0x40add7d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40add8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40ad4a40" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ad4a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40ad4c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40ad7668" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40ad7668"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40ad7840"/>
        <function-ref name="setNetwork" scoped="" ref="0x40ad7920"/>
        <function-ref name="getRssi" scoped="" ref="0x40ad7a00"/>
        <function-ref name="getNetwork" scoped="" ref="0x40ad7ae0"/>
        <function-ref name="getPower" scoped="" ref="0x40ad7bc0"/>
        <function-ref name="getLqi" scoped="" ref="0x40ad7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40af3930" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40af3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40af3b08"/>
        <function-ref name="payloadLength" scoped="" ref="0x40af3be8"/>
        <function-ref name="getPayload" scoped="" ref="0x40af3cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40af3da8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40af3e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40ad3100" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40ad3c00"/>
        <function-ref name="clear" scoped="" ref="0x40ad2010"/>
        <function-ref name="isValid" scoped="" ref="0x40ad3850"/>
        <function-ref name="set" scoped="" ref="0x40ad23c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40ad44b0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40ad4688"/>
        <function-ref name="getHeader" scoped="" ref="0x40ad4768"/>
        <function-ref name="getMetadata" scoped="" ref="0x40ad4848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40af3308" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40af3308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40af34e0"/>
        <function-ref name="isSet" scoped="" ref="0x40af35c0"/>
        <function-ref name="cancel" scoped="" ref="0x40af36a0"/>
        <function-ref name="set" scoped="" ref="0x40af3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x40af2e80" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x40af2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40af14d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40af18e8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40af18e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40aef010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40ad2af8" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ad2af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40af46b8"/>
        <function-ref name="clear" scoped="" ref="0x40af4a68"/>
        <function-ref name="isValid" scoped="" ref="0x40af4308"/>
        <function-ref name="set" scoped="" ref="0x40af4e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ad7f10" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ad7f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ad4108"/>
        <function-ref name="noAck" scoped="" ref="0x40ad41e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ad42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b0c0a0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b0c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b0c6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40b0ca38" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b0ca38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b2b200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b2b6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b2b478"/>
        <function-ref name="overflow" scoped="" ref="0x40b2b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40b27318" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40b27318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b26e00"/>
        <function-ref name="fired" scoped="" ref="0x40b260b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b267c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b26568"/>
        <function-ref name="getdt" scoped="" ref="0x40b242c0"/>
        <function-ref name="gett0" scoped="" ref="0x40b24068"/>
        <function-ref name="isRunning" scoped="" ref="0x40b26310"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b27940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b26ae0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b27bc0"/>
        <function-ref name="stop" scoped="" ref="0x40b27e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b24620" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b24620"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b24c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b2ab48" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b2ab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b2ad20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40b1fec0" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40b1fec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b1d628"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b1db18"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b1d8a0"/>
        <function-ref name="overflow" scoped="" ref="0x40b1dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b23cc8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b23cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b23ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40b202b8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40b202b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b1f768"/>
        <function-ref name="fired" scoped="" ref="0x40b20f20"/>
        <function-ref name="startAt" scoped="" ref="0x40b1f428"/>
        <function-ref name="isRunning" scoped="" ref="0x40b1f1b0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b1f9e0"/>
        <function-ref name="start" scoped="" ref="0x40b20a08"/>
        <function-ref name="stop" scoped="" ref="0x40b20ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b53bc8" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b53bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b770a8"/>
        <function-ref name="fired" scoped="" ref="0x40b78858"/>
        <function-ref name="startAt" scoped="" ref="0x40b78d48"/>
        <function-ref name="isRunning" scoped="" ref="0x40b78ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b77320"/>
        <function-ref name="start" scoped="" ref="0x40b78340"/>
        <function-ref name="stop" scoped="" ref="0x40b785e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b53790" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b53790"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x403505d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x403505d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b53968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b77650" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b77650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b77da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b762c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b76048"/>
        <function-ref name="overflow" scoped="" ref="0x40b76538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x4125f010" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4125f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x4125f1e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4125f2c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4125f3a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4125f488"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4125f568"/>
        <function-ref name="setControl" scoped="" ref="0x4125f648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x412660e8" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x412660e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x412645c8"/>
        <function-ref name="fired" scoped="" ref="0x41266d50"/>
        <function-ref name="startAt" scoped="" ref="0x41264288"/>
        <function-ref name="isRunning" scoped="" ref="0x41264010"/>
        <function-ref name="getAlarm" scoped="" ref="0x41264840"/>
        <function-ref name="start" scoped="" ref="0x41266838"/>
        <function-ref name="stop" scoped="" ref="0x41266ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41267c88" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41267c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41267e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41264b70" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41264b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41263308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x412637f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41263580"/>
        <function-ref name="overflow" scoped="" ref="0x41263a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x4125d278" loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4125d278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x4125d450"/>
        <function-ref name="compareBusy" scoped="" ref="0x4125d530"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x4125d610"/>
        <function-ref name="countBusy" scoped="" ref="0x4125d6f0"/>
        <function-ref name="getAssr" scoped="" ref="0x4125d7d0"/>
        <function-ref name="setAssr" scoped="" ref="0x4125d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x4125f838" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4125f838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4125ed90"/>
        <function-ref name="fired" scoped="" ref="0x4125e3b0"/>
        <function-ref name="get" scoped="" ref="0x4125fe80"/>
        <function-ref name="reset" scoped="" ref="0x4125e628"/>
        <function-ref name="isOn" scoped="" ref="0x4125d048"/>
        <function-ref name="set" scoped="" ref="0x4125e110"/>
        <function-ref name="start" scoped="" ref="0x4125e8a0"/>
        <function-ref name="stop" scoped="" ref="0x4125eb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41263d60" loc="30:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41263d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x412617f0"/>
        <function-ref name="test" scoped="" ref="0x41261300"/>
        <function-ref name="get" scoped="" ref="0x412623e0"/>
        <function-ref name="setScale" scoped="" ref="0x41261a68"/>
        <function-ref name="getScale" scoped="" ref="0x41261d08"/>
        <function-ref name="reset" scoped="" ref="0x41262b70"/>
        <function-ref name="overflow" scoped="" ref="0x412628f8"/>
        <function-ref name="isOn" scoped="" ref="0x41261578"/>
        <function-ref name="set" scoped="" ref="0x41262658"/>
        <function-ref name="start" scoped="" ref="0x41262de8"/>
        <function-ref name="stop" scoped="" ref="0x41261088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40b829a8" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40b829a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b82b80"/>
        <function-ref name="runTask" scoped="" ref="0x40b82c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40b83010" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b83010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b824e0"/>
        <function-ref name="fired" scoped="" ref="0x40b83c78"/>
        <function-ref name="startAt" scoped="" ref="0x40b821a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40b83ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b82758"/>
        <function-ref name="start" scoped="" ref="0x40b83760"/>
        <function-ref name="stop" scoped="" ref="0x40b83a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b21c60" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b21c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b84790"/>
        <function-ref name="fired" scoped="" ref="0x40b85a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b84150"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b85ed0"/>
        <function-ref name="getdt" scoped="" ref="0x40b84c40"/>
        <function-ref name="gett0" scoped="" ref="0x40b849e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b85c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b852c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b84470"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b85548"/>
        <function-ref name="stop" scoped="" ref="0x40b857c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40ba3050" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40ba3050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ba3228"/>
        <function-ref name="runTask" scoped="" ref="0x40ba3308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40ba7e30" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40ba7e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ba4920"/>
        <function-ref name="fired" scoped="" ref="0x40ba6bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ba42e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ba4088"/>
        <function-ref name="getdt" scoped="" ref="0x40ba4dd0"/>
        <function-ref name="gett0" scoped="" ref="0x40ba4b78"/>
        <function-ref name="isRunning" scoped="" ref="0x40ba6e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ba6468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ba4600"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ba66e8"/>
        <function-ref name="stop" scoped="" ref="0x40ba6968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b7ea60" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b7ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ba7670"/>
        <function-ref name="fired" scoped="" ref="0x40ba9840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ba7010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ba9d10"/>
        <function-ref name="getdt" scoped="" ref="0x40ba7b40"/>
        <function-ref name="gett0" scoped="" ref="0x40ba78d8"/>
        <function-ref name="isRunning" scoped="" ref="0x40ba9aa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ba90b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ba7340"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ba9348"/>
        <function-ref name="stop" scoped="" ref="0x40ba95d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40ba2538" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40ba2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ba2b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40ba2ed0" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ba2ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ba1680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ba1b70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ba18f8"/>
        <function-ref name="overflow" scoped="" ref="0x40ba1de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40bc40a0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bc40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bbab88"/>
        <function-ref name="fired" scoped="" ref="0x40bc4e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40bba548"/>
        <function-ref name="isOneShot" scoped="" ref="0x40bba2f0"/>
        <function-ref name="getdt" scoped="" ref="0x40bb9048"/>
        <function-ref name="gett0" scoped="" ref="0x40bbade0"/>
        <function-ref name="isRunning" scoped="" ref="0x40bba098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40bc46c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40bba868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40bc4948"/>
        <function-ref name="stop" scoped="" ref="0x40bc4bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40bbe2a8" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40bbe2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bbcd90"/>
        <function-ref name="fired" scoped="" ref="0x40bbc048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40bbc750"/>
        <function-ref name="isOneShot" scoped="" ref="0x40bbc4f8"/>
        <function-ref name="getdt" scoped="" ref="0x40bbb268"/>
        <function-ref name="gett0" scoped="" ref="0x40bbb010"/>
        <function-ref name="isRunning" scoped="" ref="0x40bbc2a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40bbe8d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40bbca70"/>
        <function-ref name="startOneShot" scoped="" ref="0x40bbeb50"/>
        <function-ref name="stop" scoped="" ref="0x40bbedd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40bdaa00" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40bdaa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdacd8"/>
        <function-ref name="write" scoped="" ref="0x40bdadb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40bb8ef8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40bb8ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb60e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40bdb010" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40bdb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdb1e8"/>
        <function-ref name="write" scoped="" ref="0x40bdb2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40bd8880" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40bd8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd8a58"/>
        <function-ref name="write" scoped="" ref="0x40bd8b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40bd8cb8" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40bd8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd8e90"/>
        <function-ref name="write" scoped="" ref="0x40bd7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40bd1010" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40bd1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd11e8"/>
        <function-ref name="write" scoped="" ref="0x40bd12c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40bd4e38" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40bd4e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd2050"/>
        <function-ref name="write" scoped="" ref="0x40bd2130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40bb6910" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40bb6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb6ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40bd45c8" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40bd45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd47a0"/>
        <function-ref name="write" scoped="" ref="0x40bd4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40bdb880" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40bdb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdba58"/>
        <function-ref name="write" scoped="" ref="0x40bdbb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40bda190" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40bda190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bda368"/>
        <function-ref name="write" scoped="" ref="0x40bda448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40bd66e8" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40bd66e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd68c0"/>
        <function-ref name="write" scoped="" ref="0x40bd69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40bd7190" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40bd7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd7368"/>
        <function-ref name="write" scoped="" ref="0x40bd7448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40bb8330" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40bb8330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40bb8508"/>
        <function-ref name="abortRelease" scoped="" ref="0x40bb85e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40bb86c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40bb56c0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40bb56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb5898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40bb5a18" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40bb5a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb5c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40bb5df0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40bb5df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40bd4a00" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40bd4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd4bd8"/>
        <function-ref name="write" scoped="" ref="0x40bd4cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40bb5010" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40bb5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40bdbcb8" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40bdbcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdbe90"/>
        <function-ref name="write" scoped="" ref="0x40bda010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40bdb448" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40bdb448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bdb620"/>
        <function-ref name="write" scoped="" ref="0x40bdb700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40bb8ba0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40bb8ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb8d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40bd2b20" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40bd2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd2cf8"/>
        <function-ref name="write" scoped="" ref="0x40bd2dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40bd22b0" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40bd22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd2488"/>
        <function-ref name="write" scoped="" ref="0x40bd2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40bd6b20" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40bd6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd6cf8"/>
        <function-ref name="write" scoped="" ref="0x40bd6dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40bd4190" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40bd4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd4368"/>
        <function-ref name="write" scoped="" ref="0x40bd4448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40bd7a00" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40bd7a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd7bd8"/>
        <function-ref name="write" scoped="" ref="0x40bd7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40bd1448" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40bd1448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40bd1820"/>
        <function-ref name="writeDone" scoped="" ref="0x40bd1900"/>
        <function-ref name="write" scoped="" ref="0x40bd19e0"/>
        <function-ref name="beginRead" scoped="" ref="0x40bd1ac0"/>
        <function-ref name="readDone" scoped="" ref="0x40bd1ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40bb8848" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40bb8848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb8a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40bb4b98" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40bb4b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb4d70"/>
        <function-ref name="write" scoped="" ref="0x40bb4e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40bda5c8" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40bda5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bda7a0"/>
        <function-ref name="write" scoped="" ref="0x40bda880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40bd75c8" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40bd75c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd77a0"/>
        <function-ref name="write" scoped="" ref="0x40bd7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40bd8010" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40bd8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd81e8"/>
        <function-ref name="write" scoped="" ref="0x40bd82c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40bb6260" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40bb6260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb6438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40bd8448" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40bd8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd8620"/>
        <function-ref name="write" scoped="" ref="0x40bd8700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40adebb0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40adebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aded88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40adee68"/>
        <function-ref name="request" scoped="" ref="0x40bb8010"/>
        <function-ref name="granted" scoped="" ref="0x40bb80f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40bb81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40bb4190" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40bb4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb4368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40bb4840" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40bb4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb4a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40bd5cb8" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40bd5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd5e90"/>
        <function-ref name="write" scoped="" ref="0x40bd4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40bd5880" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40bd5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd5a58"/>
        <function-ref name="write" scoped="" ref="0x40bd5b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40bb5368" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40bb5368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb5540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40bd5448" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40bd5448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd5620"/>
        <function-ref name="write" scoped="" ref="0x40bd5700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40bd26e8" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40bd26e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd28c0"/>
        <function-ref name="write" scoped="" ref="0x40bd29a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40bd5010" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40bd5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd51e8"/>
        <function-ref name="write" scoped="" ref="0x40bd52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40bb65b8" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40bb65b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb6790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40bd62b0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40bd62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd6488"/>
        <function-ref name="write" scoped="" ref="0x40bd6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40bb6c68" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40bb6c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40bd7e38" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40bd7e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd6050"/>
        <function-ref name="write" scoped="" ref="0x40bd6130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40bb44e8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40bb44e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40bd1d20" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40bd1d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40bd1ef8"/>
        <function-ref name="writeDone" scoped="" ref="0x40bd0010"/>
        <function-ref name="write" scoped="" ref="0x40bd00f0"/>
        <function-ref name="beginRead" scoped="" ref="0x40bd01d0"/>
        <function-ref name="readDone" scoped="" ref="0x40bd02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40be1c40" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40be1c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40be1e18"/>
        <function-ref name="rand32" scoped="" ref="0x40be1ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40be1380" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40be1380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40be19a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40be4060" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40be4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40be4238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40bde6e0" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40bde6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40bde8b8"/>
        <function-ref name="rand32" scoped="" ref="0x40bde998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40be3dd0" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40be3dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bde448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40be38b0" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40be38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40be3a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40be6898" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40be6898"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40be6a70"/>
        <function-ref name="toIdle" scoped="" ref="0x40be6b50"/>
        <function-ref name="isState" scoped="" ref="0x40be6c30"/>
        <function-ref name="isIdle" scoped="" ref="0x40be6d10"/>
        <function-ref name="requestState" scoped="" ref="0x40be6df0"/>
        <function-ref name="forceState" scoped="" ref="0x40be6ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bfb010" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bfb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bfb1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40bfb2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bfb3a8"/>
        <function-ref name="cancel" scoped="" ref="0x40bfb488"/>
        <function-ref name="sendDone" scoped="" ref="0x40bfb568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bfe800" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bfe800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bfe9d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40bfeab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bfeb98"/>
        <function-ref name="cancel" scoped="" ref="0x40bfec78"/>
        <function-ref name="sendDone" scoped="" ref="0x40bfed58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bf89a0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bf89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bf8b78"/>
        <function-ref name="getPayload" scoped="" ref="0x40bf8c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bf8d38"/>
        <function-ref name="cancel" scoped="" ref="0x40bf8e18"/>
        <function-ref name="sendDone" scoped="" ref="0x40bf8ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bfbe98" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bfbe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bf80c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40bf81a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bf8280"/>
        <function-ref name="cancel" scoped="" ref="0x40bf8360"/>
        <function-ref name="sendDone" scoped="" ref="0x40bf8440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40bf7850" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40bf7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40bf7a28"/>
        <function-ref name="rand32" scoped="" ref="0x40bf7b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bf85b0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bf85b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bf8788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40bf7cf0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bf7cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40bf7ec8"/>
        <function-ref name="getHeader" scoped="" ref="0x40bf6010"/>
        <function-ref name="getMetadata" scoped="" ref="0x40bf60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x40bf7098" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40bf7098"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40bf7270"/>
        <function-ref name="toIdle" scoped="" ref="0x40bf7350"/>
        <function-ref name="isState" scoped="" ref="0x40bf7430"/>
        <function-ref name="isIdle" scoped="" ref="0x40bf7510"/>
        <function-ref name="requestState" scoped="" ref="0x40bf75f0"/>
        <function-ref name="forceState" scoped="" ref="0x40bf76d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40bfadc8" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40bfadc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40bf9010"/>
        <function-ref name="toIdle" scoped="" ref="0x40bf90f0"/>
        <function-ref name="isState" scoped="" ref="0x40bf91d0"/>
        <function-ref name="isIdle" scoped="" ref="0x40bf92b0"/>
        <function-ref name="requestState" scoped="" ref="0x40bf9390"/>
        <function-ref name="forceState" scoped="" ref="0x40bf9470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bfcd20" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bfcd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bfcef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bfc4d0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bfc4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bfc6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40bfc8f8" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40bfc8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bfcad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c0f5a8" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c0f5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c0f780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c0f180" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c0f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c0f358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c129a8" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c129a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c12b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c0f968" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c0f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40c0fb40"/>
        <function-ref name="getHeader" scoped="" ref="0x40c0fc20"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c0fd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40c12dd0" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40c12dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c0f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c207b8" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c207b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c20990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c20b68" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c20b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c20d40"/>
        <function-ref name="getPayload" scoped="" ref="0x40c20e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c20f00"/>
        <function-ref name="cancel" scoped="" ref="0x40c1f010"/>
        <function-ref name="sendDone" scoped="" ref="0x40c1f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c229d0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c229d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c22ba8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c22c88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c22d68"/>
        <function-ref name="cancel" scoped="" ref="0x40c22e48"/>
        <function-ref name="sendDone" scoped="" ref="0x40c22f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40c21490" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40c21490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c21668"/>
        <function-ref name="getPayload" scoped="" ref="0x40c21748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c21828"/>
        <function-ref name="cancel" scoped="" ref="0x40c21908"/>
        <function-ref name="sendDone" scoped="" ref="0x40c219e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c210c0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c210c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c21298"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c22308" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c22308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c224e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c225c0"/>
        <function-ref name="request" scoped="" ref="0x40c226a0"/>
        <function-ref name="granted" scoped="" ref="0x40c22780"/>
        <function-ref name="isOwner" scoped="" ref="0x40c22860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40c21c18" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40c21c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c21df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x40c20010" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x40c20010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c201e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c202c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c203a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c20488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c20568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c19cb0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c19cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c19e88"/>
        <function-ref name="getPayload" scoped="" ref="0x40c42010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c420f0"/>
        <function-ref name="cancel" scoped="" ref="0x40c421d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c422b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c424c0" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c424c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c42698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x40c51250" loc="180:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x40c51250"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c51428"/>
        <function-ref name="runTask" scoped="" ref="0x40c51508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40c42858" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40c42858"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40c42a30"/>
        <function-ref name="setNetwork" scoped="" ref="0x40c42b10"/>
        <function-ref name="getRssi" scoped="" ref="0x40c42bf0"/>
        <function-ref name="getNetwork" scoped="" ref="0x40c42cd0"/>
        <function-ref name="getPower" scoped="" ref="0x40c42db0"/>
        <function-ref name="getLqi" scoped="" ref="0x40c42e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40c1a9b8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40c1a9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c1ab90"/>
        <function-ref name="getPayload" scoped="" ref="0x40c1ac70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c1ad50"/>
        <function-ref name="cancel" scoped="" ref="0x40c1ae30"/>
        <function-ref name="sendDone" scoped="" ref="0x40c1af10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40c416c0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40c416c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40c41898"/>
        <function-ref name="isEmpty" scoped="" ref="0x40c41978"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40c41a58"/>
        <function-ref name="dequeue" scoped="" ref="0x40c41b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c41108" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c41108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40c412e0"/>
        <function-ref name="getHeader" scoped="" ref="0x40c413c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c414a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40c1a5e8" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40c1a5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c1a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c1c718" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c1c718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c1c8f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c1c9d0"/>
        <function-ref name="request" scoped="" ref="0x40c1cab0"/>
        <function-ref name="granted" scoped="" ref="0x40c1cb90"/>
        <function-ref name="isOwner" scoped="" ref="0x40c1cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40c1ce58" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40c1ce58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c1a050"/>
        <function-ref name="getPayload" scoped="" ref="0x40c1a130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c1a210"/>
        <function-ref name="cancel" scoped="" ref="0x40c1a2f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c1a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40c19160" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40c19160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c19338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x40c19540" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x40c19540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c19718"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c197f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c198d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c199b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c19a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c1d9f0" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c1d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c1dbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40c1dd28" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40c1dd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40c1df00"/>
        <function-ref name="isEmpty" scoped="" ref="0x40c6a010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40c6a0f0"/>
        <function-ref name="dequeue" scoped="" ref="0x40c6a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c64568" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c64568"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c64740"/>
        <function-ref name="stopDone" scoped="" ref="0x40c64820"/>
        <function-ref name="start" scoped="" ref="0x40c64900"/>
        <function-ref name="stop" scoped="" ref="0x40c649e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c624c8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c624c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c626a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c62780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c62860"/>
        <function-ref name="cancel" scoped="" ref="0x40c62940"/>
        <function-ref name="sendDone" scoped="" ref="0x40c62a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c62c30" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c62c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c62e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c67470" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c67470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c67648"/>
        <function-ref name="getPayload" scoped="" ref="0x40c67728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c67808"/>
        <function-ref name="cancel" scoped="" ref="0x40c678e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c679c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40c67f18" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40c67f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40c64108"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40c641e8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40c642c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40c643a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x40c64bd8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40c64bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c64db0"/>
        <function-ref name="toIdle" scoped="" ref="0x40c64e90"/>
        <function-ref name="isState" scoped="" ref="0x40c62010"/>
        <function-ref name="isIdle" scoped="" ref="0x40c620f0"/>
        <function-ref name="requestState" scoped="" ref="0x40c621d0"/>
        <function-ref name="forceState" scoped="" ref="0x40c622b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40c61098" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40c61098"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c61270"/>
        <function-ref name="stopDone" scoped="" ref="0x40c61350"/>
        <function-ref name="start" scoped="" ref="0x40c61430"/>
        <function-ref name="stop" scoped="" ref="0x40c61510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c67b50" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c67b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c67d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40c61cb0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40c61cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40c61e88"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40c5e010"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40c5e0f0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40c5e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40c5ad20" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40c5ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c5aef8"/>
        <function-ref name="toIdle" scoped="" ref="0x40c60010"/>
        <function-ref name="isState" scoped="" ref="0x40c600f0"/>
        <function-ref name="isIdle" scoped="" ref="0x40c601d0"/>
        <function-ref name="requestState" scoped="" ref="0x40c602b0"/>
        <function-ref name="forceState" scoped="" ref="0x40c60390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c585e8" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c585e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c587c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c588a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c58980"/>
        <function-ref name="cancel" scoped="" ref="0x40c58a60"/>
        <function-ref name="sendDone" scoped="" ref="0x40c58b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c66740" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c66740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c66918"/>
        <function-ref name="getPayload" scoped="" ref="0x40c669f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c66ad8"/>
        <function-ref name="cancel" scoped="" ref="0x40c66bb8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c66c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40c66e40" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40c66e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40c58050"/>
        <function-ref name="setRetries" scoped="" ref="0x40c58130"/>
        <function-ref name="getRetries" scoped="" ref="0x40c58210"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40c582f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40c583d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40c81a58" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c81a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c81c30"/>
        <function-ref name="noAck" scoped="" ref="0x40c81d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c81df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40c812a0" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40c812a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40c81478"/>
        <function-ref name="setRetries" scoped="" ref="0x40c81558"/>
        <function-ref name="getRetries" scoped="" ref="0x40c81638"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40c81718"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40c817f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c6e220" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c6e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c6e3f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c6fa88" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c6fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c6fc60"/>
        <function-ref name="getPayload" scoped="" ref="0x40c6fd40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c6fe20"/>
        <function-ref name="cancel" scoped="" ref="0x40c6ff00"/>
        <function-ref name="sendDone" scoped="" ref="0x40c6e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40c6d390" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40c6d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40c6d568"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40c6d648"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40c6d728"/>
        <function-ref name="syncDone" scoped="" ref="0x40c6d808"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40c6d8e8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40c6d9c8"/>
        <function-ref name="setChannel" scoped="" ref="0x40c6daa8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40c6db88"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40c6dc68"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40c6dd48"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40c6de28"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40c6df08"/>
        <function-ref name="sync" scoped="" ref="0x40c97010"/>
        <function-ref name="getChannel" scoped="" ref="0x40c97170"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40c97250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40c6f238" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40c6f238"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40c6f410"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40c6f4f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40c6f5d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40c6f6b0"/>
        <function-ref name="setCca" scoped="" ref="0x40c6f790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40c6f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40c70b88" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40c70b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40c70d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x40c97ba0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x40c97ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40c97d78"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40c97e58"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40c96010"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40c960f0"/>
        <function-ref name="setCca" scoped="" ref="0x40c961d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40c962b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c70190" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c70190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c70368"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c70448"/>
        <function-ref name="getPayload" scoped="" ref="0x40c70528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c70608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c706e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c73100" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c73100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c732d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c733b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c73498"/>
        <function-ref name="cancel" scoped="" ref="0x40c73578"/>
        <function-ref name="sendDone" scoped="" ref="0x40c73658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40c72178" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40c72178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c72350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40c6e5b8" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40c6e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40c6e790"/>
        <function-ref name="setNetwork" scoped="" ref="0x40c6e870"/>
        <function-ref name="getRssi" scoped="" ref="0x40c6e950"/>
        <function-ref name="getNetwork" scoped="" ref="0x40c6ea30"/>
        <function-ref name="getPower" scoped="" ref="0x40c6eb10"/>
        <function-ref name="getLqi" scoped="" ref="0x40c6ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40c97460" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40c97460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40c976b8"/>
        <function-ref name="changed" scoped="" ref="0x40c97798"/>
        <function-ref name="amGroup" scoped="" ref="0x40c97878"/>
        <function-ref name="setAddress" scoped="" ref="0x40c97958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c6edd8" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c6edd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40c6d010"/>
        <function-ref name="getHeader" scoped="" ref="0x40c6d0f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c6d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c73ac0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c73ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c73c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c96bb8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c96bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c96d90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c96e70"/>
        <function-ref name="led1On" scoped="" ref="0x40c95010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c950f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c951d0"/>
        <function-ref name="get" scoped="" ref="0x40c952b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40c95390"/>
        <function-ref name="led2Off" scoped="" ref="0x40c95710"/>
        <function-ref name="set" scoped="" ref="0x40c95470"/>
        <function-ref name="led0On" scoped="" ref="0x40c95550"/>
        <function-ref name="led2On" scoped="" ref="0x40c95630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c724e8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c724e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c726c0"/>
        <function-ref name="source" scoped="" ref="0x40c727a0"/>
        <function-ref name="address" scoped="" ref="0x40c72880"/>
        <function-ref name="destination" scoped="" ref="0x40c72960"/>
        <function-ref name="setSource" scoped="" ref="0x40c72a40"/>
        <function-ref name="setDestination" scoped="" ref="0x40c72b20"/>
        <function-ref name="type" scoped="" ref="0x40c72c00"/>
        <function-ref name="setType" scoped="" ref="0x40c72ce0"/>
        <function-ref name="isForMe" scoped="" ref="0x40c72dc0"/>
        <function-ref name="setGroup" scoped="" ref="0x40c72ea0"/>
        <function-ref name="localGroup" scoped="" ref="0x40c70010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x40c964f0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x40c964f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c966c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c967a8"/>
        <function-ref name="request" scoped="" ref="0x40c96888"/>
        <function-ref name="granted" scoped="" ref="0x40c96968"/>
        <function-ref name="isOwner" scoped="" ref="0x40c96a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40cca538" loc="41:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40cca538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40cca710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GlobalTime" ref="0x40cc81a8" loc="44:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GlobalTime" scoped="" ref="0x40cc81a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GlobalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getLocalTime" scoped="" ref="0x40cc87f0"/>
        <function-ref name="global2Local" scoped="" ref="0x40cc7010"/>
        <function-ref name="getGlobalTime" scoped="" ref="0x40cc8a68"/>
        <function-ref name="local2Global" scoped="" ref="0x40cc8d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncInfo" ref="0x40cc7318" loc="47:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncInfo" scoped="" ref="0x40cc7318"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getSyncPoint" scoped="" ref="0x40cc74f0"/>
        <function-ref name="getRootID" scoped="" ref="0x40cc75d0"/>
        <function-ref name="getSeqNum" scoped="" ref="0x40cc76b0"/>
        <function-ref name="getOffset" scoped="" ref="0x40cc7790"/>
        <function-ref name="getNumEntries" scoped="" ref="0x40cc7870"/>
        <function-ref name="getHeartBeats" scoped="" ref="0x40cc7950"/>
        <function-ref name="getSkew" scoped="" ref="0x40cc7a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cca8a0" loc="42:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cca8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ccaa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncMode" ref="0x40cc6010" loc="48:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncMode" scoped="" ref="0x40cc6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncMode"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cc61e8"/>
        <function-ref name="getMode" scoped="" ref="0x40cc62c8"/>
        <function-ref name="setMode" scoped="" ref="0x40cc63a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncNotify" ref="0x40cee1d0" loc="49:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncNotify" scoped="" ref="0x40cee1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncNotify"/>
      </instance>
      <interface-functions>
        <function-ref name="msg_received" scoped="" ref="0x40cee3a8"/>
        <function-ref name="msg_sent" scoped="" ref="0x40cee488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40ccac40" loc="43:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40ccac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ccae18"/>
        <function-ref name="stop" scoped="" ref="0x40ccaef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40d3f260" loc="52:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40d3f260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40d3f438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GlobalTime" ref="0x40d41010" loc="43:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GlobalTime" scoped="" ref="0x40d41010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GlobalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getLocalTime" scoped="" ref="0x40d41658"/>
        <function-ref name="global2Local" scoped="" ref="0x40d41e50"/>
        <function-ref name="getGlobalTime" scoped="" ref="0x40d418d0"/>
        <function-ref name="local2Global" scoped="" ref="0x40d41b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40d37890" loc="60:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40d37890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d37ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40d3f598" loc="53:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40d3f598"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d3f770"/>
        <function-ref name="stopDone" scoped="" ref="0x40d3f850"/>
        <function-ref name="start" scoped="" ref="0x40d3f930"/>
        <function-ref name="stop" scoped="" ref="0x40d3fa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x40d3fc90" loc="54:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d3fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d3d3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d3c0b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d3de30"/>
        <function-ref name="cancel" scoped="" ref="0x40d3d850"/>
        <function-ref name="sendDone" scoped="" ref="0x40d3daf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40d399f0" loc="57:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40d399f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40d39bc8"/>
        <function-ref name="rand32" scoped="" ref="0x40d39ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncInfo" ref="0x40d400e8" loc="46:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncInfo" scoped="" ref="0x40d400e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getSyncPoint" scoped="" ref="0x40d402c0"/>
        <function-ref name="getRootID" scoped="" ref="0x40d403a0"/>
        <function-ref name="getSeqNum" scoped="" ref="0x40d40480"/>
        <function-ref name="getOffset" scoped="" ref="0x40d40560"/>
        <function-ref name="getNumEntries" scoped="" ref="0x40d40640"/>
        <function-ref name="getHeartBeats" scoped="" ref="0x40d40720"/>
        <function-ref name="getSkew" scoped="" ref="0x40d40800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d42798" loc="41:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d42798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d42970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40d3c3d0" loc="55:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d3c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d3c5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncMode" ref="0x40d40940" loc="47:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncMode" scoped="" ref="0x40d40940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncMode"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d40b18"/>
        <function-ref name="getMode" scoped="" ref="0x40d40bf8"/>
        <function-ref name="setMode" scoped="" ref="0x40d40cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendMsg" ref="0x40d36148" loc="349:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendMsg" scoped="" ref="0x40d36148"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d36320"/>
        <function-ref name="runTask" scoped="" ref="0x40d36400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="processMsg" ref="0x40d36580" loc="292:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="processMsg" scoped="" ref="0x40d36580"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d36758"/>
        <function-ref name="runTask" scoped="" ref="0x40d36838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d39de8" loc="58:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d39de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d38050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d38130"/>
        <function-ref name="led1On" scoped="" ref="0x40d38210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d382f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d383d0"/>
        <function-ref name="get" scoped="" ref="0x40d384b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40d38590"/>
        <function-ref name="led2On" scoped="" ref="0x40d38910"/>
        <function-ref name="set" scoped="" ref="0x40d38750"/>
        <function-ref name="led2Off" scoped="" ref="0x40d38670"/>
        <function-ref name="led0On" scoped="" ref="0x40d38830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncNotify" ref="0x40d40e18" loc="48:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncNotify" scoped="" ref="0x40d40e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncNotify"/>
      </instance>
      <interface-functions>
        <function-ref name="msg_received" scoped="" ref="0x40d3f010"/>
        <function-ref name="msg_sent" scoped="" ref="0x40d3f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d42ab0" loc="42:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d42ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d42c88"/>
        <function-ref name="stop" scoped="" ref="0x40d42d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40d3c778" loc="56:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d3c778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d39330"/>
        <function-ref name="fired" scoped="" ref="0x40d3b520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d3bc28"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d3b9d0"/>
        <function-ref name="getdt" scoped="" ref="0x40d397e0"/>
        <function-ref name="gett0" scoped="" ref="0x40d39588"/>
        <function-ref name="isRunning" scoped="" ref="0x40d3b778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d3cda0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d39010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d3b048"/>
        <function-ref name="stop" scoped="" ref="0x40d3b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncPacket" ref="0x40d38b70" loc="59:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket" scoped="" ref="0x40d38b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x40d372e8"/>
        <function-ref name="eventTime" scoped="" ref="0x40d37588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d5e1f8" loc="56:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d5e1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d5e3d0"/>
        <function-ref name="stopDone" scoped="" ref="0x40d5e4b0"/>
        <function-ref name="start" scoped="" ref="0x40d5e590"/>
        <function-ref name="stop" scoped="" ref="0x40d5e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x40d50650" loc="71:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x40d50650"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x40d50e00"/>
        <function-ref name="eventTime" scoped="" ref="0x40d4f0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d5d4e8" loc="59:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d5d4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d5d6c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d5d7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d5d880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d5d960"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d5da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x40d53bb8" loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x40d53bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d522f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d50010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d52d58"/>
        <function-ref name="cancel" scoped="" ref="0x40d52778"/>
        <function-ref name="sendDone" scoped="" ref="0x40d52a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40d5d190" loc="58:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40d5d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d5d368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40d5ceb8" loc="62:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40d5ceb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40d5b0c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40d5b1a0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40d5b280"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40d5b360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40d5b7e0" loc="64:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d5b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d5a3c0"/>
        <function-ref name="clear" scoped="" ref="0x40d5a770"/>
        <function-ref name="isValid" scoped="" ref="0x40d5a010"/>
        <function-ref name="set" scoped="" ref="0x40d5ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d5ead8" loc="57:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d5ead8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d5ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40d5c930" loc="61:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d5c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d5cb08"/>
        <function-ref name="noAck" scoped="" ref="0x40d5cbe8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d5ccc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x40d57f00" loc="67:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x40d57f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d56660"/>
        <function-ref name="getPayload" scoped="" ref="0x40d55330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d550d8"/>
        <function-ref name="cancel" scoped="" ref="0x40d56ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d56d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d5dbd8" loc="60:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d5dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d5ddb0"/>
        <function-ref name="source" scoped="" ref="0x40d5de90"/>
        <function-ref name="address" scoped="" ref="0x40d5c010"/>
        <function-ref name="destination" scoped="" ref="0x40d5c0f0"/>
        <function-ref name="setSource" scoped="" ref="0x40d5c1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40d5c2b0"/>
        <function-ref name="type" scoped="" ref="0x40d5c390"/>
        <function-ref name="setType" scoped="" ref="0x40d5c470"/>
        <function-ref name="isForMe" scoped="" ref="0x40d5c550"/>
        <function-ref name="setGroup" scoped="" ref="0x40d5c630"/>
        <function-ref name="localGroup" scoped="" ref="0x40d5c710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x40d55970" loc="68:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x40d55970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x40d530b8"/>
        <function-ref name="eventTime" scoped="" ref="0x40d53358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40d59288" loc="65:/opt/tinyos-2.1.2/tos/platforms/micaz/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d59288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d59d88"/>
        <function-ref name="clear" scoped="" ref="0x40d57150"/>
        <function-ref name="isValid" scoped="" ref="0x40d599d8"/>
        <function-ref name="set" scoped="" ref="0x40d57500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d4fb20" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d4fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d4fcf8"/>
        <function-ref name="stopDone" scoped="" ref="0x40d4fdd8"/>
        <function-ref name="start" scoped="" ref="0x40d4feb8"/>
        <function-ref name="stop" scoped="" ref="0x40d4c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x40d71be8" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x40d71be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x40d6f360"/>
        <function-ref name="eventTime" scoped="" ref="0x40d6f600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d4ce68" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d4ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d78050"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d78130"/>
        <function-ref name="getPayload" scoped="" ref="0x40d78210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d782f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d783d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40d4cb10" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40d4cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d4cce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40d777c0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40d777c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40d77998"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40d77a78"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40d77b58"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40d77c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x40d72100" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x40d72100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d72830"/>
        <function-ref name="getPayload" scoped="" ref="0x40d715a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d71350"/>
        <function-ref name="cancel" scoped="" ref="0x40d72cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d71010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d4c478" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d4c478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d4c650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40d77238" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d77238"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d77410"/>
        <function-ref name="noAck" scoped="" ref="0x40d774f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d775d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x40d763d0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x40d763d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d76b00"/>
        <function-ref name="getPayload" scoped="" ref="0x40d75848"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d755f0"/>
        <function-ref name="cancel" scoped="" ref="0x40d75010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d752b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d78568" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d78568"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d78740"/>
        <function-ref name="source" scoped="" ref="0x40d78820"/>
        <function-ref name="address" scoped="" ref="0x40d78900"/>
        <function-ref name="destination" scoped="" ref="0x40d789e0"/>
        <function-ref name="setSource" scoped="" ref="0x40d78ac0"/>
        <function-ref name="setDestination" scoped="" ref="0x40d78ba0"/>
        <function-ref name="type" scoped="" ref="0x40d78c80"/>
        <function-ref name="setType" scoped="" ref="0x40d78d60"/>
        <function-ref name="isForMe" scoped="" ref="0x40d78e40"/>
        <function-ref name="setGroup" scoped="" ref="0x40d78f20"/>
        <function-ref name="localGroup" scoped="" ref="0x40d77018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x40d75e88" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x40d75e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x40d735e0"/>
        <function-ref name="eventTime" scoped="" ref="0x40d73880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d8e4c8" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d8e4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d8e6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d638e0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d638e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d63ab8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d63b98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d63c78"/>
        <function-ref name="cancel" scoped="" ref="0x40d63d58"/>
        <function-ref name="sendDone" scoped="" ref="0x40d63e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x40d65e80" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x40d65e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x40d645c0"/>
        <function-ref name="eventTime" scoped="" ref="0x40d64860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x40d69178" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x40d69178"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d698a8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d685a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d68350"/>
        <function-ref name="cancel" scoped="" ref="0x40d69d28"/>
        <function-ref name="sendDone" scoped="" ref="0x40d68010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d68900" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d68900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d68ad8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d68bb8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d68c98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d68d78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d68e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40d634d0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40d634d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d636a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d8f090" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d8f090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d8f268"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d8f348"/>
        <function-ref name="getPayload" scoped="" ref="0x40d8f428"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d8f508"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d8f5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp32khz" ref="0x40d8d010" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d8d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d8db10"/>
        <function-ref name="clear" scoped="" ref="0x40d8dec0"/>
        <function-ref name="isValid" scoped="" ref="0x40d8d760"/>
        <function-ref name="set" scoped="" ref="0x40d8c2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x40d8f810" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x40d8f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d8f9e8"/>
        <function-ref name="source" scoped="" ref="0x40d8fac8"/>
        <function-ref name="address" scoped="" ref="0x40d8fba8"/>
        <function-ref name="destination" scoped="" ref="0x40d8fc88"/>
        <function-ref name="setSource" scoped="" ref="0x40d8fd68"/>
        <function-ref name="setDestination" scoped="" ref="0x40d8fe48"/>
        <function-ref name="type" scoped="" ref="0x40d8ff28"/>
        <function-ref name="setType" scoped="" ref="0x40d8e018"/>
        <function-ref name="isForMe" scoped="" ref="0x40d8e0f8"/>
        <function-ref name="setGroup" scoped="" ref="0x40d8e1d8"/>
        <function-ref name="localGroup" scoped="" ref="0x40d8e2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d64de0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d64de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d63010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40d89218" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40d89218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d893f0"/>
        <function-ref name="isSet" scoped="" ref="0x40d894d0"/>
        <function-ref name="cancel" scoped="" ref="0x40d895b0"/>
        <function-ref name="set" scoped="" ref="0x40d89690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x40d899b0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x40d899b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d88010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d88c88" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d88c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d88e60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d87010"/>
        <function-ref name="led1On" scoped="" ref="0x40d870f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d871d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d872b0"/>
        <function-ref name="get" scoped="" ref="0x40d87390"/>
        <function-ref name="led1Off" scoped="" ref="0x40d87470"/>
        <function-ref name="led2Off" scoped="" ref="0x40d877f0"/>
        <function-ref name="set" scoped="" ref="0x40d87550"/>
        <function-ref name="led0On" scoped="" ref="0x40d87630"/>
        <function-ref name="led2On" scoped="" ref="0x40d87710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40d88400" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40d88400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d88a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x40d6c448" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x40d6c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d6cb78"/>
        <function-ref name="getPayload" scoped="" ref="0x40d6b848"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d6b5f0"/>
        <function-ref name="cancel" scoped="" ref="0x40d6b010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d6b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d66010" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d66010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d661e8"/>
        <function-ref name="source" scoped="" ref="0x40d662c8"/>
        <function-ref name="address" scoped="" ref="0x40d663a8"/>
        <function-ref name="destination" scoped="" ref="0x40d66488"/>
        <function-ref name="setSource" scoped="" ref="0x40d66568"/>
        <function-ref name="setDestination" scoped="" ref="0x40d66648"/>
        <function-ref name="type" scoped="" ref="0x40d66728"/>
        <function-ref name="setType" scoped="" ref="0x40d66808"/>
        <function-ref name="isForMe" scoped="" ref="0x40d668e8"/>
        <function-ref name="setGroup" scoped="" ref="0x40d669c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40d66aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x40d66f10" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x40d66f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x40d65660"/>
        <function-ref name="eventTime" scoped="" ref="0x40d65900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x40d8e8a0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x40d8e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d8eaf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0x40d8c9d8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d8c9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d8b5b0"/>
        <function-ref name="clear" scoped="" ref="0x40d8b960"/>
        <function-ref name="isValid" scoped="" ref="0x40d8b200"/>
        <function-ref name="set" scoped="" ref="0x40d8bd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40dabbb8" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40dabbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dabd90"/>
        <function-ref name="getPayload" scoped="" ref="0x40dabe70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40daa010"/>
        <function-ref name="cancel" scoped="" ref="0x40daa0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40daa1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40daa310" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40daa310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40daa4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40daa5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40daa6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40daa788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40daa868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40daa9a8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40daa9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40daab80"/>
        <function-ref name="source" scoped="" ref="0x40daac60"/>
        <function-ref name="address" scoped="" ref="0x40daad40"/>
        <function-ref name="destination" scoped="" ref="0x40daae20"/>
        <function-ref name="setSource" scoped="" ref="0x40daaf00"/>
        <function-ref name="setDestination" scoped="" ref="0x40df0010"/>
        <function-ref name="type" scoped="" ref="0x40df00f0"/>
        <function-ref name="setType" scoped="" ref="0x40df01d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40df02b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40df0390"/>
        <function-ref name="localGroup" scoped="" ref="0x40df0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40df05d0" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40df05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40df07a8"/>
        <function-ref name="noAck" scoped="" ref="0x40df0888"/>
        <function-ref name="wasAcked" scoped="" ref="0x40df0968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41328cc0" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41328cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41328e98"/>
        <function-ref name="getPayload" scoped="" ref="0x41324010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413240f0"/>
        <function-ref name="cancel" scoped="" ref="0x413241d0"/>
        <function-ref name="sendDone" scoped="" ref="0x413242b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x413243f0" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x413243f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413245c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x413246a8"/>
        <function-ref name="getPayload" scoped="" ref="0x41324788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41324868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41324948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41324a88" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41324a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41324c60"/>
        <function-ref name="source" scoped="" ref="0x41324d40"/>
        <function-ref name="address" scoped="" ref="0x41324e20"/>
        <function-ref name="destination" scoped="" ref="0x41324f00"/>
        <function-ref name="setSource" scoped="" ref="0x41323010"/>
        <function-ref name="setDestination" scoped="" ref="0x413230f0"/>
        <function-ref name="type" scoped="" ref="0x413231d0"/>
        <function-ref name="setType" scoped="" ref="0x413232b0"/>
        <function-ref name="isForMe" scoped="" ref="0x41323390"/>
        <function-ref name="setGroup" scoped="" ref="0x41323470"/>
        <function-ref name="localGroup" scoped="" ref="0x41323550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x413236b0" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x413236b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41323888"/>
        <function-ref name="noAck" scoped="" ref="0x41323968"/>
        <function-ref name="wasAcked" scoped="" ref="0x41323a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4131e3d0" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4131e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4131e5a8"/>
        <function-ref name="getPayload" scoped="" ref="0x4131e688"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4131e768"/>
        <function-ref name="cancel" scoped="" ref="0x4131e848"/>
        <function-ref name="sendDone" scoped="" ref="0x4131e928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4131ea98" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4131ea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4131ec70"/>
        <function-ref name="getPayload" scoped="" ref="0x4131ed50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4131ee30"/>
        <function-ref name="cancel" scoped="" ref="0x4131ef10"/>
        <function-ref name="sendDone" scoped="" ref="0x4131d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4131d150" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4131d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4131d328"/>
        <function-ref name="source" scoped="" ref="0x4131d408"/>
        <function-ref name="address" scoped="" ref="0x4131d4e8"/>
        <function-ref name="destination" scoped="" ref="0x4131d5c8"/>
        <function-ref name="setSource" scoped="" ref="0x4131d6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x4131d788"/>
        <function-ref name="type" scoped="" ref="0x4131d868"/>
        <function-ref name="setType" scoped="" ref="0x4131d948"/>
        <function-ref name="isForMe" scoped="" ref="0x4131da28"/>
        <function-ref name="setGroup" scoped="" ref="0x4131db08"/>
        <function-ref name="localGroup" scoped="" ref="0x4131dbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40dc6c08" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40dc6c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dc6de0"/>
        <function-ref name="getPayload" scoped="" ref="0x40dc6ec0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dc3010"/>
        <function-ref name="cancel" scoped="" ref="0x40dc30f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40dc31d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40df93d8" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40df93d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40df95c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40df96a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40df9780"/>
        <function-ref name="cancel" scoped="" ref="0x40df9860"/>
        <function-ref name="sendDone" scoped="" ref="0x40df9940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40dc1be0" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40dc1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dc1dc8"/>
        <function-ref name="getPayload" scoped="" ref="0x40dc1ea8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40df9010"/>
        <function-ref name="cancel" scoped="" ref="0x40df90f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40df91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40df8690" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40df8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40df8868"/>
        <function-ref name="payloadLength" scoped="" ref="0x40df8948"/>
        <function-ref name="getPayload" scoped="" ref="0x40df8a28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40df8b08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40df8be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40df8d68" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40df8d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40df7010"/>
        <function-ref name="runTask" scoped="" ref="0x40df70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40df7270" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40df7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40df7448"/>
        <function-ref name="runTask" scoped="" ref="0x40df7528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40df9a80" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40df9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40df9c58"/>
        <function-ref name="source" scoped="" ref="0x40df9d38"/>
        <function-ref name="address" scoped="" ref="0x40df9e18"/>
        <function-ref name="destination" scoped="" ref="0x40df9ef8"/>
        <function-ref name="setSource" scoped="" ref="0x40df8010"/>
        <function-ref name="setDestination" scoped="" ref="0x40df80f0"/>
        <function-ref name="type" scoped="" ref="0x40df81d0"/>
        <function-ref name="setType" scoped="" ref="0x40df82b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40df8390"/>
        <function-ref name="setGroup" scoped="" ref="0x40df8470"/>
        <function-ref name="localGroup" scoped="" ref="0x40df8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40e1e120" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40e1e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e1e768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40e1eab8" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e1eab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3d40"/>
            <typename><typedef-ref name="T32khz" ref="0x403a3f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e1c228"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e1c718"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e1c4a0"/>
        <function-ref name="overflow" scoped="" ref="0x40e1c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40e1b5d0" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40e1b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e1bc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e0e758" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="TimeSyncC.TimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e0e758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e0b248"/>
        <function-ref name="fired" scoped="" ref="0x40e0d4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e0dbf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e0d998"/>
        <function-ref name="getdt" scoped="" ref="0x40e0b6f8"/>
        <function-ref name="gett0" scoped="" ref="0x40e0b4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40e0d740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e0ed80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e0df10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e0d010"/>
        <function-ref name="stop" scoped="" ref="0x40e0d290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e0a8b8" loc="46:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e0a8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e0aa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40e0ac20" loc="47:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e0ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e0adf8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e0aed8"/>
        <function-ref name="led1On" scoped="" ref="0x40e39010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e390f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e391d0"/>
        <function-ref name="get" scoped="" ref="0x40e392b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40e39390"/>
        <function-ref name="led2Off" scoped="" ref="0x40e39710"/>
        <function-ref name="set" scoped="" ref="0x40e39470"/>
        <function-ref name="led0On" scoped="" ref="0x40e39550"/>
        <function-ref name="led2On" scoped="" ref="0x40e39630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e08e10" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e08e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e2e900"/>
        <function-ref name="fired" scoped="" ref="0x40e2fba0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e2e2c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e2e068"/>
        <function-ref name="getdt" scoped="" ref="0x40e2edb0"/>
        <function-ref name="gett0" scoped="" ref="0x40e2eb58"/>
        <function-ref name="isRunning" scoped="" ref="0x40e2fdf8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e2f448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e2e5e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e2f6c8"/>
        <function-ref name="stop" scoped="" ref="0x40e2f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e2dbc0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e2dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e2a6d8"/>
        <function-ref name="fired" scoped="" ref="0x40e2b970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e2a098"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e2be20"/>
        <function-ref name="getdt" scoped="" ref="0x40e2ab88"/>
        <function-ref name="gett0" scoped="" ref="0x40e2a930"/>
        <function-ref name="isRunning" scoped="" ref="0x40e2bbc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e2b218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e2a3b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e2b498"/>
        <function-ref name="stop" scoped="" ref="0x40e2b718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e29960" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.Timer_one"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e29960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e264c8"/>
        <function-ref name="fired" scoped="" ref="0x40e28768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e28e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e28c18"/>
        <function-ref name="getdt" scoped="" ref="0x40e26978"/>
        <function-ref name="gett0" scoped="" ref="0x40e26720"/>
        <function-ref name="isRunning" scoped="" ref="0x40e289c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e28010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e261a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e28290"/>
        <function-ref name="stop" scoped="" ref="0x40e28510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40e24680" loc="17:DemoSensorC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40e24680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e24ca8"/>
        <function-ref name="readDone" scoped="" ref="0x40e24f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41335610" loc="20:PhotoC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41335610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41335c38"/>
        <function-ref name="readDone" scoped="" ref="0x41335e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40e51e48" loc="39:ArbitratedPhotoDeviceP.nc">
      <component-ref qname="ArbitratedPhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40e51e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e4e4b8"/>
        <function-ref name="readDone" scoped="" ref="0x40e4e710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40e4bc58" loc="42:PhotoImplP.nc">
      <component-ref qname="PhotoImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40e4bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e492c8"/>
        <function-ref name="readDone" scoped="" ref="0x40e49520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e4b200" loc="41:PhotoImplP.nc">
      <component-ref qname="PhotoImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e4b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e4b3d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e4b4b8"/>
        <function-ref name="request" scoped="" ref="0x40e4b598"/>
        <function-ref name="granted" scoped="" ref="0x40e4b678"/>
        <function-ref name="isOwner" scoped="" ref="0x40e4b758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnablePin" ref="0x40f8c8b8" loc="44:SharedAnalogDeviceC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnablePin" scoped="" ref="0x40f8c8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f8ca90"/>
        <function-ref name="isInput" scoped="" ref="0x40f8cb70"/>
        <function-ref name="toggle" scoped="" ref="0x40f8cc50"/>
        <function-ref name="isOutput" scoped="" ref="0x40f8cd30"/>
        <function-ref name="get" scoped="" ref="0x40f8ce10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f8cef0"/>
        <function-ref name="set" scoped="" ref="0x40f8a010"/>
        <function-ref name="clr" scoped="" ref="0x40f8a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f8d7c0" loc="40:SharedAnalogDeviceC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f8d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f8ddf8"/>
        <function-ref name="readDone" scoped="" ref="0x40f8c088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f8d010" loc="39:SharedAnalogDeviceC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f8d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f8d1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f8d2d8"/>
        <function-ref name="request" scoped="" ref="0x40f8d3b8"/>
        <function-ref name="granted" scoped="" ref="0x40f8d498"/>
        <function-ref name="isOwner" scoped="" ref="0x40f8d578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfig" ref="0x40f8c3c0" loc="43:SharedAnalogDeviceC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcConfig" scoped="" ref="0x40f8c3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40f8c598"/>
        <function-ref name="getChannel" scoped="" ref="0x40f8c678"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40f8c758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4132f010" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4132f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4132f1f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4132f2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4132e010" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4132e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4132e1f8"/>
        <function-ref name="configure" scoped="" ref="0x4132e2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4132f418" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4132f418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4132f5f0"/>
        <function-ref name="requested" scoped="" ref="0x4132f6d0"/>
        <function-ref name="granted" scoped="" ref="0x4132f7b0"/>
        <function-ref name="isOwner" scoped="" ref="0x4132f890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4132f970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41331838" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41331838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41331a20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41331b00"/>
        <function-ref name="request" scoped="" ref="0x41331be0"/>
        <function-ref name="granted" scoped="" ref="0x41331cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x41331da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4132fab0" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4132fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4132fc88"/>
        <function-ref name="userId" scoped="" ref="0x4132fd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4135d3c8" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4135d3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4135d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x4135d700" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x4135d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4135d8d8"/>
        <function-ref name="isEmpty" scoped="" ref="0x4135d9b8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4135da98"/>
        <function-ref name="dequeue" scoped="" ref="0x4135db78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4135b010" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4135b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4135b1f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4135b2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4135a010" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4135a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4135a1f8"/>
        <function-ref name="configure" scoped="" ref="0x4135a2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4135a438" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4135a438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4135a610"/>
        <function-ref name="isEmpty" scoped="" ref="0x4135a6f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4135a7d0"/>
        <function-ref name="dequeue" scoped="" ref="0x4135a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4135b418" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4135b418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4135b5f0"/>
        <function-ref name="requested" scoped="" ref="0x4135b6d0"/>
        <function-ref name="granted" scoped="" ref="0x4135b7b0"/>
        <function-ref name="isOwner" scoped="" ref="0x4135b890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4135b970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4135a9f0" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4135a9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4135abc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4135aca8"/>
        <function-ref name="led1On" scoped="" ref="0x4135ad88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4135ae68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41359010"/>
        <function-ref name="get" scoped="" ref="0x413590f0"/>
        <function-ref name="led1Off" scoped="" ref="0x413591d0"/>
        <function-ref name="led0On" scoped="" ref="0x41359550"/>
        <function-ref name="set" scoped="" ref="0x41359390"/>
        <function-ref name="led2On" scoped="" ref="0x413592b0"/>
        <function-ref name="led2Off" scoped="" ref="0x41359470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4135c860" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4135c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4135ca48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4135cb28"/>
        <function-ref name="request" scoped="" ref="0x4135cc08"/>
        <function-ref name="granted" scoped="" ref="0x4135cce8"/>
        <function-ref name="isOwner" scoped="" ref="0x4135cdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4135bab0" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4135bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4135bc88"/>
        <function-ref name="userId" scoped="" ref="0x4135bd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x413596d0" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x413596d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413598a8"/>
        <function-ref name="runTask" scoped="" ref="0x41359988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x4132d030" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4132d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4132d208"/>
        <function-ref name="stopDone" scoped="" ref="0x4132d2e8"/>
        <function-ref name="start" scoped="" ref="0x4132d3c8"/>
        <function-ref name="stop" scoped="" ref="0x4132d4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x4132d5e8" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x4132d5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x4132d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x4132d900" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4132d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4132dad8"/>
        <function-ref name="requested" scoped="" ref="0x4132dbb8"/>
        <function-ref name="granted" scoped="" ref="0x4132dc98"/>
        <function-ref name="isOwner" scoped="" ref="0x4132dd78"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4132de58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x4132c010" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4132c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4132c1e8"/>
        <function-ref name="userId" scoped="" ref="0x4132c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x41384660" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41384660"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41384838"/>
        <function-ref name="stopDone" scoped="" ref="0x41384918"/>
        <function-ref name="start" scoped="" ref="0x413849f8"/>
        <function-ref name="stop" scoped="" ref="0x41384ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41384c18" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41384c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41384df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x41382ae0" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x41382ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41382cb8"/>
        <function-ref name="runTask" scoped="" ref="0x41382d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41382010" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41382010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413821e8"/>
        <function-ref name="requested" scoped="" ref="0x413822c8"/>
        <function-ref name="granted" scoped="" ref="0x413823a8"/>
        <function-ref name="isOwner" scoped="" ref="0x41382488"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41382568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x41382f18" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x41382f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41381108"/>
        <function-ref name="runTask" scoped="" ref="0x413811e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x41384268" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41384268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41384440"/>
        <function-ref name="stop" scoped="" ref="0x41384520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x413826a8" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x413826a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41382880"/>
        <function-ref name="userId" scoped="" ref="0x41382960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4132b030" loc="39:SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4132b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4132b208"/>
        <function-ref name="stopDone" scoped="" ref="0x4132b2e8"/>
        <function-ref name="start" scoped="" ref="0x4132b3c8"/>
        <function-ref name="stop" scoped="" ref="0x4132b4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnablePin" ref="0x4136dc50" loc="45:SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnablePin" scoped="" ref="0x4136dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4136de28"/>
        <function-ref name="isInput" scoped="" ref="0x4136df08"/>
        <function-ref name="toggle" scoped="" ref="0x4136c010"/>
        <function-ref name="isOutput" scoped="" ref="0x4136c0f0"/>
        <function-ref name="get" scoped="" ref="0x4136c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4136c2b0"/>
        <function-ref name="set" scoped="" ref="0x4136c390"/>
        <function-ref name="clr" scoped="" ref="0x4136c470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AnalogDeviceResource" ref="0x4132a348" loc="43:SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AnalogDeviceResource" scoped="" ref="0x4132a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4132a520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4132a600"/>
        <function-ref name="request" scoped="" ref="0x4132a6e0"/>
        <function-ref name="granted" scoped="" ref="0x4132a7c0"/>
        <function-ref name="isOwner" scoped="" ref="0x4132a8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDoneTask" ref="0x4136b250" loc="108:SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readDoneTask" scoped="" ref="0x4136b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4136b428"/>
        <function-ref name="runTask" scoped="" ref="0x4136b508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4132b6f0" loc="40:SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4132b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4132bd28"/>
        <function-ref name="readDone" scoped="" ref="0x4132a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x4136b688" loc="77:SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x4136b688"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4136b860"/>
        <function-ref name="runTask" scoped="" ref="0x4136b940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x4136c660" loc="46:SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x4136c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4136cca8"/>
        <function-ref name="readDone" scoped="" ref="0x4136cf20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4132aa70" loc="44:SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4132aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4136d570"/>
        <function-ref name="fired" scoped="" ref="0x4136e810"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4136ef18"/>
        <function-ref name="isOneShot" scoped="" ref="0x4136ecc0"/>
        <function-ref name="getdt" scoped="" ref="0x4136da20"/>
        <function-ref name="gett0" scoped="" ref="0x4136d7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4136ea68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4136e0b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4136d250"/>
        <function-ref name="startOneShot" scoped="" ref="0x4136e338"/>
        <function-ref name="stop" scoped="" ref="0x4136e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41367380" loc="28:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41367380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41367558"/>
        <function-ref name="configure" scoped="" ref="0x41367638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x413692c8" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x413692c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41369910"/>
        <function-ref name="readDone" scoped="" ref="0x41369b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x41369e90" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41369e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x41367080"/>
        <function-ref name="getChannel" scoped="" ref="0x41367160"/>
        <function-ref name="getPrescaler" scoped="" ref="0x41367240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4136ab88" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4136ab88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4136ad60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4136ae40"/>
        <function-ref name="request" scoped="" ref="0x4136af20"/>
        <function-ref name="granted" scoped="" ref="0x41369018"/>
        <function-ref name="isOwner" scoped="" ref="0x413690f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40eb9b68" loc="18:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40eb9b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40eea1e0"/>
        <function-ref name="readDone" scoped="" ref="0x40eea438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40eeab48" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40eeab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ee9200"/>
        <function-ref name="readDone" scoped="" ref="0x40ee9478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40ee9b30" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40ee9b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40ee9d08"/>
        <function-ref name="getChannel" scoped="" ref="0x40ee9de8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40ee9ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40ee73c0" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ee73c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ee7598"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ee7678"/>
        <function-ref name="request" scoped="" ref="0x40ee7758"/>
        <function-ref name="granted" scoped="" ref="0x40ee7838"/>
        <function-ref name="isOwner" scoped="" ref="0x40ee7918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ee26c8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ee26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ee28a0"/>
        <function-ref name="configure" scoped="" ref="0x40ee2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40edcec0" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40edcec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40ee20c0"/>
        <function-ref name="dataReady" scoped="" ref="0x40ee21a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40ee0d38" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40ee0d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40ee0f10"/>
        <function-ref name="cancel" scoped="" ref="0x40ee3010"/>
        <function-ref name="dataReady" scoped="" ref="0x40ee30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ee43c0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ee43c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ee4598"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ee4678"/>
        <function-ref name="request" scoped="" ref="0x40ee4758"/>
        <function-ref name="granted" scoped="" ref="0x40ee4838"/>
        <function-ref name="isOwner" scoped="" ref="0x40ee4918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40eda388" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40eda388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40eda560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40ed9200" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40ed9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40ed93d8"/>
        <function-ref name="dataReady" scoped="" ref="0x40ed94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40edabc8" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40edabc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40edada0"/>
        <function-ref name="cancel" scoped="" ref="0x40edae80"/>
        <function-ref name="dataReady" scoped="" ref="0x40ed9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x40f03a78" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40f03a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40f03c50"/>
        <function-ref name="getAdmux" scoped="" ref="0x40f03d30"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40f03e10"/>
        <function-ref name="isEnabled" scoped="" ref="0x40f03ef0"/>
        <function-ref name="enableAdc" scoped="" ref="0x40ed8010"/>
        <function-ref name="setAdmux" scoped="" ref="0x40ed80f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40ed81d0"/>
        <function-ref name="isComplete" scoped="" ref="0x40ed82b0"/>
        <function-ref name="cancel" scoped="" ref="0x40ed8390"/>
        <function-ref name="disableAdc" scoped="" ref="0x40ed8470"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40ed8550"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40ed8630"/>
        <function-ref name="startConversion" scoped="" ref="0x40ed8710"/>
        <function-ref name="isStarted" scoped="" ref="0x40ed8870"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40ed8950"/>
        <function-ref name="setContinuous" scoped="" ref="0x40ed8a30"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40ed8b10"/>
        <function-ref name="getValue" scoped="" ref="0x40ed8bf0"/>
        <function-ref name="dataReady" scoped="" ref="0x40ed8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40eda738" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40eda738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40eda910"/>
        <function-ref name="stop" scoped="" ref="0x40eda9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40ed8ea8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40ed8ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40ed70c0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40ed71a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40ed7280"/>
        <function-ref name="actualMicro" scoped="" ref="0x40ed7360"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40ed7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40f1b010" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40f1b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40f1b1e8"/>
        <function-ref name="getAdmux" scoped="" ref="0x40f1b2c8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40f1b3a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x40f1b488"/>
        <function-ref name="enableAdc" scoped="" ref="0x40f1b568"/>
        <function-ref name="setAdmux" scoped="" ref="0x40f1b648"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40f1b728"/>
        <function-ref name="isComplete" scoped="" ref="0x40f1b808"/>
        <function-ref name="cancel" scoped="" ref="0x40f1b8e8"/>
        <function-ref name="disableAdc" scoped="" ref="0x40f1b9c8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40f1baa8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40f1bb88"/>
        <function-ref name="startConversion" scoped="" ref="0x40f1bc68"/>
        <function-ref name="isStarted" scoped="" ref="0x40f1bdc8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40f1bea8"/>
        <function-ref name="setContinuous" scoped="" ref="0x40f1a010"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40f1a0f0"/>
        <function-ref name="getValue" scoped="" ref="0x40f1a1d0"/>
        <function-ref name="dataReady" scoped="" ref="0x40f1a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40f1ac68" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40f1ac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40f1ae40"/>
        <function-ref name="getAdmux" scoped="" ref="0x40f1af20"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40f17018"/>
        <function-ref name="isEnabled" scoped="" ref="0x40f170f8"/>
        <function-ref name="enableAdc" scoped="" ref="0x40f171d8"/>
        <function-ref name="setAdmux" scoped="" ref="0x40f172b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40f17398"/>
        <function-ref name="isComplete" scoped="" ref="0x40f17478"/>
        <function-ref name="cancel" scoped="" ref="0x40f17558"/>
        <function-ref name="disableAdc" scoped="" ref="0x40f17638"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40f17718"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40f177f8"/>
        <function-ref name="startConversion" scoped="" ref="0x40f178d8"/>
        <function-ref name="isStarted" scoped="" ref="0x40f17a38"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40f17b18"/>
        <function-ref name="setContinuous" scoped="" ref="0x40f17bf8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40f17cd8"/>
        <function-ref name="getValue" scoped="" ref="0x40f17db8"/>
        <function-ref name="dataReady" scoped="" ref="0x40f17e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40f160e8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40f160e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40f162c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40f1c918" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40f1c918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40f1cb00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f1cbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40f188a0" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40f188a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40f18a88"/>
        <function-ref name="configure" scoped="" ref="0x40f18b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40f1cd20" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f1cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f1cef8"/>
        <function-ref name="requested" scoped="" ref="0x40f18010"/>
        <function-ref name="granted" scoped="" ref="0x40f180f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40f181d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f182b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f1c1d8" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f1c1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f1c3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f1c4a0"/>
        <function-ref name="request" scoped="" ref="0x40f1c580"/>
        <function-ref name="granted" scoped="" ref="0x40f1c660"/>
        <function-ref name="isOwner" scoped="" ref="0x40f1c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40f183f0" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40f183f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40f185c8"/>
        <function-ref name="userId" scoped="" ref="0x40f186a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413af850" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413af850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413afa28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x413afb88" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x413afb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x413afd60"/>
        <function-ref name="isEmpty" scoped="" ref="0x413afe40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x413aff20"/>
        <function-ref name="dequeue" scoped="" ref="0x413ad018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x413ac488" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x413ac488"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x413ac670"/>
        <function-ref name="immediateRequested" scoped="" ref="0x413ac750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x413ab3f8" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x413ab3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x413ab5e0"/>
        <function-ref name="configure" scoped="" ref="0x413ab6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x413ab820" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x413ab820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x413ab9f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x413abad8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x413abbb8"/>
        <function-ref name="dequeue" scoped="" ref="0x413abc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x413ac890" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413ac890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413aca68"/>
        <function-ref name="requested" scoped="" ref="0x413acb48"/>
        <function-ref name="granted" scoped="" ref="0x413acc28"/>
        <function-ref name="isOwner" scoped="" ref="0x413acd08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x413acde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x413abdd8" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x413abdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x413a9010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x413a90f0"/>
        <function-ref name="led1On" scoped="" ref="0x413a91d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x413a92b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x413a9390"/>
        <function-ref name="get" scoped="" ref="0x413a9470"/>
        <function-ref name="led1Off" scoped="" ref="0x413a9550"/>
        <function-ref name="led0On" scoped="" ref="0x413a98d0"/>
        <function-ref name="set" scoped="" ref="0x413a9710"/>
        <function-ref name="led2On" scoped="" ref="0x413a9630"/>
        <function-ref name="led2Off" scoped="" ref="0x413a97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413adcf0" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413adcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413aded8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413ac010"/>
        <function-ref name="request" scoped="" ref="0x413ac0f0"/>
        <function-ref name="granted" scoped="" ref="0x413ac1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x413ac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x413acf28" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x413acf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x413ab110"/>
        <function-ref name="userId" scoped="" ref="0x413ab1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x413a9a50" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x413a9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413a9c28"/>
        <function-ref name="runTask" scoped="" ref="0x413a9d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40f2c930" loc="72:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40f2c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40f2cb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40f2cc48" loc="73:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f2cc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f2ce20"/>
        <function-ref name="requested" scoped="" ref="0x40f2cf00"/>
        <function-ref name="granted" scoped="" ref="0x40f2b010"/>
        <function-ref name="isOwner" scoped="" ref="0x40f2b0f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f2b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40f2c538" loc="70:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40f2c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f2c710"/>
        <function-ref name="stop" scoped="" ref="0x40f2c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40f2b310" loc="74:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40f2b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40f2b4e8"/>
        <function-ref name="userId" scoped="" ref="0x40f2b5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x413d6920" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x413d6920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x413d6af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x413d6c38" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413d6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413d6e10"/>
        <function-ref name="requested" scoped="" ref="0x413d6ef0"/>
        <function-ref name="granted" scoped="" ref="0x413d5010"/>
        <function-ref name="isOwner" scoped="" ref="0x413d50f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x413d51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x413d6528" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x413d6528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413d6700"/>
        <function-ref name="stop" scoped="" ref="0x413d67e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x413d5310" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x413d5310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x413d54e8"/>
        <function-ref name="userId" scoped="" ref="0x413d55c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40ee5cc8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40ee5cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f51310"/>
        <function-ref name="readDone" scoped="" ref="0x40f51568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40f51c78" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40f51c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f4f2e8"/>
        <function-ref name="readDone" scoped="" ref="0x40f4f560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40f4e1b8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f4e1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40f4e390"/>
        <function-ref name="getChannel" scoped="" ref="0x40f4e470"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40f4e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x40f4f910" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40f4f910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40f4fae8"/>
        <function-ref name="cancel" scoped="" ref="0x40f4fbc8"/>
        <function-ref name="dataReady" scoped="" ref="0x40f4fca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x40f457c8" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x40f457c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f459a0"/>
        <function-ref name="runTask" scoped="" ref="0x40f45a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f63e78" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f63e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f704d8"/>
        <function-ref name="readDone" scoped="" ref="0x40f70740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40f70ba0" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40f70ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f621f0"/>
        <function-ref name="readDone" scoped="" ref="0x40f62458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40f627d8" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f627d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f629c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f62aa0"/>
        <function-ref name="request" scoped="" ref="0x40f62b80"/>
        <function-ref name="granted" scoped="" ref="0x40f62c60"/>
        <function-ref name="isOwner" scoped="" ref="0x40f62d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x413662c0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x413662c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3900"/>
            <typename><typedef-ref name="TMilli" ref="0x403a3ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41365db0"/>
        <function-ref name="fired" scoped="" ref="0x41365068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41365770"/>
        <function-ref name="isOneShot" scoped="" ref="0x41365518"/>
        <function-ref name="getdt" scoped="" ref="0x413642a0"/>
        <function-ref name="gett0" scoped="" ref="0x41364048"/>
        <function-ref name="isRunning" scoped="" ref="0x413652c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x413668e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41365a90"/>
        <function-ref name="startOneShot" scoped="" ref="0x41366b68"/>
        <function-ref name="stop" scoped="" ref="0x41366de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x40f7f0c0" loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x40f7f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f7f298"/>
        <function-ref name="disable" scoped="" ref="0x40f7f378"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40f7f458"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40f7f538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x40f7cd00" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x40f7cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f7ced8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x40f86ca8" loc="23:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x40f86ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f86e80"/>
        <function-ref name="isInput" scoped="" ref="0x40f85010"/>
        <function-ref name="toggle" scoped="" ref="0x40f850f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f851d0"/>
        <function-ref name="get" scoped="" ref="0x40f852b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f85390"/>
        <function-ref name="set" scoped="" ref="0x40f85470"/>
        <function-ref name="clr" scoped="" ref="0x40f85550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x40f84af0" loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x40f84af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f84cc8"/>
        <function-ref name="isInput" scoped="" ref="0x40f84da8"/>
        <function-ref name="toggle" scoped="" ref="0x40f84e88"/>
        <function-ref name="isOutput" scoped="" ref="0x40f83010"/>
        <function-ref name="get" scoped="" ref="0x40f830f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f831d0"/>
        <function-ref name="set" scoped="" ref="0x40f832b0"/>
        <function-ref name="clr" scoped="" ref="0x40f83390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x40f7b8b8" loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x40f7b8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f7ba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x40f7a090" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x40f7a090"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f7a368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x40f829f8" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x40f829f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f82bd0"/>
        <function-ref name="isInput" scoped="" ref="0x40f82cb0"/>
        <function-ref name="toggle" scoped="" ref="0x40f82d90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f82e70"/>
        <function-ref name="get" scoped="" ref="0x40f81010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f810f0"/>
        <function-ref name="set" scoped="" ref="0x40f811d0"/>
        <function-ref name="clr" scoped="" ref="0x40f812b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x40f7da30" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x40f7da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f7dc08"/>
        <function-ref name="isInput" scoped="" ref="0x40f7dce8"/>
        <function-ref name="toggle" scoped="" ref="0x40f7ddc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f7dea8"/>
        <function-ref name="get" scoped="" ref="0x40f7c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f7c0f0"/>
        <function-ref name="set" scoped="" ref="0x40f7c1d0"/>
        <function-ref name="clr" scoped="" ref="0x40f7c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x40f87870" loc="21:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x40f87870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f87a48"/>
        <function-ref name="isInput" scoped="" ref="0x40f87b28"/>
        <function-ref name="toggle" scoped="" ref="0x40f87c08"/>
        <function-ref name="isOutput" scoped="" ref="0x40f87ce8"/>
        <function-ref name="get" scoped="" ref="0x40f87dc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f87ea8"/>
        <function-ref name="set" scoped="" ref="0x40f86010"/>
        <function-ref name="clr" scoped="" ref="0x40f860f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x40f85730" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x40f85730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f85908"/>
        <function-ref name="isInput" scoped="" ref="0x40f859e8"/>
        <function-ref name="toggle" scoped="" ref="0x40f85ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f85ba8"/>
        <function-ref name="get" scoped="" ref="0x40f85c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f85d68"/>
        <function-ref name="set" scoped="" ref="0x40f85e48"/>
        <function-ref name="clr" scoped="" ref="0x40f85f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x40f7fea0" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x40f7fea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f7e0c0"/>
        <function-ref name="disable" scoped="" ref="0x40f7e1a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40f7e280"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40f7e360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x40f7b118" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x40f7b118"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f7b2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x40f7d010" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x40f7d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f7d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f7d2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f7d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f7d488"/>
        <function-ref name="get" scoped="" ref="0x40f7d568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f7d648"/>
        <function-ref name="set" scoped="" ref="0x40f7d728"/>
        <function-ref name="clr" scoped="" ref="0x40f7d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x40f83570" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x40f83570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f83748"/>
        <function-ref name="isInput" scoped="" ref="0x40f83828"/>
        <function-ref name="toggle" scoped="" ref="0x40f83908"/>
        <function-ref name="isOutput" scoped="" ref="0x40f839e8"/>
        <function-ref name="get" scoped="" ref="0x40f83ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f83ba8"/>
        <function-ref name="set" scoped="" ref="0x40f83c88"/>
        <function-ref name="clr" scoped="" ref="0x40f83d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x40f80918" loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x40f80918"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f80b70"/>
        <function-ref name="disable" scoped="" ref="0x40f80c50"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40f80d30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40f80e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x40f7a560" loc="51:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x40f7a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f7a738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x40f814a0" loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x40f814a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f81678"/>
        <function-ref name="isInput" scoped="" ref="0x40f81758"/>
        <function-ref name="toggle" scoped="" ref="0x40f81838"/>
        <function-ref name="isOutput" scoped="" ref="0x40f81918"/>
        <function-ref name="get" scoped="" ref="0x40f819f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f81ad8"/>
        <function-ref name="set" scoped="" ref="0x40f81bb8"/>
        <function-ref name="clr" scoped="" ref="0x40f81c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x40f862d0" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x40f862d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f864a8"/>
        <function-ref name="isInput" scoped="" ref="0x40f86588"/>
        <function-ref name="toggle" scoped="" ref="0x40f86668"/>
        <function-ref name="isOutput" scoped="" ref="0x40f86748"/>
        <function-ref name="get" scoped="" ref="0x40f86828"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f86908"/>
        <function-ref name="set" scoped="" ref="0x40f869e8"/>
        <function-ref name="clr" scoped="" ref="0x40f86ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x40f84118" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x40f84118"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f842f0"/>
        <function-ref name="isInput" scoped="" ref="0x40f843d0"/>
        <function-ref name="toggle" scoped="" ref="0x40f844b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f84590"/>
        <function-ref name="get" scoped="" ref="0x40f84670"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f84750"/>
        <function-ref name="set" scoped="" ref="0x40f84830"/>
        <function-ref name="clr" scoped="" ref="0x40f84910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x40f7b4e8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x40f7b4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f7b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x40f7bc88" loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x40f7bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f7be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x40f82010" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x40f82010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f821e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f822c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f823a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f82488"/>
        <function-ref name="get" scoped="" ref="0x40f82568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f82648"/>
        <function-ref name="set" scoped="" ref="0x40f82728"/>
        <function-ref name="clr" scoped="" ref="0x40f82808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x40f7f7b0" loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x40f7f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f7f988"/>
        <function-ref name="disable" scoped="" ref="0x40f7fa68"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40f7fb48"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40f7fc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x40f7e588" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x40f7e588"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f7e760"/>
        <function-ref name="isInput" scoped="" ref="0x40f7e840"/>
        <function-ref name="toggle" scoped="" ref="0x40f7e920"/>
        <function-ref name="isOutput" scoped="" ref="0x40f7ea00"/>
        <function-ref name="get" scoped="" ref="0x40f7eae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f7ebc0"/>
        <function-ref name="set" scoped="" ref="0x40f7eca0"/>
        <function-ref name="clr" scoped="" ref="0x40f7ed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x40f7a930" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x40f7a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f7ab08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x40f8ae80" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x40f8ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f87070"/>
        <function-ref name="isInput" scoped="" ref="0x40f87150"/>
        <function-ref name="toggle" scoped="" ref="0x40f87230"/>
        <function-ref name="isOutput" scoped="" ref="0x40f87310"/>
        <function-ref name="get" scoped="" ref="0x40f873f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f874d0"/>
        <function-ref name="set" scoped="" ref="0x40f875b0"/>
        <function-ref name="clr" scoped="" ref="0x40f87690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x40f81e88" loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x40f81e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f80070"/>
        <function-ref name="isInput" scoped="" ref="0x40f80150"/>
        <function-ref name="toggle" scoped="" ref="0x40f80230"/>
        <function-ref name="isOutput" scoped="" ref="0x40f80310"/>
        <function-ref name="get" scoped="" ref="0x40f803f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f804d0"/>
        <function-ref name="set" scoped="" ref="0x40f805b0"/>
        <function-ref name="clr" scoped="" ref="0x40f80690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x40f794b8" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x40f794b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f79690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x40f75060" loc="21:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x40f75060"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f75238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x40f75800" loc="23:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x40f75800"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f759d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x40f79888" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x40f79888"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f79a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x40f75bd0" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x40f75bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f75da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x40f79c58" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x40f79c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f79e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x40f75430" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x40f75430"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f75608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x40f74010" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x40f74010"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f741e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40fa4010" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40fa4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fa41e8"/>
        <function-ref name="fired" scoped="" ref="0x40fa42c8"/>
        <function-ref name="disable" scoped="" ref="0x40fa43a8"/>
        <function-ref name="edge" scoped="" ref="0x40fa4488"/>
        <function-ref name="enable" scoped="" ref="0x40fa4568"/>
        <function-ref name="getValue" scoped="" ref="0x40fa4648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40fa5960" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40fa5960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40fa5b38"/>
        <function-ref name="disable" scoped="" ref="0x40fa5c18"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40fa5cf8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40fa5dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40fa10b0" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40fa10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fa1288"/>
        <function-ref name="fired" scoped="" ref="0x40fa1368"/>
        <function-ref name="disable" scoped="" ref="0x40fa1448"/>
        <function-ref name="edge" scoped="" ref="0x40fa1528"/>
        <function-ref name="enable" scoped="" ref="0x40fa1608"/>
        <function-ref name="getValue" scoped="" ref="0x40fa16e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40fa2aa0" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40fa2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40fa2c78"/>
        <function-ref name="disable" scoped="" ref="0x40fa2d58"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40fa2e38"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40fa2f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40f9f190" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40f9f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f9f368"/>
        <function-ref name="fired" scoped="" ref="0x40f9f448"/>
        <function-ref name="disable" scoped="" ref="0x40f9f528"/>
        <function-ref name="edge" scoped="" ref="0x40f9f608"/>
        <function-ref name="enable" scoped="" ref="0x40f9f6e8"/>
        <function-ref name="getValue" scoped="" ref="0x40f9f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40fa0b50" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40fa0b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40fa0d28"/>
        <function-ref name="disable" scoped="" ref="0x40fa0e08"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40fa0ee8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40f9f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40f9d270" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40f9d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f9d448"/>
        <function-ref name="fired" scoped="" ref="0x40f9d528"/>
        <function-ref name="disable" scoped="" ref="0x40f9d608"/>
        <function-ref name="edge" scoped="" ref="0x40f9d6e8"/>
        <function-ref name="enable" scoped="" ref="0x40f9d7c8"/>
        <function-ref name="getValue" scoped="" ref="0x40f9d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40f9ec30" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40f9ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f9ee08"/>
        <function-ref name="disable" scoped="" ref="0x40f9eee8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40f9d010"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40f9d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40f958d0" loc="38:PhotoTempConfigC.nc">
      <component-ref qname="PhotoTempConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f958d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40f95aa8"/>
        <function-ref name="getChannel" scoped="" ref="0x40f95b88"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40f95c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x40f92a18" loc="17:PhotoTempConfigP.nc">
      <component-ref qname="PhotoTempConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x40f92a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f92bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40f92418" loc="16:PhotoTempConfigP.nc">
      <component-ref qname="PhotoTempConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f92418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40f925f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40f926d0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40f927b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40e4c468" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40e4c468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e4caa0"/>
        <function-ref name="readDone" scoped="" ref="0x40e4cd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40f93188" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40f93188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f937c0"/>
        <function-ref name="readDone" scoped="" ref="0x40f93a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40f93da8" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f93da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fc4010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fc40f0"/>
        <function-ref name="request" scoped="" ref="0x40fc41d0"/>
        <function-ref name="granted" scoped="" ref="0x40fc42b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40fc4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40e23d20" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e23d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e23ef8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e52010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e520f0"/>
        <function-ref name="cancel" scoped="" ref="0x40e521d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e522b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e523f0" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e523f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e525c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e526a8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e52788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e52868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e52948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e52a88" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e52a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e52c60"/>
        <function-ref name="source" scoped="" ref="0x40e52d40"/>
        <function-ref name="address" scoped="" ref="0x40e52e20"/>
        <function-ref name="destination" scoped="" ref="0x40e52f00"/>
        <function-ref name="setSource" scoped="" ref="0x40fc2010"/>
        <function-ref name="setDestination" scoped="" ref="0x40fc20f0"/>
        <function-ref name="type" scoped="" ref="0x40fc21d0"/>
        <function-ref name="setType" scoped="" ref="0x40fc22b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40fc2390"/>
        <function-ref name="setGroup" scoped="" ref="0x40fc2470"/>
        <function-ref name="localGroup" scoped="" ref="0x40fc2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40fc26b0" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40fc26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40fc2888"/>
        <function-ref name="noAck" scoped="" ref="0x40fc2968"/>
        <function-ref name="wasAcked" scoped="" ref="0x40fc2a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413b8aa0" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413b8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413b8c78"/>
        <function-ref name="getPayload" scoped="" ref="0x413b8d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413b8e38"/>
        <function-ref name="cancel" scoped="" ref="0x413b8f18"/>
        <function-ref name="sendDone" scoped="" ref="0x413fc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x413fc150" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x413fc150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413fc328"/>
        <function-ref name="payloadLength" scoped="" ref="0x413fc408"/>
        <function-ref name="getPayload" scoped="" ref="0x413fc4e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413fc5c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413fc6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x413fc7e8" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413fc7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413fc9c0"/>
        <function-ref name="source" scoped="" ref="0x413fcaa0"/>
        <function-ref name="address" scoped="" ref="0x413fcb80"/>
        <function-ref name="destination" scoped="" ref="0x413fcc60"/>
        <function-ref name="setSource" scoped="" ref="0x413fcd40"/>
        <function-ref name="setDestination" scoped="" ref="0x413fce20"/>
        <function-ref name="type" scoped="" ref="0x413fcf00"/>
        <function-ref name="setType" scoped="" ref="0x413fb010"/>
        <function-ref name="isForMe" scoped="" ref="0x413fb0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x413fb1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x413fb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x413fb410" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x413fb410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x413fb5e8"/>
        <function-ref name="noAck" scoped="" ref="0x413fb6c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x413fb7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413f6538" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413f6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413f6710"/>
        <function-ref name="getPayload" scoped="" ref="0x413f67f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413f68d0"/>
        <function-ref name="cancel" scoped="" ref="0x413f69b0"/>
        <function-ref name="sendDone" scoped="" ref="0x413f6a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x413f6c00" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x413f6c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413f6dd8"/>
        <function-ref name="getPayload" scoped="" ref="0x413f6eb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413f5010"/>
        <function-ref name="cancel" scoped="" ref="0x413f50f0"/>
        <function-ref name="sendDone" scoped="" ref="0x413f51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x413f5310" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413f5310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413f54e8"/>
        <function-ref name="source" scoped="" ref="0x413f55c8"/>
        <function-ref name="address" scoped="" ref="0x413f56a8"/>
        <function-ref name="destination" scoped="" ref="0x413f5788"/>
        <function-ref name="setSource" scoped="" ref="0x413f5868"/>
        <function-ref name="setDestination" scoped="" ref="0x413f5948"/>
        <function-ref name="type" scoped="" ref="0x413f5a28"/>
        <function-ref name="setType" scoped="" ref="0x413f5b08"/>
        <function-ref name="isForMe" scoped="" ref="0x413f5be8"/>
        <function-ref name="setGroup" scoped="" ref="0x413f5cc8"/>
        <function-ref name="localGroup" scoped="" ref="0x413f5da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fbf430" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fbf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fbf608"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fbf6e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fbf7c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fbf8a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fbf988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40fbf118" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40fbf118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fbf2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fbfac8" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fbfac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fbfca0"/>
        <function-ref name="source" scoped="" ref="0x40fbfd80"/>
        <function-ref name="address" scoped="" ref="0x40fbfe60"/>
        <function-ref name="destination" scoped="" ref="0x40fbc010"/>
        <function-ref name="setSource" scoped="" ref="0x40fbc0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40fbc1d0"/>
        <function-ref name="type" scoped="" ref="0x40fbc2b0"/>
        <function-ref name="setType" scoped="" ref="0x40fbc390"/>
        <function-ref name="isForMe" scoped="" ref="0x40fbc470"/>
        <function-ref name="setGroup" scoped="" ref="0x40fbc550"/>
        <function-ref name="localGroup" scoped="" ref="0x40fbc630"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x40447770" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40447770"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x404478d8" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404478d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40451b60" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404478d8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40451a08" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x4044f620" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4044f4c8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40451010" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40447e08" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40450170" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404478d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4044fd70" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40450010" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404478d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403efcd0" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GlobalTime" loc="37:/opt/tinyos-2.1.2/tos/lib/ftsp/GlobalTime.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x404361e0" loc="37:/opt/tinyos-2.1.2/tos/lib/ftsp/GlobalTime.nc">
          <interfacedef-ref qname="GlobalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404361e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getLocalTime" ref="0x40436720" loc="42:/opt/tinyos-2.1.2/tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Returns the current local time of this mote.</short>
          <long>&#10; Returns the current local time of this mote.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="global2Local" ref="0x40449d58" loc="76:/opt/tinyos-2.1.2/tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Converts the global time given in &#60;code>time&#60;/code> into the&#10; correspoding local time and stores this again in&#10; &#60;code>time&#60;/code>.</short>
          <long>&#10; Converts the global time given in &#60;code>time&#60;/code> into the&#10; correspoding local time and stores this again in&#10; &#60;code>time&#60;/code>. This method performs the inverse of the&#10; &#60;code>local2Global&#60;/clode> transformation.&#10;&#10; @return SUCCESS if this mote is synchronized, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40449c00" loc="76:/opt/tinyos-2.1.2/tos/lib/ftsp/GlobalTime.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalTime" ref="0x40436d80" loc="49:/opt/tinyos-2.1.2/tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Reads the current global time.</short>
          <long>&#10; Reads the current global time. This method is a combination&#10; of &#60;code>getLocalTime&#60;/code> and &#60;code>local2Global&#60;/code>.&#10; @return SUCCESS if this mote is synchronized, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40436c28" loc="49:/opt/tinyos-2.1.2/tos/lib/ftsp/GlobalTime.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="local2Global" ref="0x404494a8" loc="66:/opt/tinyos-2.1.2/tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/ftsp/GlobalTime.nc">
          <short>&#10; Converts the local time given in &#60;code>time&#60;/code> into the&#10; corresponding global time and stores this again in&#10; &#60;code>time&#60;/code>.</short>
          <long>&#10; Converts the local time given in &#60;code>time&#60;/code> into the&#10; corresponding global time and stores this again in&#10; &#60;code>time&#60;/code>. The following equation is used to compute the&#10; conversion:&#10;&#10;&#9;globalTime = localTime + offset + skew * (localTime - syncPoint)&#10;&#10; The skew is normalized to 0.0 (1.0 is subtracted) to increase the&#10; machine precision. The syncPoint value is periodically updated to&#10; increase the machine precision of the floating point arithmetic and&#10; also to allow time wrap.&#10;&#10; @return SUCCESS if this mote is synchronized, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40449350" loc="66:/opt/tinyos-2.1.2/tos/lib/ftsp/GlobalTime.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x4042aac0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4042a560" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4042a778" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4042a958" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404307a0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40430440" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40430620" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40428de8" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404277b0" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40427658" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404284e0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40428188" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40428380" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40441788" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40441630" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4044c188" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4044c030" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4044a208" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4044be88" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4044a088" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4044b8a0" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4044cde8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4044caa8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4044cc88" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x403f33f8" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403f32a0" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x403fa168" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403fa010" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x403f6ba8" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403f3908" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x404386f0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x404386f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40438ba0" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4043f360" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x404386f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4043f030" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4043f200" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x404386f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncInfo" loc="36:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncInfo.nc">
      <function command="" provided="0" name="getSyncPoint" ref="0x404461d8" loc="55:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the local time of the last synchronization point.</short>
          <long>&#10; Returns the local time of the last synchronization point. This &#10; value is close to the current local time and updated when a new&#10; time synchronization message arrives.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRootID" ref="0x40446700" loc="60:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the current root to which this node is synchronized.</short>
          <long>&#10; Returns the current root to which this node is synchronized. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSeqNum" ref="0x40446bb0" loc="65:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the latest seq number seen from the current root.</short>
          <long>&#10; Returns the latest seq number seen from the current root.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOffset" ref="0x4043e848" loc="41:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns current offset of the local time wrt global time.</short>
          <long>&#10; Returns current offset of the local time wrt global time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNumEntries" ref="0x4044e090" loc="71:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the number of entries stored currently in the &#10; regerssion table.</short>
          <long>&#10; Returns the number of entries stored currently in the &#10; regerssion table.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeartBeats" ref="0x4044e580" loc="76:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns the value of heartBeats variable.</short>
          <long>&#10; Returns the value of heartBeats variable. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSkew" ref="0x4043ec90" loc="48:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10; Returns current skew of the local time wrt global time.</short>
          <long>&#10; Returns current skew of the local time wrt global time.&#10; This value is normalized to 0.0 (1.0 is subtracted) to get maximum &#10; representation precision.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-float cname="float" size="I:4" alignment="I:1"></type-float>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40434af0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40434af0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4043a250" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404320c8" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40431220" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40432ec0" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404310c0" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40432a18" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4043abc8" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4043a698" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40432558" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40435168" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40435010" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40431c08" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404318c0" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40431aa8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40435800" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404356a8" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40435cd0" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x4042c378" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
              <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4042ed98" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4042c010" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4042c1f0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4043c460" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x4043c8a8" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x4043cd28" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x404445b0" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x404432b8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40443760" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40444168" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40443ea0" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40443d48" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4043c038" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40444a30" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40444e58" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4047f4a8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x40484770" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40484618" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4047cdd0" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x40486430" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404862d8" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x40486af8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404869a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40484070" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x40491b50" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x40490010" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x404913c0" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x404907e0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40491780" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x404903e8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40489c40" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x40491010" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40353390" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40353c98" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x403537d0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40354b68" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40359090" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403cc7e0" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403e1bb0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40393340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403dce70" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x40591de0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40591a48" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x40591c80" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x40590978" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40590820" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x40591570" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x40594dd8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x40594c80" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40589020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40576eb0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40589b18" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405899c0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x405875b8" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40587460" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4057e310" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40420d38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4057e1b8" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40583bc0" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40583a68" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40577af0" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x405831c0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40583068" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40582500" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40582198" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405823a0" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x405817d0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40581468" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40581670" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4057fca0" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4057fb48" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4057d808" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4057d4d8" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4057d6a8" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40420ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4057f168" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4057f010" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4058b010" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40420d38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4057ec30" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4057ee30" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40420d38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4058b888" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40420d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x405aa010" loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ace58" loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x405ade78" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405add20" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x405ad010" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x405aede0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x405ae858" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x405ae700" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x405ad608" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x405ad4b0" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x405ac788" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ac630" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x405b4988" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x405b4610" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405b4828" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x405a4988" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405a4630" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x405a4828" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x405a2988" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405a2608" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x405a2828" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x405a3020" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x40211630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405a4eb8" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x405a2010" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405a3e30" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x405a4168" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405a4010" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x405a36e8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405a3590" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x405a8960" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a8808" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x405a5d50" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a59b8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x405a5bf0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x405a8010" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b7e70" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x405b7950" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b75b8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x405b77f0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x405b62a0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b6148" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x405af1c0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405af068" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x405b0e08" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b0ac8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405b0ca8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405baa18" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ba6b8" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405ba898" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405ba158" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405bbb38" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bb9e0" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405b9820" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b94c8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405b96c0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x405bd138" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x405be7d8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x405be1d8" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x405bec88" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x405bd830" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x405cadc8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405caa80" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x405cac68" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405d2908" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x405d0068" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x405d1858" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x405d1d00" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405d1ee0" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405d1368" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405d1010" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405d1208" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x405d2430" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x405d22d8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x405c9dd8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x405c9930" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x405d54d0" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405d5998" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x405dbba8" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dba30" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x405db568" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x403f7170"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x403fe188"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405db3d0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x405da698" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x403fe848"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x403fd790"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405da500" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x405c8e48" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x405d6138" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x405d7ca0" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x405c8010" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x405c8970" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x405d7370" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x405d7830" loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x405c8518" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x405e7e60" loc="71:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x405e7010" loc="56:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x405e79f8" loc="66:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x405e78a0" loc="66:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x405e7428" loc="61:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x405d94c0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x405d9368" loc="45:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x405d9b28" loc="51:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x405d99d0" loc="51:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x406174c8" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x40617160" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x40617368" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x406197a8" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x406191c8" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x4061ada8" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x40619068" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x4060a618" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4060a4c0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x40619cc0" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x40609ec0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x40609d68" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40609010" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4060ae58" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x40616010" loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x4061a898" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x4061a740" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x40617ae8" loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x40609458" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x40593cd8"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x4058d1b8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x406098e8" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x4060a010" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4060aa28" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x4061a310" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x4062ae28" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403fae50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4062acd0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x406324e0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403fae50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40632388" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x40622a60" loc="48:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x40593cd8"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x4058d1b8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406215f0" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406215f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40621758" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40621758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4061ca20" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40621758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4061d6e0" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4061c3d8" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40621758"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40621758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4061c088" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40621758"/></type-var>
          </variable>
          <variable name="dt" ref="0x4061c278" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40621758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4061db50" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x4061ceb0" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40621758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40621d88" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40621758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40621c30" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40621758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4061d280" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40626918" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x406241a8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40626d88" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40420d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40626428" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40420d38"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x406260c0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40420d38"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x406262c8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x40630738" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403fae50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x406358c8" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403fae50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40635088" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40635560" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40635760" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40634708" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403fae50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40635e70" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x406343a0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x406345a0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40627138" loc="68:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40628cb8" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x406288a8" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x40628340" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x4069f4c8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c38e0"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403c3b08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x406a2e68" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bdc30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403bde58"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406a2d10" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bdc30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403bde58"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406a1980" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c4398"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403c45c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x406a57d0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b9aa8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403b9cd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x4069f010" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c4398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403c45c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x406a1e38" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c4398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403c45c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x4069fad8" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c38e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403c3b08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x4069f980" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c38e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403c3b08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x406a21d8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bb2c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403bb4e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x406a5cf0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bdc30"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403bde58"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x406a2820" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b9aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403b9cd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406a26c8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b9aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403b9cd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x406a14c0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bb2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403bb4e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406a1368" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bb2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403bb4e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406a4cb8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a4cb8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x406af7c8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x406af670" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4069cdc8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4069d1c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a4cb8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x4069dd18" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a4cb8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4069dbc0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a4cb8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4069c1a8" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406af240" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4069d740" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a4cb8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4069d5e8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a4cb8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4069c5b0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4069c9a8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x4069ecd8" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4069ecd8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x406a9c38" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406abbb8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406ab1f0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4069ecd8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406a9010" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406a80c8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406ab778" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4069ecd8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406ab620" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4069ecd8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406a9418" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406a9810" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40699820" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40699820"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40693010" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40694750" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40699d10" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40699820"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x406935a0" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40693448" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40693a30" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40696b08" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406966e8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40694bb8" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406962b8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40699820"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40696160" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40699820"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40696f10" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40694328" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x406b4440" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403abb80"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403abda8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406b29e8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b5c80"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403b5ea8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406b4f18" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403af560"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403af788"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x406b2538" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403af560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403af788"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x406b23e0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403af560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403af788"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406b1010" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b5c80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403b5ea8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x406b2e98" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b5c80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403b5ea8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x406b4a60" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403abb80"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403abda8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406b4908" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403abb80"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403abda8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x406c2b88" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x406c0070" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x406c2770" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x406c0530" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x406b5c58" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b1d10"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x403b0010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x406c2290" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b1d10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x403b0010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x406c2138" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b1d10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x403b0010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4077ddb8" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4077ddb8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4077df20" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4077df20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4078f420" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4077df20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4078fe48" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4078f948" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4078e268" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x407e2e20" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x407dd7e8" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x407dd3a0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x407dd248" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x407e2918" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x407fac58" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407f9ba0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x407fa860" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x407f96d8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x407f9580" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x407fa458" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x407f90c8" loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40804f00" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x40840290" loc="24:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x40840780" loc="31:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x40840c60" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x40862c88" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40862928" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40862b28" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x4085f390" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40860e20" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4085f030" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4085f228" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40860600" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403fae50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408602a0" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x408604a0" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x40862098" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403fae50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4084cd28" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4084cf28" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40861a48" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408614e8" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x408616e8" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x408618e0" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40868068" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x4086bae0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x4086bcf8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4086bee8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408676b0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40868f18" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40867148" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40867338" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40867540" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x4086cc98" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x4086cb40" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x408bcf08" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408bcdb0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x408b9b18" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408b99c0" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x408b9440" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x408b8188" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408b8030" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x408c9b60" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x408de2b8" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x408c5438" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x408de8a0" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x408de748" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x408c9710" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x408c33a0" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x408c3248" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x408c6658" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x408c6500" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x408c7478" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x408dca10" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x408dc8b8" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x408c6ab0" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x408dd280" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x408dd128" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x408ddb08" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x408c3e30" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x408c3cd8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x408dc480" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x408c59c8" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x408c5870" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x408c7a10" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408c78b8" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x408c5018" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x408c6ea8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x408c3850" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x408decc8" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x408dd690" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x408dc010" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x408c5e00" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x408c7010" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x408c6010" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408c7e80" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x408da7b8" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x408dacb8" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x409162f0" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x409167d8" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x409449a8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40941010" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40943c90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x409437d0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40939618" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4093d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x409394c0" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4093d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x4093a2a8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x4093a968" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4093d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4093a810" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4093d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4093af18" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x4093d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x409fd650" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40a15840" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40a152c0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x40a156e0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x40a18e08" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x40a18988" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40a18830" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x40a21a70" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a21918" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40a21168" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a21010" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40a20c58" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a20b00" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a20370" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a20218" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40af25f0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40af25f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40af2ad0" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40be47a8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40be47a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40be4df8" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40be47a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40be4ca0" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40be47a8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncMode" loc="44:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncMode.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncMode.nc">
        <short>&#10; the time sync module can work in two modes:&#10;            - TS_TIMER_MODE (default): TS msgs sent period.</short>
        <long>&#10; the time sync module can work in two modes:&#10;            - TS_TIMER_MODE (default): TS msgs sent period. from the timer&#10;            - TS_USER_MODE: TS msgs sent only when explic. asked by user &#10;                            via TimeSyncMode.send() command, TimeSync.Timer &#10;                            is stopped in this mode&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40cc4d48" loc="61:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncMode.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncMode.nc">
          <short>&#10; command to send out time synchronization message.</short>
          <long>&#10; command to send out time synchronization message.&#10; returns FAIL if TimeSync not in TS_USER_MODE&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40cc4908" loc="55:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncMode.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncMode.nc">
          <short>&#10; Gets the current mode of the TimeSync module.</short>
          <long>&#10; Gets the current mode of the TimeSync module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x40cc4490" loc="50:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncMode.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncMode.nc">
          <short>&#10; Sets the current mode of the TimeSync module.</short>
          <long>&#10; Sets the current mode of the TimeSync module.&#10; returns FAIL if didn't succeed&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40cc4338" loc="50:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncMode.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncNotify" loc="41:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncNotify.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncNotify.nc">
        <short>&#10; time sync module (TimeSyncM) provides notification of arriving&#10; and transmitted time-sync msgs through TimeSyncNotify interface:&#10;</short>
      </documentation>
      <function event="" provided="0" name="msg_received" ref="0x40cc6b50" loc="46:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncNotify.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncNotify.nc">
          <short>&#10; fired when time-sync msg is received and accepted&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncNotify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="msg_sent" ref="0x40cee010" loc="52:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncNotify.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/ftsp/TimeSyncNotify.nc">
          <short>&#10; fired when time-sync msg is sent by TimeSyncM or the sending did not&#10; succeed&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncNotify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="44:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40ce9a00" loc="44:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40ce9a00"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40ce9b68" loc="44:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ce9b68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x40ce6830" loc="64:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10; parameter holds the time of some event as expressed in the local clock of&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10; @param addr         address to which to send the packet&#10; @param msg          the packet&#10; @param len          the length of the data in the packet payload&#10; @param event_time&#9;  the synchronization point to be transfered with the message&#10; @return             SUCCESS if the request to send succeeded and a&#10;                     sendDone will be signaled later, EBUSY if the&#10;                     abstraction cannot send now but will be able to&#10;                     later, or FAIL if the communication layer is not&#10;                     in a state that can send (e.g., off).&#10; @see sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ce9b68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40ce6088" loc="64:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4041f010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40ce62a0" loc="64:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ce6480" loc="64:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0x40ce66c0" loc="64:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ce9b68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40ce3ad0" loc="114:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ce3770" loc="114:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ce3950" loc="114:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40ce3210" loc="103:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="95:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40ce5220" loc="80:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ce50c8" loc="80:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40ce5c00" loc="93:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ce58a8" loc="93:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40ce5aa0" loc="93:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="37:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x40cde240" loc="37:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40cde240"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40cde3a8" loc="37:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40cde3a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0x40cdea10" loc="48:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.</short>
          <long>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10; Under certain circumstances the received message cannot be properly&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10; on the receiver side. In this case, this command returns FALSE.&#10; This command MUST BE called only on the receiver side and only for&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10; that this command be called from the receive event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cde8b8" loc="48:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0x40cda220" loc="58:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; This command should be called by the receiver of a message.</short>
          <long>&#10; This command should be called by the receiver of a message. The time&#10; of the synchronization event is returned as expressed in the local&#10; clock of the caller. This command MUST BE called only on the receiver&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10; It is recommended that this command be called from the receive event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40cde3a8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cda0c8" loc="58:/opt/tinyos-2.1.2/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4042b308"/>
                <typename><typedef-ref name="message_t" ref="0x4042a0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x40e43b80" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40e43688" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x40e40090" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40e3deb0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40e3a8f0" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40e3d980" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40e3a418" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40e3aec8" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x40e90ef8" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40ea2aa0" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40ea2aa0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40e9f010" loc="58:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40e9f7e0" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40ea2aa0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40e9f4b0" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40356628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40e9f680" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40ea2aa0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40edd6a8" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40ee3e70" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40edd0f0" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40edd318" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40edd538" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40edca40" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40edc010" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40edc200" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x40edc408" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x40edc660" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x40edc8c8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40ee19e8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40ee1208" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40ee1430" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40ee1658" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40ee1878" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40ee0a48" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40ee04c0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ee0170" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40ee0360" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x40f067e0" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x40ed9e50" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4039e6b0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x4039e938"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x40f05c88" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40f05b30" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40f06ca0" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x40ed4920" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x40ed6490" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4039e6b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4039e938"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x40ed6338" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4039e6b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4039e938"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x40ed31a8" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x40f055e0" loc="133:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40f03158" loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x40ed4d20" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x40ed3a30" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x40ed3600" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x40ed3e68" loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x40f05138" loc="127:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x40ed4010" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403a4900"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403a4ca8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x40ed6e50" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403a4900"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403a4ca8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x40f063e0" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x40ed6978" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403a4900"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403a4ca8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40ed44c0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40f038a8" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40f03750" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x40f7caa8" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40211b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
